// this file was auto-generated by wrapit v1.6.0
#include "jlcxx/jlcxx.hpp"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

#include "jlGeant4.h"

#include <regex>

#include "dbg_msg.h"
#include "Wrapper.h"

class JlG4ParticleDefinition;
class JlG4String;
class JlG4ProcessManager;
class JlG4ParticleTable;
class JlG4PDefManager;
class JlG4FieldManager;
class JlG4Field;
class JlG4MagneticField;
class JlG4Track;
class JlG4HCofThisEvent;
class JlG4VHitsCollection;
class JlCLHEP_Hep3Vector;
class JlCLHEP_HepRotation;
class JlCLHEP_HepAxisAngle;
class JlCLHEP_HepEulerAngles;
class JlCLHEP_HepRotationX;
class JlCLHEP_HepRotationY;
class JlCLHEP_HepRotationZ;
class JlCLHEP_HepRep3x3;
class JlCLHEP_HepRotation_HepRotation_row;
class JlCLHEP_HepLorentzVector;
class JlCLHEP_HepRep4x4;
class JlCLHEP_HepBoost;
class JlCLHEP_HepLorentzRotation;
class JlG4PVData;
class JlG4VPhysicalVolume;
class JlG4LogicalVolume;
class JlG4VPVParameterisation;
class JlHepGeom_Transform3D;
class JlHepGeom_Transform3D_Transform3D_row;
class JlHepGeom_Point3D;
class JlHepGeom_Scale3D;
class JlHepGeom_Rotate3D;
class JlHepGeom_Translate3D;
class JlHepGeom_Vector3D;
class JlHepGeom_RotateX3D;
class JlHepGeom_RotateY3D;
class JlHepGeom_RotateZ3D;
class JlHepGeom_TranslateX3D;
class JlHepGeom_TranslateY3D;
class JlHepGeom_TranslateZ3D;
class JlHepGeom_Reflect3D;
class JlHepGeom_Normal3D;
class JlHepGeom_ReflectX3D;
class JlHepGeom_ReflectY3D;
class JlHepGeom_ReflectZ3D;
class JlHepGeom_ScaleX3D;
class JlHepGeom_ScaleY3D;
class JlHepGeom_ScaleZ3D;
class JlG4AffineTransform;
class JlG4NavigationHistory;
class JlG4LVData;
class JlG4VSolid;
class JlG4VSensitiveDetector;
class JlG4Material;
class JlG4MaterialCutsCouple;
class JlG4UserLimits;
class JlG4SmartVoxelHeader;
class JlG4Region;
class JlG4VisAttributes;
class JlG4FastSimulationManager;
class JlG4TouchableHistory;
class JlG4Isotope;
class JlG4Element;
class JlG4IonisParamElm;
class JlG4MaterialPropertiesTable;
class JlG4PhysicsFreeVector;
class JlG4IonisParamMat;
class JlG4SandiaTable;
class JlG4StepPoint;
class JlG4ReferenceCountedHandle;
class JlG4VProcess;
class JlG4Step;
class JlG4DynamicParticle;
class JlG4VUserTrackInformation;
class JlG4VReadOutGeometry;
class JlG4VSDFilter;
class JlG4VUserDetectorConstruction;
class JlG4VUserActionInitialization;
class JlG4VSteppingVerbose;
class JlG4VUserPrimaryGeneratorAction;
class JlG4Event;
class JlG4UserSteppingAction;
class JlG4SteppingManager;
class JlG4VPrimaryGenerator;
class JlG4PrimaryParticle;
class JlG4PrimaryVertex;
class JlG4ParticleGun;
class JlG4UserWorkerInitialization;
class JlG4LogicalVolumeStore;
class JlG4VNotifier;
class JlG4VStateDependent;
class JlG4Run;
class JlCLHEP_Hep2Vector;
class JlG4VExceptionHandler;
class JlG4JLExceptionHandler;
class JlG4JLSensDet;
class JlG4JLDetectorConstruction;
class JlG4JLActionInitialization;
class JlG4UserRunAction;
class JlG4UserEventAction;
class JlG4UserStackingAction;
class JlG4UserTrackingAction;
class JlG4JLParticleGun;
class JlG4JLWorkerInitialization;
class JlG4JLGeneratorAction;
class JlG4JLMagField;
class JlG4JLSteppingAction;
class JlG4JLTrackingAction;
class JlG4JLRunAction;
class JlG4JLEventAction;
class JlG4JLStackingAction;
class JlG4JLStateDependent;
class JlG4PolyconeSideRZ;
class JlG4VCSGfaceted;
class JlG4Polycone;
class JlG4GenericPolycone;
class JlG4PolyhedraSideRZ;
class JlG4Polyhedra;
class Jlstd_pair;
class JlG4VTrajectory;
class JlG4VTrajectoryPoint;
class JlG4AttValue;
class JlG4TrajectoryContainer;
class JlG4DCofThisEvent;
class JlG4VUserEventInformation;
class JlG4SubEvent;
class JlG4Polyhedron;
class JlG4DisplacedSolid;
class JlG4Navigator;
class JlG4VExternalNavigation;
class JlG4VoxelNavigation;
class JlCLHEP_HepRandomEngine;
class JlCLHEP_HepRandom;
class JlCLHEP_RandFlat;
class JlCLHEP_RandExponential;
class JlCLHEP_RandBit;
class JlCLHEP_RandGamma;
class JlCLHEP_RandGaussQ;
class JlCLHEP_RandGeneral;
class JlCLHEP_RandPoissonQ;
class JlG4VParticleChange;
class JlG4ProcessVector;
class JlG4EventManager;
class JlG4StackManager;
class JlG4TrackingManager;
class JlG4PrimaryTransformer;
class JlG4RunManager;
class JlG4VUserPhysicsList;
class JlG4MTRunManager;
class JlG4ScoringManager;
class JlG4RunManagerKernel;
class JlG4MTRunManagerKernel;
class JlG4UImanager;
class JlG4UIcommand;
class JlG4SPSPosDistribution;
class JlG4SPSRandomGenerator;
class JlG4SPSAngDistribution;
class JlG4SPSEneDistribution;
class JlG4SingleParticleSource;
class JlG4GeneralParticleSource;
class JlG4VFastSimulationModel;
class JlG4NistManager;
class JlG4ICRU90StoppingData;
class JlG4CSGSolid;
class JlG4SteppingVerbose;
class JlG4PVPlacement;
class JlG4ReplicaData;
class JlG4PVReplica;
class JlG4TransportationManager;
class JlG4SafetyHelper;
class JlG4GDMLAuxStructType;
class JlG4Box;
class JlG4ExtrudedSolid;
class JlG4ExtrudedSolid_ZSection;
class JlG4MultiUnion;
class JlG4Voxelizer;
class JlG4Trd;
class JlTrapSidePlane;
class JlG4Trap;
class JlG4Cons;
class JlG4Sphere;
class JlG4Orb;
class JlG4Ellipsoid;
class JlG4PolyconeHistorical;
class JlG4PolyhedraHistorical;
class JlG4Torus;
class JlG4Para;
class JlG4Hype;
class JlG4Tubs;
class JlG4GDMLParser;
class JlG4GDMLReadStructure;
class JlG4GDMLWriteStructure;
class JlG4GDMLMatrix;
class JlG4OpticalParameters;
class JlG4SurfaceProperty;
class JlG4OpticalSurface;
class JlG4Physics2DVector;
class JlG4LogicalBorderSurface;
class JlG4LogicalSkinSurface;
class JlG4ParticleTableIterator;
class JlG4PhysicsListHelper;
class JlG4VMPLData;
class JlG4VPhysicsConstructor;
class JlG4VModularPhysicsList;
class JlQGS_BIC;
class JlQBBC;
class JlFTFP_BERT;
class JlLBE;
class JlG4EmStandardPhysics_option4;
class JlG4OpticalPhysics;
class JlG4DecayPhysics;
class JlG4EmStandardPhysics;
class JlG4RadioactiveDecayPhysics;
class JlG4OpBoundaryProcess;
class JlG4StepLimiterPhysics;
class JlG4HCtable;
class JlG4CutTubs;
class JlG4EllipticalTube;
class JlG4EllipticalCone;
class JlG4Paraboloid;
class JlG4Tet;
class JlG4TwistedBox;
class JlG4TwistedTrap;
class JlG4TwistedTrd;
class JlG4GenericTrap;
class JlG4TwistedTubs;
class JlCLHEP_HepRep4x4Symmetric;
class JlCLHEP_HepBoostX;
class JlCLHEP_HepBoostY;
class JlCLHEP_HepBoostZ;
class JlCLHEP_HepLorentzRotation_HepLorentzRotation_row;
class JlG4BooleanSolid;
class JlG4VBooleanProcessor;
class JlG4UnionSolid;
class JlG4SubtractionSolid;
class JlG4IntersectionSolid;
class JlG4UniformMagField;
class JlG4Colour;
class JlG4VScoringMesh;
class JlG4VScoreWriter;
class JlG4StateManager;
class JlGlobal;

std::shared_ptr<Wrapper> newJlG4ParticleDefinition(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4String(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4ProcessManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4ParticleTable(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4PDefManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4FieldManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Field(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4MagneticField(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Track(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4HCofThisEvent(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VHitsCollection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_Hep3Vector(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepRotation(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepAxisAngle(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepEulerAngles(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepRotationX(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepRotationY(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepRotationZ(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepRep3x3(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepRotation_HepRotation_row(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepLorentzVector(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepRep4x4(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepBoost(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepLorentzRotation(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4PVData(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VPhysicalVolume(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4LogicalVolume(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VPVParameterisation(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_Transform3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_Transform3D_Transform3D_row(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_Point3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_Scale3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_Rotate3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_Translate3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_Vector3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_RotateX3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_RotateY3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_RotateZ3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_TranslateX3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_TranslateY3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_TranslateZ3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_Reflect3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_Normal3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_ReflectX3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_ReflectY3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_ReflectZ3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_ScaleX3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_ScaleY3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlHepGeom_ScaleZ3D(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4AffineTransform(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4NavigationHistory(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4LVData(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VSolid(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VSensitiveDetector(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Material(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4MaterialCutsCouple(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4UserLimits(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4SmartVoxelHeader(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Region(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VisAttributes(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4FastSimulationManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4TouchableHistory(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Isotope(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Element(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4IonisParamElm(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4MaterialPropertiesTable(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4PhysicsFreeVector(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4IonisParamMat(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4SandiaTable(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4StepPoint(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4ReferenceCountedHandle(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VProcess(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Step(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4DynamicParticle(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VUserTrackInformation(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VReadOutGeometry(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VSDFilter(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VUserDetectorConstruction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VUserActionInitialization(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VSteppingVerbose(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VUserPrimaryGeneratorAction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Event(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4UserSteppingAction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4SteppingManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VPrimaryGenerator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4PrimaryParticle(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4PrimaryVertex(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4ParticleGun(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4UserWorkerInitialization(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4LogicalVolumeStore(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VNotifier(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VStateDependent(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Run(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_Hep2Vector(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VExceptionHandler(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLExceptionHandler(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLSensDet(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLDetectorConstruction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLActionInitialization(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4UserRunAction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4UserEventAction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4UserStackingAction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4UserTrackingAction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLParticleGun(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLWorkerInitialization(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLGeneratorAction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLMagField(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLSteppingAction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLTrackingAction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLRunAction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLEventAction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLStackingAction(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4JLStateDependent(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4PolyconeSideRZ(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VCSGfaceted(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Polycone(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4GenericPolycone(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4PolyhedraSideRZ(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Polyhedra(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlstd_pair(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VTrajectory(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VTrajectoryPoint(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4AttValue(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4TrajectoryContainer(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4DCofThisEvent(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VUserEventInformation(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4SubEvent(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Polyhedron(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4DisplacedSolid(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Navigator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VExternalNavigation(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VoxelNavigation(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepRandomEngine(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepRandom(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_RandFlat(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_RandExponential(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_RandBit(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_RandGamma(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_RandGaussQ(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_RandGeneral(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_RandPoissonQ(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VParticleChange(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4ProcessVector(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4EventManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4StackManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4TrackingManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4PrimaryTransformer(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4RunManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VUserPhysicsList(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4MTRunManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4ScoringManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4RunManagerKernel(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4MTRunManagerKernel(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4UImanager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4UIcommand(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4SPSPosDistribution(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4SPSRandomGenerator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4SPSAngDistribution(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4SPSEneDistribution(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4SingleParticleSource(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4GeneralParticleSource(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VFastSimulationModel(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4NistManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4ICRU90StoppingData(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4CSGSolid(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4SteppingVerbose(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4PVPlacement(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4ReplicaData(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4PVReplica(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4TransportationManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4SafetyHelper(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4GDMLAuxStructType(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Box(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4ExtrudedSolid(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4ExtrudedSolid_ZSection(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4MultiUnion(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Voxelizer(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Trd(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlTrapSidePlane(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Trap(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Cons(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Sphere(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Orb(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Ellipsoid(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4PolyconeHistorical(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4PolyhedraHistorical(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Torus(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Para(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Hype(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Tubs(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4GDMLParser(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4GDMLReadStructure(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4GDMLWriteStructure(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4GDMLMatrix(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4OpticalParameters(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4SurfaceProperty(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4OpticalSurface(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Physics2DVector(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4LogicalBorderSurface(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4LogicalSkinSurface(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4ParticleTableIterator(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4PhysicsListHelper(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VMPLData(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VPhysicsConstructor(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VModularPhysicsList(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlQGS_BIC(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlQBBC(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlFTFP_BERT(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlLBE(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4EmStandardPhysics_option4(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4OpticalPhysics(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4DecayPhysics(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4EmStandardPhysics(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4RadioactiveDecayPhysics(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4OpBoundaryProcess(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4StepLimiterPhysics(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4HCtable(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4CutTubs(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4EllipticalTube(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4EllipticalCone(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Paraboloid(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Tet(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4TwistedBox(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4TwistedTrap(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4TwistedTrd(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4GenericTrap(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4TwistedTubs(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepRep4x4Symmetric(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepBoostX(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepBoostY(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepBoostZ(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlCLHEP_HepLorentzRotation_HepLorentzRotation_row(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4BooleanSolid(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VBooleanProcessor(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4UnionSolid(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4SubtractionSolid(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4IntersectionSolid(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4UniformMagField(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4Colour(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VScoringMesh(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4VScoreWriter(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlG4StateManager(jlcxx::Module&);
std::shared_ptr<Wrapper> newJlGlobal(jlcxx::Module&);
//method from libcxxwrap returning its version
extern "C" JLCXX_API const char* cxxwrap_version_string();

//Check the code is compiled with a compatible version of libcxxwrap:
static_assert(1000*1000*JLCXX_VERSION_MAJOR  + 1000 * JLCXX_VERSION_MINOR + JLCXX_VERSION_PATCH >= 12000
  && 1000 * 1000 * JLCXX_VERSION_MAJOR  + 1000 * JLCXX_VERSION_MINOR + JLCXX_VERSION_PATCH < 14000,
  "The code was generated with WrapIt! for "
  "a different CxxWrap version (controlled with the cxxwrap_version parameter).");

//Check the version of loaded libcxxrap library:
void throw_if_version_incompatibility(){
  std::string version_str = cxxwrap_version_string();
  static std::regex r("([[:digit:]]{1,3})\\.([[:digit:]]{1,3})\\.([[:digit:]]{1,3})");
  std::smatch matches;
  if(!std::regex_match(version_str, matches, r)){
    std::cerr << "Warning: Failed to check libcxxwrap version.";
  } else{    long version_int =   1000*1000*strtol(matches[1].str().c_str(), 0, 10)
                       +      1000*strtol(matches[2].str().c_str(), 0, 10)
                       +           strtol(matches[3].str().c_str(), 0, 10);
    long jllmin = 1000*1000*JLCXX_VERSION_MAJOR + 1000 * JLCXX_VERSION_MINOR;
    long jllmax = 1000*1000*JLCXX_VERSION_MAJOR + 1000 * (JLCXX_VERSION_MINOR + 1);
    if(version_int < jllmin || version_int >= jllmax){
      throw std::runtime_error(std::string("Found libcxxwrap_jll version ")
        + version_str + ", while module Geant4 requires version "
        + std::to_string(JLCXX_VERSION_MAJOR) + "." + std::to_string(JLCXX_VERSION_MINOR) + ".x."
        " Note: if the module was installed with the package manager, the Project.toml file "
        "of the package is probably missing a compat specification that would have prevented "
        "the inconsistency.");
    }
  }
}


JLCXX_MODULE define_julia_module(jlcxx::Module& jlModule){

  throw_if_version_incompatibility();


  DEBUG_MSG("Adding anonymous enum defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Threading.hh:276:3 (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Threading.hh:276:3
  jlModule.set_const("G4Threading!SEQUENTIAL_ID", static_cast<int>(G4Threading::SEQUENTIAL_ID));
  jlModule.set_const("G4Threading!MASTER_ID", static_cast<int>(G4Threading::MASTER_ID));
  jlModule.set_const("G4Threading!WORKER_ID", static_cast<int>(G4Threading::WORKER_ID));
  jlModule.set_const("G4Threading!GENERICTHREAD_ID", static_cast<int>(G4Threading::GENERICTHREAD_ID));

  DEBUG_MSG("Adding anonymous enum defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/ThreeVector.h:42:3 (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/ThreeVector.h:42:3
  jlModule.set_const("CLHEP!Hep3Vector!X", static_cast<int>(CLHEP::Hep3Vector::X));
  jlModule.set_const("CLHEP!Hep3Vector!Y", static_cast<int>(CLHEP::Hep3Vector::Y));
  jlModule.set_const("CLHEP!Hep3Vector!Z", static_cast<int>(CLHEP::Hep3Vector::Z));
  jlModule.set_const("CLHEP!Hep3Vector!NUM_COORDINATES", static_cast<int>(CLHEP::Hep3Vector::NUM_COORDINATES));
  jlModule.set_const("CLHEP!Hep3Vector!SIZE", static_cast<int>(CLHEP::Hep3Vector::SIZE));

  DEBUG_MSG("Adding wrapper for enum EVolume (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/geomdefs.hh:82:6
  jlModule.add_bits<EVolume>("EVolume", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("kNormal", kNormal);
  jlModule.set_const("kReplica", kReplica);
  jlModule.set_const("kParameterised", kParameterised);
  jlModule.set_const("kExternal", kExternal);

  DEBUG_MSG("Adding wrapper for enum EAxis (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/geomdefs.hh:53:6
  jlModule.add_bits<EAxis>("EAxis", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("kXAxis", kXAxis);
  jlModule.set_const("kYAxis", kYAxis);
  jlModule.set_const("kZAxis", kZAxis);
  jlModule.set_const("kRho", kRho);
  jlModule.set_const("kRadial3D", kRadial3D);
  jlModule.set_const("kPhi", kPhi);
  jlModule.set_const("kUndefined", kUndefined);

  DEBUG_MSG("Adding wrapper for enum G4State (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:106:6
  jlModule.add_bits<G4State>("G4State", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("kStateUndefined", kStateUndefined);
  jlModule.set_const("kStateSolid", kStateSolid);
  jlModule.set_const("kStateLiquid", kStateLiquid);
  jlModule.set_const("kStateGas", kStateGas);

  DEBUG_MSG("Adding wrapper for enum G4StepStatus (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4StepStatus.hh:39:6
  jlModule.add_bits<G4StepStatus>("G4StepStatus", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("fWorldBoundary", fWorldBoundary);
  jlModule.set_const("fGeomBoundary", fGeomBoundary);
  jlModule.set_const("fAtRestDoItProc", fAtRestDoItProc);
  jlModule.set_const("fAlongStepDoItProc", fAlongStepDoItProc);
  jlModule.set_const("fPostStepDoItProc", fPostStepDoItProc);
  jlModule.set_const("fUserDefinedLimit", fUserDefinedLimit);
  jlModule.set_const("fExclusivelyForcedProc", fExclusivelyForcedProc);
  jlModule.set_const("fUndefined", fUndefined);

  DEBUG_MSG("Adding wrapper for enum G4SteppingControl (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4SteppingControl.hh:40:6
  jlModule.add_bits<G4SteppingControl>("G4SteppingControl", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("NormalCondition", NormalCondition);
  jlModule.set_const("AvoidHitInvocation", AvoidHitInvocation);
  jlModule.set_const("Debug", Debug);

  DEBUG_MSG("Adding wrapper for enum G4TrackStatus (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4TrackStatus.hh:40:6
  jlModule.add_bits<G4TrackStatus>("G4TrackStatus", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("fAlive", fAlive);
  jlModule.set_const("fStopButAlive", fStopButAlive);
  jlModule.set_const("fStopAndKill", fStopAndKill);
  jlModule.set_const("fKillTrackAndSecondaries", fKillTrackAndSecondaries);
  jlModule.set_const("fSuspend", fSuspend);
  jlModule.set_const("fSuspendAndWait", fSuspendAndWait);
  jlModule.set_const("fPostponeToNextEvent", fPostponeToNextEvent);

  DEBUG_MSG("Adding wrapper for enum G4ApplicationState (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ApplicationState.hh:82:6
  jlModule.add_bits<G4ApplicationState>("G4ApplicationState", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("G4State_PreInit", G4State_PreInit);
  jlModule.set_const("G4State_Init", G4State_Init);
  jlModule.set_const("G4State_Idle", G4State_Idle);
  jlModule.set_const("G4State_GeomClosed", G4State_GeomClosed);
  jlModule.set_const("G4State_EventProc", G4State_EventProc);
  jlModule.set_const("G4State_Quit", G4State_Quit);
  jlModule.set_const("G4State_Abort", G4State_Abort);

  DEBUG_MSG("Adding anonymous enum defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/TwoVector.h:48:3 (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/TwoVector.h:48:3
  jlModule.set_const("CLHEP!Hep2Vector!X", static_cast<int>(CLHEP::Hep2Vector::X));
  jlModule.set_const("CLHEP!Hep2Vector!Y", static_cast<int>(CLHEP::Hep2Vector::Y));
  jlModule.set_const("CLHEP!Hep2Vector!NUM_COORDINATES", static_cast<int>(CLHEP::Hep2Vector::NUM_COORDINATES));
  jlModule.set_const("CLHEP!Hep2Vector!SIZE", static_cast<int>(CLHEP::Hep2Vector::SIZE));

  DEBUG_MSG("Adding wrapper for enum G4ExceptionSeverity (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ExceptionSeverity.hh:65:6
  jlModule.add_bits<G4ExceptionSeverity>("G4ExceptionSeverity", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("FatalException", FatalException);
  jlModule.set_const("FatalErrorInArgument", FatalErrorInArgument);
  jlModule.set_const("RunMustBeAborted", RunMustBeAborted);
  jlModule.set_const("EventMustBeAborted", EventMustBeAborted);
  jlModule.set_const("JustWarning", JustWarning);
  jlModule.set_const("IgnoreTheIssue", IgnoreTheIssue);

  DEBUG_MSG("Adding wrapper for enum G4ClassificationOfNewTrack (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ClassificationOfNewTrack.hh:41:6
  jlModule.add_bits<G4ClassificationOfNewTrack>("G4ClassificationOfNewTrack", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("fUrgent", fUrgent);
  jlModule.set_const("fWaiting", fWaiting);
  jlModule.set_const("fPostpone", fPostpone);
  jlModule.set_const("fKill", fKill);
  jlModule.set_const("fWaiting_1", fWaiting_1);
  jlModule.set_const("fWaiting_2", fWaiting_2);
  jlModule.set_const("fWaiting_3", fWaiting_3);
  jlModule.set_const("fWaiting_4", fWaiting_4);
  jlModule.set_const("fWaiting_5", fWaiting_5);
  jlModule.set_const("fWaiting_6", fWaiting_6);
  jlModule.set_const("fWaiting_7", fWaiting_7);
  jlModule.set_const("fWaiting_8", fWaiting_8);
  jlModule.set_const("fWaiting_9", fWaiting_9);
  jlModule.set_const("fWaiting_10", fWaiting_10);
  jlModule.set_const("fSubEvent_0", fSubEvent_0);
  jlModule.set_const("fSubEvent_1", fSubEvent_1);
  jlModule.set_const("fSubEvent_2", fSubEvent_2);
  jlModule.set_const("fSubEvent_3", fSubEvent_3);
  jlModule.set_const("fSubEvent_4", fSubEvent_4);
  jlModule.set_const("fSubEvent_5", fSubEvent_5);
  jlModule.set_const("fSubEvent_6", fSubEvent_6);
  jlModule.set_const("fSubEvent_7", fSubEvent_7);
  jlModule.set_const("fSubEvent_8", fSubEvent_8);
  jlModule.set_const("fSubEvent_9", fSubEvent_9);
  jlModule.set_const("fSubEvent_A", fSubEvent_A);
  jlModule.set_const("fSubEvent_B", fSubEvent_B);
  jlModule.set_const("fSubEvent_C", fSubEvent_C);
  jlModule.set_const("fSubEvent_D", fSubEvent_D);
  jlModule.set_const("fSubEvent_E", fSubEvent_E);
  jlModule.set_const("fSubEvent_F", fSubEvent_F);

  DEBUG_MSG("Adding wrapper for enum EInside (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/geomdefs.hh:66:6
  jlModule.add_bits<EInside>("EInside", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("kOutside", kOutside);
  jlModule.set_const("kSurface", kSurface);
  jlModule.set_const("kInside", kInside);

  DEBUG_MSG("Adding wrapper for enum G4ProcessType (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ProcessType.hh:37:6
  jlModule.add_bits<G4ProcessType>("G4ProcessType", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("fNotDefined", fNotDefined);
  jlModule.set_const("fTransportation", fTransportation);
  jlModule.set_const("fElectromagnetic", fElectromagnetic);
  jlModule.set_const("fOptical", fOptical);
  jlModule.set_const("fHadronic", fHadronic);
  jlModule.set_const("fPhotolepton_hadron", fPhotolepton_hadron);
  jlModule.set_const("fDecay", fDecay);
  jlModule.set_const("fGeneral", fGeneral);
  jlModule.set_const("fParameterisation", fParameterisation);
  jlModule.set_const("fUserDefined", fUserDefined);
  jlModule.set_const("fParallel", fParallel);
  jlModule.set_const("fPhonon", fPhonon);
  jlModule.set_const("fUCN", fUCN);

  DEBUG_MSG("Adding wrapper for enum G4GPILSelection (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4GPILSelection.hh:40:6
  jlModule.add_bits<G4GPILSelection>("G4GPILSelection", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("CandidateForSelection", CandidateForSelection);
  jlModule.set_const("NotCandidateForSelection", NotCandidateForSelection);

  DEBUG_MSG("Adding wrapper for enum G4ForceCondition (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ForceCondition.hh:40:6
  jlModule.add_bits<G4ForceCondition>("G4ForceCondition", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("InActivated", InActivated);
  jlModule.set_const("Forced", Forced);
  jlModule.set_const("NotForced", NotForced);
  jlModule.set_const("Conditionally", Conditionally);
  jlModule.set_const("ExclusivelyForced", ExclusivelyForced);
  jlModule.set_const("StronglyForced", StronglyForced);

  DEBUG_MSG("Adding wrapper for enum G4ProcessVectorTypeIndex (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ProcessManager.hh:71:6
  jlModule.add_bits<G4ProcessVectorTypeIndex>("G4ProcessVectorTypeIndex", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("typeGPIL", typeGPIL);
  jlModule.set_const("typeDoIt", typeDoIt);

  DEBUG_MSG("Adding wrapper for enum G4ProcessVectorDoItIndex (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ProcessManager.hh:76:6
  jlModule.add_bits<G4ProcessVectorDoItIndex>("G4ProcessVectorDoItIndex", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("idxAll", idxAll);
  jlModule.set_const("idxAtRest", idxAtRest);
  jlModule.set_const("idxAlongStep", idxAlongStep);
  jlModule.set_const("idxPostStep", idxPostStep);
  jlModule.set_const("NDoit", NDoit);

  DEBUG_MSG("Adding wrapper for enum G4ProcessVectorOrdering (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ProcessManager.hh:87:6
  jlModule.add_bits<G4ProcessVectorOrdering>("G4ProcessVectorOrdering", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("ordInActive", ordInActive);
  jlModule.set_const("ordDefault", ordDefault);
  jlModule.set_const("ordLast", ordLast);

  DEBUG_MSG("Adding anonymous enum defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ProcessManager.hh:291:5 (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ProcessManager.hh:291:5
  jlModule.set_const("G4ProcessManager!SizeOfProcVectorArray", static_cast<int>(G4ProcessManager::SizeOfProcVectorArray));

  DEBUG_MSG("Adding wrapper for enum G4RunManager::RMType (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:521:10
  jlModule.add_bits<G4RunManager::RMType>("G4RunManager!RMType", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("G4RunManager!sequentialRM", G4RunManager::sequentialRM);
  jlModule.set_const("G4RunManager!masterRM", G4RunManager::masterRM);
  jlModule.set_const("G4RunManager!workerRM", G4RunManager::workerRM);
  jlModule.set_const("G4RunManager!subEventMasterRM", G4RunManager::subEventMasterRM);
  jlModule.set_const("G4RunManager!subEventWorkerRM", G4RunManager::subEventWorkerRM);

  DEBUG_MSG("Adding wrapper for enum G4MTRunManager::WorkerActionRequest (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4MTRunManager.hh:159:16
  jlModule.add_bits<G4MTRunManager::WorkerActionRequest>("G4MTRunManager!WorkerActionRequest", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("G4MTRunManager!WorkerActionRequest!UNDEFINED", G4MTRunManager::WorkerActionRequest::UNDEFINED);
  jlModule.set_const("G4MTRunManager!WorkerActionRequest!NEXTITERATION", G4MTRunManager::WorkerActionRequest::NEXTITERATION);
  jlModule.set_const("G4MTRunManager!WorkerActionRequest!PROCESSUI", G4MTRunManager::WorkerActionRequest::PROCESSUI);
  jlModule.set_const("G4MTRunManager!WorkerActionRequest!ENDWORKER", G4MTRunManager::WorkerActionRequest::ENDWORKER);

  DEBUG_MSG("Adding wrapper for enum G4OpticalProcessIndex (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4OpticalParameters.hh:63:6
  jlModule.add_bits<G4OpticalProcessIndex>("G4OpticalProcessIndex", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("kCerenkov", kCerenkov);
  jlModule.set_const("kScintillation", kScintillation);
  jlModule.set_const("kAbsorption", kAbsorption);
  jlModule.set_const("kRayleigh", kRayleigh);
  jlModule.set_const("kMieHG", kMieHG);
  jlModule.set_const("kBoundary", kBoundary);
  jlModule.set_const("kWLS", kWLS);
  jlModule.set_const("kWLS2", kWLS2);
  jlModule.set_const("kNoProcess", kNoProcess);

  DEBUG_MSG("Adding wrapper for enum G4OpticalSurfaceFinish (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4OpticalSurface.hh:52:6
  jlModule.add_bits<G4OpticalSurfaceFinish>("G4OpticalSurfaceFinish", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("polished", polished);
  jlModule.set_const("polishedfrontpainted", polishedfrontpainted);
  jlModule.set_const("polishedbackpainted", polishedbackpainted);
  jlModule.set_const("ground", ground);
  jlModule.set_const("groundfrontpainted", groundfrontpainted);
  jlModule.set_const("groundbackpainted", groundbackpainted);
  jlModule.set_const("polishedlumirrorair", polishedlumirrorair);
  jlModule.set_const("polishedlumirrorglue", polishedlumirrorglue);
  jlModule.set_const("polishedair", polishedair);
  jlModule.set_const("polishedteflonair", polishedteflonair);
  jlModule.set_const("polishedtioair", polishedtioair);
  jlModule.set_const("polishedtyvekair", polishedtyvekair);
  jlModule.set_const("polishedvm2000air", polishedvm2000air);
  jlModule.set_const("polishedvm2000glue", polishedvm2000glue);
  jlModule.set_const("etchedlumirrorair", etchedlumirrorair);
  jlModule.set_const("etchedlumirrorglue", etchedlumirrorglue);
  jlModule.set_const("etchedair", etchedair);
  jlModule.set_const("etchedteflonair", etchedteflonair);
  jlModule.set_const("etchedtioair", etchedtioair);
  jlModule.set_const("etchedtyvekair", etchedtyvekair);
  jlModule.set_const("etchedvm2000air", etchedvm2000air);
  jlModule.set_const("etchedvm2000glue", etchedvm2000glue);
  jlModule.set_const("groundlumirrorair", groundlumirrorair);
  jlModule.set_const("groundlumirrorglue", groundlumirrorglue);
  jlModule.set_const("groundair", groundair);
  jlModule.set_const("groundteflonair", groundteflonair);
  jlModule.set_const("groundtioair", groundtioair);
  jlModule.set_const("groundtyvekair", groundtyvekair);
  jlModule.set_const("groundvm2000air", groundvm2000air);
  jlModule.set_const("groundvm2000glue", groundvm2000glue);
  jlModule.set_const("Rough_LUT", Rough_LUT);
  jlModule.set_const("RoughTeflon_LUT", RoughTeflon_LUT);
  jlModule.set_const("RoughESR_LUT", RoughESR_LUT);
  jlModule.set_const("RoughESRGrease_LUT", RoughESRGrease_LUT);
  jlModule.set_const("Polished_LUT", Polished_LUT);
  jlModule.set_const("PolishedTeflon_LUT", PolishedTeflon_LUT);
  jlModule.set_const("PolishedESR_LUT", PolishedESR_LUT);
  jlModule.set_const("PolishedESRGrease_LUT", PolishedESRGrease_LUT);
  jlModule.set_const("Detector_LUT", Detector_LUT);

  DEBUG_MSG("Adding wrapper for enum G4OpticalSurfaceModel (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4OpticalSurface.hh:106:6
  jlModule.add_bits<G4OpticalSurfaceModel>("G4OpticalSurfaceModel", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("glisur", glisur);
  jlModule.set_const("unified", unified);
  jlModule.set_const("LUT", LUT);
  jlModule.set_const("DAVIS", DAVIS);
  jlModule.set_const("dichroic", dichroic);

  DEBUG_MSG("Adding wrapper for enum G4SurfaceType (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4SurfaceProperty.hh:58:6
  jlModule.add_bits<G4SurfaceType>("G4SurfaceType", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("dielectric_metal", dielectric_metal);
  jlModule.set_const("dielectric_dielectric", dielectric_dielectric);
  jlModule.set_const("dielectric_LUT", dielectric_LUT);
  jlModule.set_const("dielectric_LUTDAVIS", dielectric_LUTDAVIS);
  jlModule.set_const("dielectric_dichroic", dielectric_dichroic);
  jlModule.set_const("firsov", firsov);
  jlModule.set_const("x_ray", x_ray);
  jlModule.set_const("coated", coated);

  DEBUG_MSG("Adding wrapper for enum G4OpBoundaryProcessStatus (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4OpBoundaryProcess.hh:72:6
  jlModule.add_bits<G4OpBoundaryProcessStatus>("G4OpBoundaryProcessStatus", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("Undefined", Undefined);
  jlModule.set_const("Transmission", Transmission);
  jlModule.set_const("FresnelRefraction", FresnelRefraction);
  jlModule.set_const("FresnelReflection", FresnelReflection);
  jlModule.set_const("TotalInternalReflection", TotalInternalReflection);
  jlModule.set_const("LambertianReflection", LambertianReflection);
  jlModule.set_const("LobeReflection", LobeReflection);
  jlModule.set_const("SpikeReflection", SpikeReflection);
  jlModule.set_const("BackScattering", BackScattering);
  jlModule.set_const("Absorption", Absorption);
  jlModule.set_const("Detection", Detection);
  jlModule.set_const("NotAtBoundary", NotAtBoundary);
  jlModule.set_const("SameMaterial", SameMaterial);
  jlModule.set_const("StepTooSmall", StepTooSmall);
  jlModule.set_const("NoRINDEX", NoRINDEX);
  jlModule.set_const("PolishedLumirrorAirReflection", PolishedLumirrorAirReflection);
  jlModule.set_const("PolishedLumirrorGlueReflection", PolishedLumirrorGlueReflection);
  jlModule.set_const("PolishedAirReflection", PolishedAirReflection);
  jlModule.set_const("PolishedTeflonAirReflection", PolishedTeflonAirReflection);
  jlModule.set_const("PolishedTiOAirReflection", PolishedTiOAirReflection);
  jlModule.set_const("PolishedTyvekAirReflection", PolishedTyvekAirReflection);
  jlModule.set_const("PolishedVM2000AirReflection", PolishedVM2000AirReflection);
  jlModule.set_const("PolishedVM2000GlueReflection", PolishedVM2000GlueReflection);
  jlModule.set_const("EtchedLumirrorAirReflection", EtchedLumirrorAirReflection);
  jlModule.set_const("EtchedLumirrorGlueReflection", EtchedLumirrorGlueReflection);
  jlModule.set_const("EtchedAirReflection", EtchedAirReflection);
  jlModule.set_const("EtchedTeflonAirReflection", EtchedTeflonAirReflection);
  jlModule.set_const("EtchedTiOAirReflection", EtchedTiOAirReflection);
  jlModule.set_const("EtchedTyvekAirReflection", EtchedTyvekAirReflection);
  jlModule.set_const("EtchedVM2000AirReflection", EtchedVM2000AirReflection);
  jlModule.set_const("EtchedVM2000GlueReflection", EtchedVM2000GlueReflection);
  jlModule.set_const("GroundLumirrorAirReflection", GroundLumirrorAirReflection);
  jlModule.set_const("GroundLumirrorGlueReflection", GroundLumirrorGlueReflection);
  jlModule.set_const("GroundAirReflection", GroundAirReflection);
  jlModule.set_const("GroundTeflonAirReflection", GroundTeflonAirReflection);
  jlModule.set_const("GroundTiOAirReflection", GroundTiOAirReflection);
  jlModule.set_const("GroundTyvekAirReflection", GroundTyvekAirReflection);
  jlModule.set_const("GroundVM2000AirReflection", GroundVM2000AirReflection);
  jlModule.set_const("GroundVM2000GlueReflection", GroundVM2000GlueReflection);
  jlModule.set_const("Dichroic", Dichroic);
  jlModule.set_const("CoatedDielectricReflection", CoatedDielectricReflection);
  jlModule.set_const("CoatedDielectricRefraction", CoatedDielectricRefraction);
  jlModule.set_const("CoatedDielectricFrustratedTransmission", CoatedDielectricFrustratedTransmission);

  DEBUG_MSG("Adding wrapper for enum G4VisAttributes::LineStyle (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VisAttributes.hh:75:8
  jlModule.add_bits<G4VisAttributes::LineStyle>("G4VisAttributes!LineStyle", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("G4VisAttributes!unbroken", G4VisAttributes::unbroken);
  jlModule.set_const("G4VisAttributes!dashed", G4VisAttributes::dashed);
  jlModule.set_const("G4VisAttributes!dotted", G4VisAttributes::dotted);

  DEBUG_MSG("Adding wrapper for enum G4VisAttributes::ForcedDrawingStyle (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VisAttributes.hh:76:8
  jlModule.add_bits<G4VisAttributes::ForcedDrawingStyle>("G4VisAttributes!ForcedDrawingStyle", jlcxx::julia_type("CppEnum"));
  jlModule.set_const("G4VisAttributes!wireframe", G4VisAttributes::wireframe);
  jlModule.set_const("G4VisAttributes!solid", G4VisAttributes::solid);
  jlModule.set_const("G4VisAttributes!cloud", G4VisAttributes::cloud);
  std::vector<std::shared_ptr<Wrapper>> wrappers = {
    std::shared_ptr<Wrapper>(newJlG4ParticleDefinition(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4String(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4ProcessManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4ParticleTable(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4PDefManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4FieldManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Field(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4MagneticField(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Track(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4HCofThisEvent(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VHitsCollection(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_Hep3Vector(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepRotation(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepAxisAngle(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepEulerAngles(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepRotationX(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepRotationY(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepRotationZ(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepRep3x3(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepRotation_HepRotation_row(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepLorentzVector(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepRep4x4(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepBoost(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepLorentzRotation(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4PVData(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VPhysicalVolume(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4LogicalVolume(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VPVParameterisation(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_Transform3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_Transform3D_Transform3D_row(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_Point3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_Scale3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_Rotate3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_Translate3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_Vector3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_RotateX3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_RotateY3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_RotateZ3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_TranslateX3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_TranslateY3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_TranslateZ3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_Reflect3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_Normal3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_ReflectX3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_ReflectY3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_ReflectZ3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_ScaleX3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_ScaleY3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlHepGeom_ScaleZ3D(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4AffineTransform(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4NavigationHistory(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4LVData(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VSolid(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VSensitiveDetector(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Material(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4MaterialCutsCouple(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4UserLimits(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4SmartVoxelHeader(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Region(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VisAttributes(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4FastSimulationManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4TouchableHistory(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Isotope(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Element(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4IonisParamElm(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4MaterialPropertiesTable(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4PhysicsFreeVector(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4IonisParamMat(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4SandiaTable(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4StepPoint(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4ReferenceCountedHandle(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VProcess(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Step(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4DynamicParticle(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VUserTrackInformation(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VReadOutGeometry(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VSDFilter(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VUserDetectorConstruction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VUserActionInitialization(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VSteppingVerbose(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VUserPrimaryGeneratorAction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Event(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4UserSteppingAction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4SteppingManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VPrimaryGenerator(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4PrimaryParticle(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4PrimaryVertex(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4ParticleGun(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4UserWorkerInitialization(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4LogicalVolumeStore(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VNotifier(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VStateDependent(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Run(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_Hep2Vector(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VExceptionHandler(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLExceptionHandler(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLSensDet(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLDetectorConstruction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLActionInitialization(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4UserRunAction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4UserEventAction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4UserStackingAction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4UserTrackingAction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLParticleGun(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLWorkerInitialization(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLGeneratorAction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLMagField(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLSteppingAction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLTrackingAction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLRunAction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLEventAction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLStackingAction(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4JLStateDependent(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4PolyconeSideRZ(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VCSGfaceted(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Polycone(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4GenericPolycone(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4PolyhedraSideRZ(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Polyhedra(jlModule)),
    std::shared_ptr<Wrapper>(newJlstd_pair(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VTrajectory(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VTrajectoryPoint(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4AttValue(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4TrajectoryContainer(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4DCofThisEvent(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VUserEventInformation(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4SubEvent(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Polyhedron(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4DisplacedSolid(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Navigator(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VExternalNavigation(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VoxelNavigation(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepRandomEngine(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepRandom(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_RandFlat(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_RandExponential(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_RandBit(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_RandGamma(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_RandGaussQ(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_RandGeneral(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_RandPoissonQ(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VParticleChange(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4ProcessVector(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4EventManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4StackManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4TrackingManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4PrimaryTransformer(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4RunManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VUserPhysicsList(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4MTRunManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4ScoringManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4RunManagerKernel(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4MTRunManagerKernel(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4UImanager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4UIcommand(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4SPSPosDistribution(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4SPSRandomGenerator(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4SPSAngDistribution(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4SPSEneDistribution(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4SingleParticleSource(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4GeneralParticleSource(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VFastSimulationModel(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4NistManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4ICRU90StoppingData(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4CSGSolid(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4SteppingVerbose(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4PVPlacement(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4ReplicaData(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4PVReplica(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4TransportationManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4SafetyHelper(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4GDMLAuxStructType(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Box(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4ExtrudedSolid(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4ExtrudedSolid_ZSection(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4MultiUnion(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Voxelizer(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Trd(jlModule)),
    std::shared_ptr<Wrapper>(newJlTrapSidePlane(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Trap(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Cons(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Sphere(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Orb(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Ellipsoid(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4PolyconeHistorical(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4PolyhedraHistorical(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Torus(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Para(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Hype(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Tubs(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4GDMLParser(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4GDMLReadStructure(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4GDMLWriteStructure(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4GDMLMatrix(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4OpticalParameters(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4SurfaceProperty(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4OpticalSurface(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Physics2DVector(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4LogicalBorderSurface(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4LogicalSkinSurface(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4ParticleTableIterator(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4PhysicsListHelper(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VMPLData(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VPhysicsConstructor(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VModularPhysicsList(jlModule)),
    std::shared_ptr<Wrapper>(newJlQGS_BIC(jlModule)),
    std::shared_ptr<Wrapper>(newJlQBBC(jlModule)),
    std::shared_ptr<Wrapper>(newJlFTFP_BERT(jlModule)),
    std::shared_ptr<Wrapper>(newJlLBE(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4EmStandardPhysics_option4(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4OpticalPhysics(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4DecayPhysics(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4EmStandardPhysics(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4RadioactiveDecayPhysics(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4OpBoundaryProcess(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4StepLimiterPhysics(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4HCtable(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4CutTubs(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4EllipticalTube(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4EllipticalCone(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Paraboloid(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Tet(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4TwistedBox(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4TwistedTrap(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4TwistedTrd(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4GenericTrap(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4TwistedTubs(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepRep4x4Symmetric(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepBoostX(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepBoostY(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepBoostZ(jlModule)),
    std::shared_ptr<Wrapper>(newJlCLHEP_HepLorentzRotation_HepLorentzRotation_row(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4BooleanSolid(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VBooleanProcessor(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4UnionSolid(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4SubtractionSolid(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4IntersectionSolid(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4UniformMagField(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4Colour(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VScoringMesh(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4VScoreWriter(jlModule)),
    std::shared_ptr<Wrapper>(newJlG4StateManager(jlModule)),
    std::shared_ptr<Wrapper>(newJlGlobal(jlModule))
  };
  for(const auto& w: wrappers) w->add_methods();

}
