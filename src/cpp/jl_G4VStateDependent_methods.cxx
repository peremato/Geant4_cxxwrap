// this file was auto-generated by wrapit v0.1.0-54-g4322429
#include <type_traits>
#include "jlcxx/jlcxx.hpp"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

#include "cpp/jlGeant4.h"


#ifdef VERBOSE_IMPORT
#  define DEBUG_MSG(a) std::cerr << a << "\n"
#else
#  define DEBUG_MSG(a)
#endif
#define __HERE__  __FILE__ ":" QUOTE2(__LINE__)
#define QUOTE(arg) #arg
#define QUOTE2(arg) QUOTE(arg)
void add_methods_for_G4VStateDependent(jlcxx::Module& types, jlcxx::TypeWrapper<G4VStateDependent>& t104) {


  /**********************************************************************/
  /* Wrappers for the methods of class G4VStateDependent
   */

  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for G4bool G4VStateDependent::operator==(const G4VStateDependent &) (" __HERE__ ")");
  // signature to use in the veto list: G4bool G4VStateDependent::operator==(const G4VStateDependent &)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VStateDependent.hh:48:10
  t104.method("==", static_cast<G4bool (G4VStateDependent::*)(const G4VStateDependent &)  const>(&G4VStateDependent::operator==));

  DEBUG_MSG("Adding wrapper for G4bool G4VStateDependent::operator!=(const G4VStateDependent &) (" __HERE__ ")");
  // signature to use in the veto list: G4bool G4VStateDependent::operator!=(const G4VStateDependent &)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VStateDependent.hh:49:10
  t104.method("!=", static_cast<G4bool (G4VStateDependent::*)(const G4VStateDependent &)  const>(&G4VStateDependent::operator!=));

  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for G4bool G4VStateDependent::Notify(G4ApplicationState) (" __HERE__ ")");
  // signature to use in the veto list: G4bool G4VStateDependent::Notify(G4ApplicationState)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VStateDependent.hh:51:18
  t104.method("Notify", static_cast<G4bool (G4VStateDependent::*)(G4ApplicationState) >(&G4VStateDependent::Notify));

  /* End of G4VStateDependent class method wrappers
   **********************************************************************/

}
