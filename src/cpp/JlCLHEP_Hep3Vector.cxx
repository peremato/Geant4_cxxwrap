// this file was auto-generated by wrapit 
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<CLHEP::Hep3Vector> : std::false_type { };
  template<> struct DefaultConstructible<CLHEP::Hep3Vector> : std::false_type { };
}

// Class generating the wrapper for type CLHEP::Hep3Vector
// signature to use in the veto file: CLHEP::Hep3Vector
struct JlCLHEP_Hep3Vector: public Wrapper {

  JlCLHEP_Hep3Vector(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type CLHEP::Hep3Vector (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:36:7
    jlcxx::TypeWrapper<CLHEP::Hep3Vector>  t = jlModule.add_type<CLHEP::Hep3Vector>("CLHEP!Hep3Vector");
    jlcxx::stl::apply_stl<CLHEP::Hep3Vector>(jlModule);
    type_ = std::unique_ptr<jlcxx::TypeWrapper<CLHEP::Hep3Vector>>(new jlcxx::TypeWrapper<CLHEP::Hep3Vector>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::Hep3Vector(double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:47:12
    t.constructor<double>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::Hep3Vector(double, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:48:3
    t.constructor<double, double>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::Hep3Vector(double, double, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:49:3
    t.constructor<double, double, double>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::Hep3Vector(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:52:10
    t.constructor<const CLHEP::Hep3Vector &>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::operator()(int) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::operator()(int)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:59:17
    t.method("paren", static_cast<double (CLHEP::Hep3Vector::*)(int)  const>(&CLHEP::Hep3Vector::operator()));
    module_.set_override_module(jl_base_module);


    DEBUG_MSG("Adding getindex method to wrap double CLHEP::Hep3Vector::operator[](int) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:62:17
    t.method("getindex",
      [](CLHEP::Hep3Vector& a, int i){
      return a[i];
    });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for double & CLHEP::Hep3Vector::operator()(int) (" __HERE__ ")");
    // signature to use in the veto list: double & CLHEP::Hep3Vector::operator()(int)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:65:19
    t.method("paren", static_cast<double & (CLHEP::Hep3Vector::*)(int) >(&CLHEP::Hep3Vector::operator()));
    module_.set_override_module(jl_base_module);


    DEBUG_MSG("Adding setindex! method  to wrap double & CLHEP::Hep3Vector::operator[](int) (" __HERE__ ")");
// defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:68:19
    t.method("setindex!",
      [](CLHEP::Hep3Vector& a, int i, double const & val){
      return a[i] = val;
    });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::x() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::x()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:71:17
    t.method("x", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::x));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::y() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::y()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:72:17
    t.method("y", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::y));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::z() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::z()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:73:17
    t.method("z", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::z));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setX(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setX(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:76:15
    t.method("setX", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setX));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setY(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setY(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:77:15
    t.method("setY", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setY));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setZ(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setZ(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:78:15
    t.method("setZ", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setZ));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::set(double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::set(double, double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:81:15
    t.method("set", static_cast<void (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::set));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::phi() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::phi()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:84:17
    t.method("phi", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::phi));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::theta() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::theta()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:87:17
    t.method("theta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::theta));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::cosTheta() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::cosTheta()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:90:17
    t.method("cosTheta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::cosTheta));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::cos2Theta() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::cos2Theta()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:93:17
    t.method("cos2Theta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::cos2Theta));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::mag2() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::mag2()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:96:17
    t.method("mag2", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::mag2));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::mag() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::mag()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:99:17
    t.method("mag", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::mag));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setPhi(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setPhi(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:102:15
    t.method("setPhi", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setPhi));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setTheta(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setTheta(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:105:15
    t.method("setTheta", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setTheta));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setMag(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setMag(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:108:15
    t.method("setMag", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setMag));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::perp2() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::perp2()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:111:17
    t.method("perp2", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::perp2));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::perp() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::perp()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:114:17
    t.method("perp", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::perp));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setPerp(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setPerp(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:117:15
    t.method("setPerp", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setPerp));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setCylTheta(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setCylTheta(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:120:8
    t.method("setCylTheta", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setCylTheta));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::perp2(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::perp2(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:123:17
    t.method("perp2", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::perp2));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::perp(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::perp(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:126:17
    t.method("perp", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::perp));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator=(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator=(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:129:23
    t.method("assign", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &) >(&CLHEP::Hep3Vector::operator=));

    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::operator==(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::Hep3Vector::operator==(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:133:15
    t.method("==", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::operator==));

    DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::operator!=(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::Hep3Vector::operator!=(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:134:15
    t.method("!=", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::operator!=));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::isNear(const CLHEP::Hep3Vector &, double) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::Hep3Vector::isNear(const CLHEP::Hep3Vector &, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:137:8
    t.method("isNear", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &, double)  const>(&CLHEP::Hep3Vector::isNear));
    t.method("isNear", [](CLHEP::Hep3Vector const& a, const CLHEP::Hep3Vector & arg0)->bool { return a.isNear(arg0); });
    t.method("isNear", [](CLHEP::Hep3Vector const* a, const CLHEP::Hep3Vector & arg0)->bool { return a->isNear(arg0); });

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::howNear(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::howNear(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:141:10
    t.method("howNear", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::howNear));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::deltaR(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::deltaR(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:145:10
    t.method("deltaR", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::deltaR));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator+=(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator+=(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:148:23
    t.method("add!", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &) >(&CLHEP::Hep3Vector::operator+=));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator-=(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator-=(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:151:23
    t.method("sub!", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &) >(&CLHEP::Hep3Vector::operator-=));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::operator-() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::operator-()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:154:21
    t.method("-", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::operator-));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator*=(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator*=(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:157:23
    t.method("mult!", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::operator*=));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator/=(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator/=(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:160:23
    t.method("fdiv!", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::operator/=));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::unit() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::unit()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:163:21
    t.method("unit", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::unit));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::orthogonal() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::orthogonal()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:166:21
    t.method("orthogonal", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::orthogonal));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::dot(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::dot(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:169:17
    t.method("dot", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::dot));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::cross(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::cross(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:172:21
    t.method("cross", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::cross));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::angle(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::angle(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:175:10
    t.method("angle", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::angle));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::pseudoRapidity() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::pseudoRapidity()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:178:10
    t.method("pseudoRapidity", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::pseudoRapidity));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setEta(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setEta(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:181:8
    t.method("setEta", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setEta));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setCylEta(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setCylEta(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:184:8
    t.method("setCylEta", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setCylEta));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateX(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateX(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:187:16
    t.method("rotateX", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::rotateX));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateY(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateY(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:190:16
    t.method("rotateY", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::rotateY));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateZ(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateZ(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:193:16
    t.method("rotateZ", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::rotateZ));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateUz(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateUz(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:196:16
    t.method("rotateUz", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &) >(&CLHEP::Hep3Vector::rotateUz));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(double, const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(double, const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:199:18
    t.method("rotate", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double, const CLHEP::Hep3Vector &) >(&CLHEP::Hep3Vector::rotate));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator*=(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator*=(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:203:16
    t.method("mult!", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::HepRotation &) >(&CLHEP::Hep3Vector::operator*=));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::transform(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::transform(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:204:16
    t.method("transform", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::HepRotation &) >(&CLHEP::Hep3Vector::transform));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setRThetaPhi(double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setRThetaPhi(double, double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:223:15
    t.method("setRThetaPhi", static_cast<void (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::setRThetaPhi));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setREtaPhi(double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setREtaPhi(double, double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:226:15
    t.method("setREtaPhi", static_cast<void (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::setREtaPhi));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setRhoPhiZ(double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setRhoPhiZ(double, double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:229:15
    t.method("setRhoPhiZ", static_cast<void (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::setRhoPhiZ));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setRhoPhiTheta(double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setRhoPhiTheta(double, double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:232:8
    t.method("setRhoPhiTheta", static_cast<void (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::setRhoPhiTheta));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setRhoPhiEta(double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setRhoPhiEta(double, double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:235:8
    t.method("setRhoPhiEta", static_cast<void (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::setRhoPhiEta));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getX() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::getX()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:240:17
    t.method("getX", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getX));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getY() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::getY()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:241:17
    t.method("getY", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getY));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getZ() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::getZ()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:242:17
    t.method("getZ", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getZ));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getR() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::getR()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:245:17
    t.method("getR", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getR));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getTheta() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::getTheta()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:246:17
    t.method("getTheta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getTheta));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getPhi() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::getPhi()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:247:17
    t.method("getPhi", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getPhi));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::r() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::r()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:250:17
    t.method("r", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::r));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::rho() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::rho()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:253:17
    t.method("rho", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::rho));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getRho() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::getRho()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:254:17
    t.method("getRho", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getRho));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::eta() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::eta()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:257:10
    t.method("eta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::eta));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getEta() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::getEta()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:258:10
    t.method("getEta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getEta));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setR(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setR(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:261:15
    t.method("setR", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setR));

    DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setRho(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::Hep3Vector::setRho(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:264:15
    t.method("setRho", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setRho));

    DEBUG_MSG("Adding wrapper for int CLHEP::Hep3Vector::compare(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: int CLHEP::Hep3Vector::compare(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:269:7
    t.method("compare", static_cast<int (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::compare));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::operator>(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::Hep3Vector::operator>(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:270:8
    t.method(">", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::operator>));

    DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::operator<(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::Hep3Vector::operator<(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:271:8
    t.method("<", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::operator<));

    DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::operator>=(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::Hep3Vector::operator>=(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:272:8
    t.method(">=", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::operator>=));

    DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::operator<=(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::Hep3Vector::operator<=(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:273:8
    t.method("<=", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::operator<=));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::diff2(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::diff2(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:276:17
    t.method("diff2", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::diff2));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::setTolerance(double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::setTolerance(double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:279:17
    t.method("CLHEP!Hep3Vector!setTolerance", static_cast<double (*)(double) >(&CLHEP::Hep3Vector::setTolerance));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getTolerance() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::getTolerance()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:280:24
    t.method("CLHEP!Hep3Vector!getTolerance", static_cast<double (*)() >(&CLHEP::Hep3Vector::getTolerance));

    DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::isParallel(const CLHEP::Hep3Vector &, double) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::Hep3Vector::isParallel(const CLHEP::Hep3Vector &, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:283:8
    t.method("isParallel", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &, double)  const>(&CLHEP::Hep3Vector::isParallel));
    t.method("isParallel", [](CLHEP::Hep3Vector const& a, const CLHEP::Hep3Vector & arg0)->bool { return a.isParallel(arg0); });
    t.method("isParallel", [](CLHEP::Hep3Vector const* a, const CLHEP::Hep3Vector & arg0)->bool { return a->isParallel(arg0); });

    DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::isOrthogonal(const CLHEP::Hep3Vector &, double) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::Hep3Vector::isOrthogonal(const CLHEP::Hep3Vector &, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:286:8
    t.method("isOrthogonal", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &, double)  const>(&CLHEP::Hep3Vector::isOrthogonal));
    t.method("isOrthogonal", [](CLHEP::Hep3Vector const& a, const CLHEP::Hep3Vector & arg0)->bool { return a.isOrthogonal(arg0); });
    t.method("isOrthogonal", [](CLHEP::Hep3Vector const* a, const CLHEP::Hep3Vector & arg0)->bool { return a->isOrthogonal(arg0); });

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::howParallel(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::howParallel(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:289:10
    t.method("howParallel", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::howParallel));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::howOrthogonal(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::howOrthogonal(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:292:10
    t.method("howOrthogonal", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::howOrthogonal));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::beta() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::beta()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:299:10
    t.method("beta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::beta));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::gamma() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::gamma()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:303:10
    t.method("gamma", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::gamma));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::coLinearRapidity() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::coLinearRapidity()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:306:10
    t.method("coLinearRapidity", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::coLinearRapidity));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::angle() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::angle()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:314:17
    t.method("angle", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::angle));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::theta(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::theta(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:317:17
    t.method("theta", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::theta));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::cosTheta(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::cosTheta(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:320:10
    t.method("cosTheta", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::cosTheta));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::cos2Theta(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::cos2Theta(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:321:10
    t.method("cos2Theta", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::cos2Theta));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::project() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::project()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:324:21
    t.method("project", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::project));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::project(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::project(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:325:21
    t.method("project", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::project));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::perpPart() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::perpPart()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:328:21
    t.method("perpPart", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::perpPart));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::perpPart(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::perpPart(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:329:21
    t.method("perpPart", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::perpPart));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::rapidity() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::rapidity()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:332:10
    t.method("rapidity", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::rapidity));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::rapidity(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::rapidity(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:335:10
    t.method("rapidity", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::rapidity));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::eta(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::eta(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:339:10
    t.method("eta", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::eta));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::polarAngle(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::polarAngle(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:346:10
    t.method("polarAngle", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::polarAngle));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::deltaPhi(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::deltaPhi(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:349:10
    t.method("deltaPhi", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::deltaPhi));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::azimAngle(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::azimAngle(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:352:10
    t.method("azimAngle", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::azimAngle));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::polarAngle(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::polarAngle(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:355:10
    t.method("polarAngle", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::polarAngle));

    DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::azimAngle(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::Hep3Vector::azimAngle(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:360:10
    t.method("azimAngle", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::azimAngle));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(const CLHEP::Hep3Vector &, double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(const CLHEP::Hep3Vector &, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:371:16
    t.method("rotate", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &, double) >(&CLHEP::Hep3Vector::rotate));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(const CLHEP::HepAxisAngle &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(const CLHEP::HepAxisAngle &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:374:16
    t.method("rotate", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::HepAxisAngle &) >(&CLHEP::Hep3Vector::rotate));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(const CLHEP::HepEulerAngles &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(const CLHEP::HepEulerAngles &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:377:16
    t.method("rotate", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::HepEulerAngles &) >(&CLHEP::Hep3Vector::rotate));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(double, double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Vector/ThreeVector.h:378:16
    t.method("rotate", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::rotate));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<CLHEP::Hep3Vector>> type_;
};
std::shared_ptr<Wrapper> newJlCLHEP_Hep3Vector(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlCLHEP_Hep3Vector(module));
}
