// this file was auto-generated by wrapit v0.1.0-54-g4322429
#include <type_traits>
#include "jlcxx/jlcxx.hpp"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

#include "cpp/jlGeant4.h"


#ifdef VERBOSE_IMPORT
#  define DEBUG_MSG(a) std::cerr << a << "\n"
#else
#  define DEBUG_MSG(a)
#endif
#define __HERE__  __FILE__ ":" QUOTE2(__LINE__)
#define QUOTE(arg) #arg
#define QUOTE2(arg) QUOTE(arg)
void add_methods_for_CLHEP_RandExponential(jlcxx::Module& types, jlcxx::TypeWrapper<CLHEP::RandExponential>& t131) {


  /**********************************************************************/
  /* Wrappers for the methods of class CLHEP::RandExponential
   */


  DEBUG_MSG("Adding wrapper for void CLHEP::RandExponential::RandExponential(CLHEP::HepRandomEngine &, double) (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:38:10
  t131.constructor<CLHEP::HepRandomEngine &>(/*finalize=*/true);
  t131.constructor<CLHEP::HepRandomEngine &, double>(/*finalize=*/true);


  DEBUG_MSG("Adding wrapper for void CLHEP::RandExponential::RandExponential(CLHEP::HepRandomEngine *, double) (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:39:10
  t131.constructor<CLHEP::HepRandomEngine *>(/*finalize=*/true);
  t131.constructor<CLHEP::HepRandomEngine *, double>(/*finalize=*/true);

  DEBUG_MSG("Adding wrapper for double CLHEP::RandExponential::shoot() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::RandExponential::shoot()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:54:18
  t131.method("CLHEP!RandExponential!shoot", static_cast<double (*)() >(&CLHEP::RandExponential::shoot));

  DEBUG_MSG("Adding wrapper for double CLHEP::RandExponential::shoot(double) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::RandExponential::shoot(double)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:56:18
  t131.method("CLHEP!RandExponential!shoot", static_cast<double (*)(double) >(&CLHEP::RandExponential::shoot));

  DEBUG_MSG("Adding wrapper for void CLHEP::RandExponential::shootArray(const int, double *, double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::RandExponential::shootArray(const int, double *, double)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:58:16
  t131.method("CLHEP!RandExponential!shootArray", static_cast<void (*)(const int, double *, double) >(&CLHEP::RandExponential::shootArray));
  t131.method("CLHEP!RandExponential!shootArray", [](const int arg0, double * arg1)->void{ CLHEP::RandExponential::shootArray(arg0, arg1); });

  DEBUG_MSG("Adding wrapper for double CLHEP::RandExponential::shoot(CLHEP::HepRandomEngine *) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::RandExponential::shoot(CLHEP::HepRandomEngine *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:64:25
  t131.method("CLHEP!RandExponential!shoot", static_cast<double (*)(CLHEP::HepRandomEngine *) >(&CLHEP::RandExponential::shoot));

  DEBUG_MSG("Adding wrapper for double CLHEP::RandExponential::shoot(CLHEP::HepRandomEngine *, double) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::RandExponential::shoot(CLHEP::HepRandomEngine *, double)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:66:25
  t131.method("CLHEP!RandExponential!shoot", static_cast<double (*)(CLHEP::HepRandomEngine *, double) >(&CLHEP::RandExponential::shoot));

  DEBUG_MSG("Adding wrapper for void CLHEP::RandExponential::shootArray(CLHEP::HepRandomEngine *, const int, double *, double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::RandExponential::shootArray(CLHEP::HepRandomEngine *, const int, double *, double)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:68:16
  t131.method("CLHEP!RandExponential!shootArray", static_cast<void (*)(CLHEP::HepRandomEngine *, const int, double *, double) >(&CLHEP::RandExponential::shootArray));
  t131.method("CLHEP!RandExponential!shootArray", [](CLHEP::HepRandomEngine * arg0, const int arg1, double * arg2)->void{ CLHEP::RandExponential::shootArray(arg0, arg1, arg2); });

  DEBUG_MSG("Adding wrapper for double CLHEP::RandExponential::fire() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::RandExponential::fire()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:74:17
  t131.method("fire", static_cast<double (CLHEP::RandExponential::*)() >(&CLHEP::RandExponential::fire));

  DEBUG_MSG("Adding wrapper for double CLHEP::RandExponential::fire(double) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::RandExponential::fire(double)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:76:17
  t131.method("fire", static_cast<double (CLHEP::RandExponential::*)(double) >(&CLHEP::RandExponential::fire));

  DEBUG_MSG("Adding wrapper for void CLHEP::RandExponential::fireArray(const int, double *) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::RandExponential::fireArray(const int, double *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:78:8
  t131.method("fireArray", static_cast<void (CLHEP::RandExponential::*)(const int, double *) >(&CLHEP::RandExponential::fireArray));

  DEBUG_MSG("Adding wrapper for void CLHEP::RandExponential::fireArray(const int, double *, double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::RandExponential::fireArray(const int, double *, double)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:79:8
  t131.method("fireArray", static_cast<void (CLHEP::RandExponential::*)(const int, double *, double) >(&CLHEP::RandExponential::fireArray));

  DEBUG_MSG("Adding wrapper for double CLHEP::RandExponential::operator()() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::RandExponential::operator()()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:81:10
  t131.method("paren", static_cast<double (CLHEP::RandExponential::*)() >(&CLHEP::RandExponential::operator()));

  DEBUG_MSG("Adding wrapper for double CLHEP::RandExponential::operator()(double) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::RandExponential::operator()(double)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:82:10
  t131.method("paren", static_cast<double (CLHEP::RandExponential::*)(double) >(&CLHEP::RandExponential::operator()));

  DEBUG_MSG("Adding wrapper for CLHEP::HepRandomEngine & CLHEP::RandExponential::engine() (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::HepRandomEngine & CLHEP::RandExponential::engine()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/CLHEP/Random/RandExponential.h:90:21
  t131.method("engine", static_cast<CLHEP::HepRandomEngine & (CLHEP::RandExponential::*)() >(&CLHEP::RandExponential::engine));

  /* End of CLHEP::RandExponential class method wrappers
   **********************************************************************/

}
