// this file was auto-generated by wrapit 
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4GenericTrap> : std::false_type { };
  template<> struct DefaultConstructible<G4GenericTrap> : std::false_type { };
template<> struct SuperType<G4GenericTrap> { typedef G4VSolid type; };
}

// Class generating the wrapper for type G4GenericTrap
// signature to use in the veto file: G4GenericTrap
struct JlG4GenericTrap: public Wrapper {

  JlG4GenericTrap(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4GenericTrap (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:79:7
    jlcxx::TypeWrapper<G4GenericTrap>  t = jlModule.add_type<G4GenericTrap>("G4GenericTrap",
      jlcxx::julia_base_type<G4VSolid>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4GenericTrap>>(new jlcxx::TypeWrapper<G4GenericTrap>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void G4GenericTrap::G4GenericTrap(const G4String &, G4double, const std::vector<G4TwoVector> &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:83:5
    t.constructor<const G4String &, G4double, const std::vector<G4TwoVector> &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for G4double G4GenericTrap::GetZHalfLength() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4GenericTrap::GetZHalfLength()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:92:24
    t.method("GetZHalfLength", static_cast<G4double (G4GenericTrap::*)()  const>(&G4GenericTrap::GetZHalfLength));

    DEBUG_MSG("Adding wrapper for G4int G4GenericTrap::GetNofVertices() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4GenericTrap::GetNofVertices()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:93:24
    t.method("GetNofVertices", static_cast<G4int (G4GenericTrap::*)()  const>(&G4GenericTrap::GetNofVertices));

    DEBUG_MSG("Adding wrapper for G4TwoVector G4GenericTrap::GetVertex(G4int) (" __HERE__ ")");
    // signature to use in the veto list: G4TwoVector G4GenericTrap::GetVertex(G4int)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:94:24
    t.method("GetVertex", static_cast<G4TwoVector (G4GenericTrap::*)(G4int)  const>(&G4GenericTrap::GetVertex));

    DEBUG_MSG("Adding wrapper for const std::vector<G4TwoVector> & G4GenericTrap::GetVertices() (" __HERE__ ")");
    // signature to use in the veto list: const std::vector<G4TwoVector> & G4GenericTrap::GetVertices()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:95:44
    t.method("GetVertices", static_cast<const std::vector<G4TwoVector> & (G4GenericTrap::*)()  const>(&G4GenericTrap::GetVertices));

    DEBUG_MSG("Adding wrapper for G4double G4GenericTrap::GetTwistAngle(G4int) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4GenericTrap::GetTwistAngle(G4int)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:96:24
    t.method("GetTwistAngle", static_cast<G4double (G4GenericTrap::*)(G4int)  const>(&G4GenericTrap::GetTwistAngle));

    DEBUG_MSG("Adding wrapper for G4bool G4GenericTrap::IsTwisted() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4GenericTrap::IsTwisted()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:97:24
    t.method("IsTwisted", static_cast<G4bool (G4GenericTrap::*)()  const>(&G4GenericTrap::IsTwisted));

    DEBUG_MSG("Adding wrapper for G4int G4GenericTrap::GetVisSubdivisions() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4GenericTrap::GetVisSubdivisions()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:98:24
    t.method("GetVisSubdivisions", static_cast<G4int (G4GenericTrap::*)()  const>(&G4GenericTrap::GetVisSubdivisions));

    DEBUG_MSG("Adding wrapper for void G4GenericTrap::SetVisSubdivisions(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4GenericTrap::SetVisSubdivisions(G4int)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:99:24
    t.method("SetVisSubdivisions", static_cast<void (G4GenericTrap::*)(G4int) >(&G4GenericTrap::SetVisSubdivisions));

    DEBUG_MSG("Adding wrapper for EInside G4GenericTrap::Inside(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: EInside G4GenericTrap::Inside(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:103:13
    t.method("Inside", static_cast<EInside (G4GenericTrap::*)(const G4ThreeVector &)  const>(&G4GenericTrap::Inside));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4GenericTrap::SurfaceNormal(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4GenericTrap::SurfaceNormal(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:104:19
    t.method("SurfaceNormal", static_cast<G4ThreeVector (G4GenericTrap::*)(const G4ThreeVector &)  const>(&G4GenericTrap::SurfaceNormal));

    DEBUG_MSG("Adding wrapper for G4double G4GenericTrap::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4GenericTrap::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:105:14
    t.method("DistanceToIn", static_cast<G4double (G4GenericTrap::*)(const G4ThreeVector &, const G4ThreeVector &)  const>(&G4GenericTrap::DistanceToIn));

    DEBUG_MSG("Adding wrapper for G4double G4GenericTrap::DistanceToIn(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4GenericTrap::DistanceToIn(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:107:14
    t.method("DistanceToIn", static_cast<G4double (G4GenericTrap::*)(const G4ThreeVector &)  const>(&G4GenericTrap::DistanceToIn));

    DEBUG_MSG("Adding wrapper for G4double G4GenericTrap::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4GenericTrap::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:108:14
    t.method("DistanceToOut", static_cast<G4double (G4GenericTrap::*)(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *)  const>(&G4GenericTrap::DistanceToOut));
    t.method("DistanceToOut", [](G4GenericTrap const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a.DistanceToOut(arg0, arg1); });
    t.method("DistanceToOut", [](G4GenericTrap const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double { return a.DistanceToOut(arg0, arg1, arg2); });
    t.method("DistanceToOut", [](G4GenericTrap const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double { return a.DistanceToOut(arg0, arg1, arg2, arg3); });
    t.method("DistanceToOut", [](G4GenericTrap const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a->DistanceToOut(arg0, arg1); });
    t.method("DistanceToOut", [](G4GenericTrap const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double { return a->DistanceToOut(arg0, arg1, arg2); });
    t.method("DistanceToOut", [](G4GenericTrap const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double { return a->DistanceToOut(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for G4double G4GenericTrap::DistanceToOut(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4GenericTrap::DistanceToOut(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:113:14
    t.method("DistanceToOut", static_cast<G4double (G4GenericTrap::*)(const G4ThreeVector &)  const>(&G4GenericTrap::DistanceToOut));

    DEBUG_MSG("Adding wrapper for void G4GenericTrap::BoundingLimits(G4ThreeVector &, G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: void G4GenericTrap::BoundingLimits(G4ThreeVector &, G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:114:10
    t.method("BoundingLimits", static_cast<void (G4GenericTrap::*)(G4ThreeVector &, G4ThreeVector &)  const>(&G4GenericTrap::BoundingLimits));

    DEBUG_MSG("Adding wrapper for G4GeometryType G4GenericTrap::GetEntityType() (" __HERE__ ")");
    // signature to use in the veto list: G4GeometryType G4GenericTrap::GetEntityType()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:120:20
    t.method("GetEntityType", static_cast<G4GeometryType (G4GenericTrap::*)()  const>(&G4GenericTrap::GetEntityType));

    DEBUG_MSG("Adding wrapper for G4VSolid * G4GenericTrap::Clone() (" __HERE__ ")");
    // signature to use in the veto list: G4VSolid * G4GenericTrap::Clone()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:122:15
    t.method("Clone", static_cast<G4VSolid * (G4GenericTrap::*)()  const>(&G4GenericTrap::Clone));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4GenericTrap::GetPointOnSurface() (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4GenericTrap::GetPointOnSurface()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:126:19
    t.method("GetPointOnSurface", static_cast<G4ThreeVector (G4GenericTrap::*)()  const>(&G4GenericTrap::GetPointOnSurface));

    DEBUG_MSG("Adding wrapper for G4double G4GenericTrap::GetCubicVolume() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4GenericTrap::GetCubicVolume()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:128:14
    t.method("GetCubicVolume", static_cast<G4double (G4GenericTrap::*)() >(&G4GenericTrap::GetCubicVolume));

    DEBUG_MSG("Adding wrapper for G4double G4GenericTrap::GetSurfaceArea() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4GenericTrap::GetSurfaceArea()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:129:14
    t.method("GetSurfaceArea", static_cast<G4double (G4GenericTrap::*)() >(&G4GenericTrap::GetSurfaceArea));

    DEBUG_MSG("Adding wrapper for G4Polyhedron * G4GenericTrap::GetPolyhedron() (" __HERE__ ")");
    // signature to use in the veto list: G4Polyhedron * G4GenericTrap::GetPolyhedron()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:133:19
    t.method("GetPolyhedron", static_cast<G4Polyhedron * (G4GenericTrap::*)()  const>(&G4GenericTrap::GetPolyhedron));

    DEBUG_MSG("Adding wrapper for G4Polyhedron * G4GenericTrap::CreatePolyhedron() (" __HERE__ ")");
    // signature to use in the veto list: G4Polyhedron * G4GenericTrap::CreatePolyhedron()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:136:19
    t.method("CreatePolyhedron", static_cast<G4Polyhedron * (G4GenericTrap::*)()  const>(&G4GenericTrap::CreatePolyhedron));


    DEBUG_MSG("Adding wrapper for void G4GenericTrap::G4GenericTrap(const G4GenericTrap &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:143:5
    t.constructor<const G4GenericTrap &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for G4GenericTrap & G4GenericTrap::operator=(const G4GenericTrap &) (" __HERE__ ")");
    // signature to use in the veto list: G4GenericTrap & G4GenericTrap::operator=(const G4GenericTrap &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4GenericTrap.hh:144:20
    t.method("assign", static_cast<G4GenericTrap & (G4GenericTrap::*)(const G4GenericTrap &) >(&G4GenericTrap::operator=));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4GenericTrap>> type_;
};
std::shared_ptr<Wrapper> newJlG4GenericTrap(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4GenericTrap(module));
}
