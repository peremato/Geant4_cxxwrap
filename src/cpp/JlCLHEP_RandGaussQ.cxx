// this file was auto-generated by wrapit 
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<CLHEP::RandGaussQ> : std::false_type { };
  template<> struct DefaultConstructible<CLHEP::RandGaussQ> : std::false_type { };
}

// Class generating the wrapper for type CLHEP::RandGaussQ
// signature to use in the veto file: CLHEP::RandGaussQ
struct JlCLHEP_RandGaussQ: public Wrapper {

  JlCLHEP_RandGaussQ(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type CLHEP::RandGaussQ (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:30:7
    jlcxx::TypeWrapper<CLHEP::RandGaussQ>  t = jlModule.add_type<CLHEP::RandGaussQ>("CLHEP!RandGaussQ");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<CLHEP::RandGaussQ>>(new jlcxx::TypeWrapper<CLHEP::RandGaussQ>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void CLHEP::RandGaussQ::RandGaussQ(CLHEP::HepRandomEngine &, double, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:34:10
    t.constructor<CLHEP::HepRandomEngine &>(/*finalize=*/true);
    t.constructor<CLHEP::HepRandomEngine &, double>(/*finalize=*/true);
    t.constructor<CLHEP::HepRandomEngine &, double, double>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void CLHEP::RandGaussQ::RandGaussQ(CLHEP::HepRandomEngine *, double, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:36:10
    t.constructor<CLHEP::HepRandomEngine *>(/*finalize=*/true);
    t.constructor<CLHEP::HepRandomEngine *, double>(/*finalize=*/true);
    t.constructor<CLHEP::HepRandomEngine *, double, double>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for double CLHEP::RandGaussQ::shoot() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandGaussQ::shoot()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:59:25
    t.method("CLHEP!RandGaussQ!shoot", static_cast<double (*)() >(&CLHEP::RandGaussQ::shoot));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandGaussQ::shoot(double, double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandGaussQ::shoot(double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:61:25
    t.method("CLHEP!RandGaussQ!shoot", static_cast<double (*)(double, double) >(&CLHEP::RandGaussQ::shoot));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandGaussQ::shootArray(const int, double *, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandGaussQ::shootArray(const int, double *, double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:63:16
    t.method("CLHEP!RandGaussQ!shootArray", static_cast<void (*)(const int, double *, double, double) >(&CLHEP::RandGaussQ::shootArray));
    t.method("CLHEP!RandGaussQ!shootArray", [](const int arg0, double * arg1)->void { CLHEP::RandGaussQ::shootArray(arg0, arg1); });
    t.method("CLHEP!RandGaussQ!shootArray", [](const int arg0, double * arg1, double arg2)->void { CLHEP::RandGaussQ::shootArray(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for double CLHEP::RandGaussQ::shoot(CLHEP::HepRandomEngine *) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandGaussQ::shoot(CLHEP::HepRandomEngine *)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:69:25
    t.method("CLHEP!RandGaussQ!shoot", static_cast<double (*)(CLHEP::HepRandomEngine *) >(&CLHEP::RandGaussQ::shoot));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandGaussQ::shoot(CLHEP::HepRandomEngine *, double, double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandGaussQ::shoot(CLHEP::HepRandomEngine *, double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:71:25
    t.method("CLHEP!RandGaussQ!shoot", static_cast<double (*)(CLHEP::HepRandomEngine *, double, double) >(&CLHEP::RandGaussQ::shoot));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandGaussQ::shootArray(CLHEP::HepRandomEngine *, const int, double *, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandGaussQ::shootArray(CLHEP::HepRandomEngine *, const int, double *, double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:75:16
    t.method("CLHEP!RandGaussQ!shootArray", static_cast<void (*)(CLHEP::HepRandomEngine *, const int, double *, double, double) >(&CLHEP::RandGaussQ::shootArray));
    t.method("CLHEP!RandGaussQ!shootArray", [](CLHEP::HepRandomEngine * arg0, const int arg1, double * arg2)->void { CLHEP::RandGaussQ::shootArray(arg0, arg1, arg2); });
    t.method("CLHEP!RandGaussQ!shootArray", [](CLHEP::HepRandomEngine * arg0, const int arg1, double * arg2, double arg3)->void { CLHEP::RandGaussQ::shootArray(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for double CLHEP::RandGaussQ::fire() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandGaussQ::fire()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:83:17
    t.method("fire", static_cast<double (CLHEP::RandGaussQ::*)() >(&CLHEP::RandGaussQ::fire));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandGaussQ::fire(double, double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandGaussQ::fire(double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:85:17
    t.method("fire", static_cast<double (CLHEP::RandGaussQ::*)(double, double) >(&CLHEP::RandGaussQ::fire));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandGaussQ::fireArray(const int, double *) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandGaussQ::fireArray(const int, double *)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:87:8
    t.method("fireArray", static_cast<void (CLHEP::RandGaussQ::*)(const int, double *) >(&CLHEP::RandGaussQ::fireArray));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandGaussQ::fireArray(const int, double *, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandGaussQ::fireArray(const int, double *, double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:88:8
    t.method("fireArray", static_cast<void (CLHEP::RandGaussQ::*)(const int, double *, double, double) >(&CLHEP::RandGaussQ::fireArray));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandGaussQ::operator()() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandGaussQ::operator()()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:91:18
    t.method("paren", static_cast<double (CLHEP::RandGaussQ::*)() >(&CLHEP::RandGaussQ::operator()));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandGaussQ::operator()(double, double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandGaussQ::operator()(double, double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:92:18
    t.method("paren", static_cast<double (CLHEP::RandGaussQ::*)(double, double) >(&CLHEP::RandGaussQ::operator()));

    DEBUG_MSG("Adding wrapper for std::string CLHEP::RandGaussQ::name() (" __HERE__ ")");
    // signature to use in the veto list: std::string CLHEP::RandGaussQ::name()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:99:15
    t.method("name", static_cast<std::string (CLHEP::RandGaussQ::*)()  const>(&CLHEP::RandGaussQ::name));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRandomEngine & CLHEP::RandGaussQ::engine() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRandomEngine & CLHEP::RandGaussQ::engine()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:100:21
    t.method("engine", static_cast<CLHEP::HepRandomEngine & (CLHEP::RandGaussQ::*)() >(&CLHEP::RandGaussQ::engine));

    DEBUG_MSG("Adding wrapper for std::string CLHEP::RandGaussQ::distributionName() (" __HERE__ ")");
    // signature to use in the veto list: std::string CLHEP::RandGaussQ::distributionName()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/CLHEP/Random/RandGaussQ.h:102:22
    t.method("CLHEP!RandGaussQ!distributionName", static_cast<std::string (*)() >(&CLHEP::RandGaussQ::distributionName));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<CLHEP::RandGaussQ>> type_;
};
std::shared_ptr<Wrapper> newJlCLHEP_RandGaussQ(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlCLHEP_RandGaussQ(module));
}
