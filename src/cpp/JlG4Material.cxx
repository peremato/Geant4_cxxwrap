// this file was auto-generated by wrapit v1.3.1-15-g5168a24
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4Material> : std::false_type { };
  template<> struct DefaultConstructible<G4Material> : std::false_type { };
}

// Class generating the wrapper for type G4Material
// signature to use in the veto file: G4Material
struct JlG4Material: public Wrapper {

  JlG4Material(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4Material (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:116:7
    jlcxx::TypeWrapper<G4Material>  t = jlModule.add_type<G4Material>("G4Material");
    jlcxx::stl::apply_stl<G4Material*>(jlModule);
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4Material>>(new jlcxx::TypeWrapper<G4Material>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void G4Material::G4Material(const G4String &, G4double, G4double, G4double, G4State, G4double, G4double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:120:3
    t.constructor<const G4String &, G4double, G4double, G4double>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const G4String &, G4double, G4double, G4double, G4State>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const G4String &, G4double, G4double, G4double, G4State, G4double>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const G4String &, G4double, G4double, G4double, G4State, G4double, G4double>(/*finalize=*/jlcxx::finalize_policy::no);


    DEBUG_MSG("Adding wrapper for void G4Material::G4Material(const G4String &, G4double, G4int, G4State, G4double, G4double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:130:3
    t.constructor<const G4String &, G4double, G4int>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const G4String &, G4double, G4int, G4State>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const G4String &, G4double, G4int, G4State, G4double>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const G4String &, G4double, G4int, G4State, G4double, G4double>(/*finalize=*/jlcxx::finalize_policy::no);


    DEBUG_MSG("Adding wrapper for void G4Material::G4Material(const G4String &, G4double, const G4Material *, G4State, G4double, G4double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:138:3
    t.constructor<const G4String &, G4double, const G4Material *>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const G4String &, G4double, const G4Material *, G4State>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const G4String &, G4double, const G4Material *, G4State, G4double>(/*finalize=*/jlcxx::finalize_policy::no);
    t.constructor<const G4String &, G4double, const G4Material *, G4State, G4double, G4double>(/*finalize=*/jlcxx::finalize_policy::no);

    DEBUG_MSG("Adding wrapper for void G4Material::SetChemicalFormula(const G4String &) (" __HERE__ ")");
    // signature to use in the veto list: void G4Material::SetChemicalFormula(const G4String &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:151:8
    t.method("SetChemicalFormula", static_cast<void (G4Material::*)(const G4String &) >(&G4Material::SetChemicalFormula));

    DEBUG_MSG("Adding wrapper for void G4Material::SetFreeElectronDensity(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Material::SetFreeElectronDensity(G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:152:8
    t.method("SetFreeElectronDensity", static_cast<void (G4Material::*)(G4double) >(&G4Material::SetFreeElectronDensity));

    DEBUG_MSG("Adding wrapper for void G4Material::ComputeDensityEffectOnFly(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4Material::ComputeDensityEffectOnFly(G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:153:8
    t.method("ComputeDensityEffectOnFly", static_cast<void (G4Material::*)(G4bool) >(&G4Material::ComputeDensityEffectOnFly));

    DEBUG_MSG("Adding wrapper for void G4Material::AddElementByNumberOfAtoms(const G4Element *, G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4Material::AddElementByNumberOfAtoms(const G4Element *, G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:159:8
    t.method("AddElementByNumberOfAtoms", static_cast<void (G4Material::*)(const G4Element *, G4int) >(&G4Material::AddElementByNumberOfAtoms));

    DEBUG_MSG("Adding wrapper for void G4Material::AddElement(G4Element *, G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4Material::AddElement(G4Element *, G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:160:15
    t.method("AddElement", static_cast<void (G4Material::*)(G4Element *, G4int) >(&G4Material::AddElement));

    DEBUG_MSG("Adding wrapper for void G4Material::AddElementByMassFraction(const G4Element *, G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Material::AddElementByMassFraction(const G4Element *, G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:163:8
    t.method("AddElementByMassFraction", static_cast<void (G4Material::*)(const G4Element *, G4double) >(&G4Material::AddElementByMassFraction));

    DEBUG_MSG("Adding wrapper for void G4Material::AddElement(G4Element *, G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Material::AddElement(G4Element *, G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:164:15
    t.method("AddElement", static_cast<void (G4Material::*)(G4Element *, G4double) >(&G4Material::AddElement));

    DEBUG_MSG("Adding wrapper for void G4Material::AddMaterial(G4Material *, G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Material::AddMaterial(G4Material *, G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:166:8
    t.method("AddMaterial", static_cast<void (G4Material::*)(G4Material *, G4double) >(&G4Material::AddMaterial));

    DEBUG_MSG("Adding wrapper for const G4String & G4Material::GetName() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4Material::GetName()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:171:26
    t.method("GetName", static_cast<const G4String & (G4Material::*)()  const>(&G4Material::GetName));

    DEBUG_MSG("Adding wrapper for const G4String & G4Material::GetChemicalFormula() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4Material::GetChemicalFormula()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:172:26
    t.method("GetChemicalFormula", static_cast<const G4String & (G4Material::*)()  const>(&G4Material::GetChemicalFormula));

    DEBUG_MSG("Adding wrapper for G4double G4Material::GetFreeElectronDensity() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Material::GetFreeElectronDensity()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:173:19
    t.method("GetFreeElectronDensity", static_cast<G4double (G4Material::*)()  const>(&G4Material::GetFreeElectronDensity));

    DEBUG_MSG("Adding wrapper for G4double G4Material::GetDensity() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Material::GetDensity()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:174:19
    t.method("GetDensity", static_cast<G4double (G4Material::*)()  const>(&G4Material::GetDensity));

    DEBUG_MSG("Adding wrapper for G4State G4Material::GetState() (" __HERE__ ")");
    // signature to use in the veto list: G4State G4Material::GetState()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:175:18
    t.method("GetState", static_cast<G4State (G4Material::*)()  const>(&G4Material::GetState));

    DEBUG_MSG("Adding wrapper for G4double G4Material::GetTemperature() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Material::GetTemperature()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:176:19
    t.method("GetTemperature", static_cast<G4double (G4Material::*)()  const>(&G4Material::GetTemperature));

    DEBUG_MSG("Adding wrapper for G4double G4Material::GetPressure() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Material::GetPressure()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:177:19
    t.method("GetPressure", static_cast<G4double (G4Material::*)()  const>(&G4Material::GetPressure));

    DEBUG_MSG("Adding wrapper for const G4ElementVector * G4Material::GetElementVector() (" __HERE__ ")");
    // signature to use in the veto list: const G4ElementVector * G4Material::GetElementVector()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:183:33
    t.method("GetElementVector", static_cast<const G4ElementVector * (G4Material::*)()  const>(&G4Material::GetElementVector));

    DEBUG_MSG("Adding wrapper for const G4double * G4Material::GetFractionVector() (" __HERE__ ")");
    // signature to use in the veto list: const G4double * G4Material::GetFractionVector()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:186:26
    t.method("GetFractionVector", static_cast<const G4double * (G4Material::*)()  const>(&G4Material::GetFractionVector));

    DEBUG_MSG("Adding wrapper for const G4int * G4Material::GetAtomsVector() (" __HERE__ ")");
    // signature to use in the veto list: const G4int * G4Material::GetAtomsVector()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:189:23
    t.method("GetAtomsVector", static_cast<const G4int * (G4Material::*)()  const>(&G4Material::GetAtomsVector));

    DEBUG_MSG("Adding wrapper for const G4Element * G4Material::GetElement(G4int) (" __HERE__ ")");
    // signature to use in the veto list: const G4Element * G4Material::GetElement(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:192:27
    t.method("GetElement", static_cast<const G4Element * (G4Material::*)(G4int)  const>(&G4Material::GetElement));

    DEBUG_MSG("Adding wrapper for const G4double * G4Material::GetVecNbOfAtomsPerVolume() (" __HERE__ ")");
    // signature to use in the veto list: const G4double * G4Material::GetVecNbOfAtomsPerVolume()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:195:26
    t.method("GetVecNbOfAtomsPerVolume", static_cast<const G4double * (G4Material::*)()  const>(&G4Material::GetVecNbOfAtomsPerVolume));

    DEBUG_MSG("Adding wrapper for G4double G4Material::GetTotNbOfAtomsPerVolume() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Material::GetTotNbOfAtomsPerVolume()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:197:19
    t.method("GetTotNbOfAtomsPerVolume", static_cast<G4double (G4Material::*)()  const>(&G4Material::GetTotNbOfAtomsPerVolume));

    DEBUG_MSG("Adding wrapper for G4double G4Material::GetTotNbOfElectPerVolume() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Material::GetTotNbOfElectPerVolume()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:199:19
    t.method("GetTotNbOfElectPerVolume", static_cast<G4double (G4Material::*)()  const>(&G4Material::GetTotNbOfElectPerVolume));

    DEBUG_MSG("Adding wrapper for const G4double * G4Material::GetAtomicNumDensityVector() (" __HERE__ ")");
    // signature to use in the veto list: const G4double * G4Material::GetAtomicNumDensityVector()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:202:26
    t.method("GetAtomicNumDensityVector", static_cast<const G4double * (G4Material::*)()  const>(&G4Material::GetAtomicNumDensityVector));

    DEBUG_MSG("Adding wrapper for G4double G4Material::GetElectronDensity() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Material::GetElectronDensity()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:203:19
    t.method("GetElectronDensity", static_cast<G4double (G4Material::*)()  const>(&G4Material::GetElectronDensity));

    DEBUG_MSG("Adding wrapper for G4double G4Material::GetRadlen() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Material::GetRadlen()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:206:19
    t.method("GetRadlen", static_cast<G4double (G4Material::*)()  const>(&G4Material::GetRadlen));

    DEBUG_MSG("Adding wrapper for G4double G4Material::GetNuclearInterLength() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Material::GetNuclearInterLength()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:209:19
    t.method("GetNuclearInterLength", static_cast<G4double (G4Material::*)()  const>(&G4Material::GetNuclearInterLength));

    DEBUG_MSG("Adding wrapper for G4IonisParamMat * G4Material::GetIonisation() (" __HERE__ ")");
    // signature to use in the veto list: G4IonisParamMat * G4Material::GetIonisation()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:212:27
    t.method("GetIonisation", static_cast<G4IonisParamMat * (G4Material::*)()  const>(&G4Material::GetIonisation));

    DEBUG_MSG("Adding wrapper for G4SandiaTable * G4Material::GetSandiaTable() (" __HERE__ ")");
    // signature to use in the veto list: G4SandiaTable * G4Material::GetSandiaTable()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:215:25
    t.method("GetSandiaTable", static_cast<G4SandiaTable * (G4Material::*)()  const>(&G4Material::GetSandiaTable));

    DEBUG_MSG("Adding wrapper for const G4Material * G4Material::GetBaseMaterial() (" __HERE__ ")");
    // signature to use in the veto list: const G4Material * G4Material::GetBaseMaterial()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:218:28
    t.method("GetBaseMaterial", static_cast<const G4Material * (G4Material::*)()  const>(&G4Material::GetBaseMaterial));

    DEBUG_MSG("Adding wrapper for G4double G4Material::GetMassOfMolecule() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Material::GetMassOfMolecule()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:224:19
    t.method("GetMassOfMolecule", static_cast<G4double (G4Material::*)()  const>(&G4Material::GetMassOfMolecule));

    DEBUG_MSG("Adding wrapper for G4double G4Material::GetZ() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Material::GetZ()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:227:12
    t.method("GetZ", static_cast<G4double (G4Material::*)()  const>(&G4Material::GetZ));

    DEBUG_MSG("Adding wrapper for G4double G4Material::GetA() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Material::GetA()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:228:12
    t.method("GetA", static_cast<G4double (G4Material::*)()  const>(&G4Material::GetA));

    DEBUG_MSG("Adding wrapper for void G4Material::SetMaterialPropertiesTable(G4MaterialPropertiesTable *) (" __HERE__ ")");
    // signature to use in the veto list: void G4Material::SetMaterialPropertiesTable(G4MaterialPropertiesTable *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:231:8
    t.method("SetMaterialPropertiesTable", static_cast<void (G4Material::*)(G4MaterialPropertiesTable *) >(&G4Material::SetMaterialPropertiesTable));

    DEBUG_MSG("Adding wrapper for G4MaterialPropertiesTable * G4Material::GetMaterialPropertiesTable() (" __HERE__ ")");
    // signature to use in the veto list: G4MaterialPropertiesTable * G4Material::GetMaterialPropertiesTable()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:233:37
    t.method("GetMaterialPropertiesTable", static_cast<G4MaterialPropertiesTable * (G4Material::*)()  const>(&G4Material::GetMaterialPropertiesTable));

    DEBUG_MSG("Adding wrapper for G4MaterialTable * G4Material::GetMaterialTable() (" __HERE__ ")");
    // signature to use in the veto list: G4MaterialTable * G4Material::GetMaterialTable()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:242:27
    module_.method("G4Material!GetMaterialTable", static_cast<G4MaterialTable * (*)() >(&G4Material::GetMaterialTable));

    DEBUG_MSG("Adding wrapper for G4Material * G4Material::GetMaterial(const G4String &, G4bool) (" __HERE__ ")");
    // signature to use in the veto list: G4Material * G4Material::GetMaterial(const G4String &, G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:247:22
    module_.method("G4Material!GetMaterial", static_cast<G4Material * (*)(const G4String &, G4bool) >(&G4Material::GetMaterial));
    module_.method("G4Material!GetMaterial", [](const G4String & arg0)->G4Material * { return G4Material::GetMaterial(arg0); });

    DEBUG_MSG("Adding wrapper for G4Material * G4Material::GetMaterial(G4double, G4double, G4double) (" __HERE__ ")");
    // signature to use in the veto list: G4Material * G4Material::GetMaterial(G4double, G4double, G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:250:22
    module_.method("G4Material!GetMaterial", static_cast<G4Material * (*)(G4double, G4double, G4double) >(&G4Material::GetMaterial));

    DEBUG_MSG("Adding wrapper for void G4Material::SetName(const G4String &) (" __HERE__ ")");
    // signature to use in the veto list: void G4Material::SetName(const G4String &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:260:15
    t.method("SetName", static_cast<void (G4Material::*)(const G4String &) >(&G4Material::SetName));

    DEBUG_MSG("Adding wrapper for G4bool G4Material::IsExtended() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4Material::IsExtended()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Material.hh:262:18
    t.method("IsExtended", static_cast<G4bool (G4Material::*)()  const>(&G4Material::IsExtended));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4Material>> type_;
};
std::shared_ptr<Wrapper> newJlG4Material(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4Material(module));
}
