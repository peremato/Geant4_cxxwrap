// this file was auto-generated by wrapit v1.3.1-15-g5168a24
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<CLHEP::HepRotation> : std::false_type { };
  template<> struct DefaultConstructible<CLHEP::HepRotation> : std::false_type { };
}

// Class generating the wrapper for type CLHEP::HepRotation
// signature to use in the veto file: CLHEP::HepRotation
struct JlCLHEP_HepRotation: public Wrapper {

  JlCLHEP_HepRotation(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type CLHEP::HepRotation (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:42:7
    jlcxx::TypeWrapper<CLHEP::HepRotation>  t = jlModule.add_type<CLHEP::HepRotation>("CLHEP!HepRotation");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<CLHEP::HepRotation>>(new jlcxx::TypeWrapper<CLHEP::HepRotation>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::HepRotation(const CLHEP::HepRotation &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:51:10
    t.constructor<const CLHEP::HepRotation &>(/*finalize=*/jlcxx::finalize_policy::yes);



    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::HepRotation(const CLHEP::HepRotationX &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:55:10
    t.constructor<const CLHEP::HepRotationX &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::HepRotation(const CLHEP::HepRotationY &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:56:10
    t.constructor<const CLHEP::HepRotationY &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::HepRotation(const CLHEP::HepRotationZ &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:57:10
    t.constructor<const CLHEP::HepRotationZ &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::Hep3Vector &, double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::Hep3Vector &, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:60:17
    t.method("set", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::Hep3Vector &, double) >(&CLHEP::HepRotation::set));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::HepRotation(const CLHEP::Hep3Vector &, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:61:3
    t.constructor<const CLHEP::Hep3Vector &, double>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::HepAxisAngle &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::HepAxisAngle &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:64:17
    t.method("set", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepAxisAngle &) >(&CLHEP::HepRotation::set));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::HepRotation(const CLHEP::HepAxisAngle &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:65:3
    t.constructor<const CLHEP::HepAxisAngle &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::set(double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::set(double, double, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:68:17
    t.method("set", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(double, double, double) >(&CLHEP::HepRotation::set));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::HepRotation(double, double, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:69:3
    t.constructor<double, double, double>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::HepEulerAngles &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::HepEulerAngles &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:72:17
    t.method("set", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepEulerAngles &) >(&CLHEP::HepRotation::set));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::HepRotation(const CLHEP::HepEulerAngles &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:73:3
    t.constructor<const CLHEP::HepEulerAngles &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::HepRotation(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:76:3
    t.constructor<const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:86:17
    t.method("set", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &) >(&CLHEP::HepRotation::set));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::setRows(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::setRows(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:91:17
    t.method("setRows", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &) >(&CLHEP::HepRotation::setRows));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::HepRotationX &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::HepRotationX &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:96:24
    t.method("set", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotationX &) >(&CLHEP::HepRotation::set));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::HepRotationY &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::HepRotationY &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:97:24
    t.method("set", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotationY &) >(&CLHEP::HepRotation::set));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::HepRotationZ &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::HepRotationZ &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:98:24
    t.method("set", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotationZ &) >(&CLHEP::HepRotation::set));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::operator=(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::operator=(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:101:25
    t.method("assign", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotation &) >(&CLHEP::HepRotation::operator=));


    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::operator=(const CLHEP::HepRotationX &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::operator=(const CLHEP::HepRotationX &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:105:25
    t.method("assign", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotationX &) >(&CLHEP::HepRotation::operator=));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::operator=(const CLHEP::HepRotationY &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::operator=(const CLHEP::HepRotationY &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:106:25
    t.method("assign", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotationY &) >(&CLHEP::HepRotation::operator=));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::operator=(const CLHEP::HepRotationZ &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::operator=(const CLHEP::HepRotationZ &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:107:25
    t.method("assign", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotationZ &) >(&CLHEP::HepRotation::operator=));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::HepRep3x3 &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::set(const CLHEP::HepRep3x3 &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:110:23
    t.method("set", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRep3x3 &) >(&CLHEP::HepRotation::set));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::HepRotation(const CLHEP::HepRep3x3 &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:111:10
    t.constructor<const CLHEP::HepRep3x3 &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::HepRotation::colX() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::HepRotation::colX()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:121:21
    t.method("colX", static_cast<CLHEP::Hep3Vector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::colX));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::HepRotation::colY() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::HepRotation::colY()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:122:21
    t.method("colY", static_cast<CLHEP::Hep3Vector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::colY));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::HepRotation::colZ() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::HepRotation::colZ()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:123:21
    t.method("colZ", static_cast<CLHEP::Hep3Vector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::colZ));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::HepRotation::rowX() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::HepRotation::rowX()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:126:21
    t.method("rowX", static_cast<CLHEP::Hep3Vector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::rowX));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::HepRotation::rowY() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::HepRotation::rowY()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:127:21
    t.method("rowY", static_cast<CLHEP::Hep3Vector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::rowY));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::HepRotation::rowZ() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::HepRotation::rowZ()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:128:21
    t.method("rowZ", static_cast<CLHEP::Hep3Vector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::rowZ));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::xx() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::xx()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:131:17
    t.method("xx", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::xx));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::xy() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::xy()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:132:17
    t.method("xy", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::xy));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::xz() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::xz()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:133:17
    t.method("xz", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::xz));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::yx() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::yx()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:134:17
    t.method("yx", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::yx));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::yy() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::yy()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:135:17
    t.method("yy", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::yy));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::yz() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::yz()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:136:17
    t.method("yz", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::yz));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::zx() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::zx()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:137:17
    t.method("zx", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::zx));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::zy() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::zy()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:138:17
    t.method("zy", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::zy));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::zz() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::zz()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:139:17
    t.method("zz", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::zz));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRep3x3 CLHEP::HepRotation::rep3x3() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRep3x3 CLHEP::HepRotation::rep3x3()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:142:20
    t.method("rep3x3", static_cast<CLHEP::HepRep3x3 (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::rep3x3));
    module_.set_override_module(jl_base_module);


    DEBUG_MSG("Adding getindex method to wrap const CLHEP::HepRotation::HepRotation_row CLHEP::HepRotation::operator[](int) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:157:32
    t.method("getindex",
      [](CLHEP::HepRotation& a, int i){
      return a[i];
    });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::operator()(int, int) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::operator()(int, int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:161:10
    t.method("paren", static_cast<double (CLHEP::HepRotation::*)(int, int)  const>(&CLHEP::HepRotation::operator()));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::getPhi() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::getPhi()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:166:18
    t.method("getPhi", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::getPhi));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::getTheta() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::getTheta()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:167:18
    t.method("getTheta", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::getTheta));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::getPsi() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::getPsi()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:168:18
    t.method("getPsi", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::getPsi));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::phi() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::phi()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:169:13
    t.method("phi", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::phi));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::theta() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::theta()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:170:13
    t.method("theta", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::theta));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::psi() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::psi()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:171:13
    t.method("psi", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::psi));

    DEBUG_MSG("Adding wrapper for CLHEP::HepEulerAngles CLHEP::HepRotation::eulerAngles() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepEulerAngles CLHEP::HepRotation::eulerAngles()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:172:18
    t.method("eulerAngles", static_cast<CLHEP::HepEulerAngles (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::eulerAngles));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::getDelta() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::getDelta()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:175:19
    t.method("getDelta", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::getDelta));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::HepRotation::getAxis() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::HepRotation::getAxis()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:176:22
    t.method("getAxis", static_cast<CLHEP::Hep3Vector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::getAxis));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::delta() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::delta()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:177:14
    t.method("delta", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::delta));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::HepRotation::axis() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::HepRotation::axis()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:178:17
    t.method("axis", static_cast<CLHEP::Hep3Vector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::axis));

    DEBUG_MSG("Adding wrapper for CLHEP::HepAxisAngle CLHEP::HepRotation::axisAngle() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepAxisAngle CLHEP::HepRotation::axisAngle()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:179:17
    t.method("axisAngle", static_cast<CLHEP::HepAxisAngle (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::axisAngle));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::getAngleAxis(double &, CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepRotation::getAngleAxis(double &, CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:180:8
    t.method("getAngleAxis", static_cast<void (CLHEP::HepRotation::*)(double &, CLHEP::Hep3Vector &)  const>(&CLHEP::HepRotation::getAngleAxis));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::phiX() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::phiX()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:184:10
    t.method("phiX", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::phiX));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::phiY() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::phiY()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:185:10
    t.method("phiY", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::phiY));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::phiZ() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::phiZ()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:186:10
    t.method("phiZ", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::phiZ));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::thetaX() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::thetaX()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:187:10
    t.method("thetaX", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::thetaX));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::thetaY() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::thetaY()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:188:10
    t.method("thetaY", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::thetaY));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::thetaZ() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::thetaZ()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:189:10
    t.method("thetaZ", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::thetaZ));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepRotation::col1() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepRotation::col1()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:195:27
    t.method("col1", static_cast<CLHEP::HepLorentzVector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::col1));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepRotation::col2() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepRotation::col2()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:196:27
    t.method("col2", static_cast<CLHEP::HepLorentzVector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::col2));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepRotation::col3() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepRotation::col3()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:197:27
    t.method("col3", static_cast<CLHEP::HepLorentzVector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::col3));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepRotation::col4() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepRotation::col4()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:200:27
    t.method("col4", static_cast<CLHEP::HepLorentzVector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::col4));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepRotation::row1() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepRotation::row1()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:203:27
    t.method("row1", static_cast<CLHEP::HepLorentzVector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::row1));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepRotation::row2() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepRotation::row2()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:204:27
    t.method("row2", static_cast<CLHEP::HepLorentzVector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::row2));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepRotation::row3() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepRotation::row3()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:205:27
    t.method("row3", static_cast<CLHEP::HepLorentzVector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::row3));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepRotation::row4() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepRotation::row4()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:208:27
    t.method("row4", static_cast<CLHEP::HepLorentzVector (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::row4));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::xt() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::xt()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:211:17
    t.method("xt", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::xt));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::yt() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::yt()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:212:17
    t.method("yt", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::yt));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::zt() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::zt()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:213:17
    t.method("zt", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::zt));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::tx() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::tx()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:214:17
    t.method("tx", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::tx));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::ty() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::ty()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:215:17
    t.method("ty", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::ty));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::tz() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::tz()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:216:17
    t.method("tz", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::tz));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::tt() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::tt()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:219:17
    t.method("tt", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::tt));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRep4x4 CLHEP::HepRotation::rep4x4() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRep4x4 CLHEP::HepRotation::rep4x4()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:222:20
    t.method("rep4x4", static_cast<CLHEP::HepRep4x4 (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::rep4x4));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::setPhi(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepRotation::setPhi(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:227:8
    t.method("setPhi", static_cast<void (CLHEP::HepRotation::*)(double) >(&CLHEP::HepRotation::setPhi));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::setTheta(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepRotation::setTheta(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:230:8
    t.method("setTheta", static_cast<void (CLHEP::HepRotation::*)(double) >(&CLHEP::HepRotation::setTheta));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::setPsi(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepRotation::setPsi(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:233:8
    t.method("setPsi", static_cast<void (CLHEP::HepRotation::*)(double) >(&CLHEP::HepRotation::setPsi));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::setAxis(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepRotation::setAxis(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:236:8
    t.method("setAxis", static_cast<void (CLHEP::HepRotation::*)(const CLHEP::Hep3Vector &) >(&CLHEP::HepRotation::setAxis));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::setDelta(double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepRotation::setDelta(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:239:8
    t.method("setDelta", static_cast<void (CLHEP::HepRotation::*)(double) >(&CLHEP::HepRotation::setDelta));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::decompose(CLHEP::HepAxisAngle &, CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepRotation::decompose(CLHEP::HepAxisAngle &, CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:244:8
    t.method("decompose", static_cast<void (CLHEP::HepRotation::*)(CLHEP::HepAxisAngle &, CLHEP::Hep3Vector &)  const>(&CLHEP::HepRotation::decompose));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::decompose(CLHEP::Hep3Vector &, CLHEP::HepAxisAngle &) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepRotation::decompose(CLHEP::Hep3Vector &, CLHEP::HepAxisAngle &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:245:8
    t.method("decompose", static_cast<void (CLHEP::HepRotation::*)(CLHEP::Hep3Vector &, CLHEP::HepAxisAngle &)  const>(&CLHEP::HepRotation::decompose));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepRotation::isIdentity() (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepRotation::isIdentity()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:250:8
    t.method("isIdentity", static_cast<bool (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::isIdentity));

    DEBUG_MSG("Adding wrapper for int CLHEP::HepRotation::compare(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: int CLHEP::HepRotation::compare(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:253:7
    t.method("compare", static_cast<int (CLHEP::HepRotation::*)(const CLHEP::HepRotation &)  const>(&CLHEP::HepRotation::compare));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepRotation::operator==(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepRotation::operator==(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:257:15
    t.method("==", static_cast<bool (CLHEP::HepRotation::*)(const CLHEP::HepRotation &)  const>(&CLHEP::HepRotation::operator==));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepRotation::operator!=(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepRotation::operator!=(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:258:15
    t.method("!=", static_cast<bool (CLHEP::HepRotation::*)(const CLHEP::HepRotation &)  const>(&CLHEP::HepRotation::operator!=));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepRotation::operator<(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepRotation::operator<(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:259:15
    t.method("<", static_cast<bool (CLHEP::HepRotation::*)(const CLHEP::HepRotation &)  const>(&CLHEP::HepRotation::operator<));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepRotation::operator>(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepRotation::operator>(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:260:15
    t.method(">", static_cast<bool (CLHEP::HepRotation::*)(const CLHEP::HepRotation &)  const>(&CLHEP::HepRotation::operator>));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepRotation::operator<=(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepRotation::operator<=(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:261:15
    t.method("<=", static_cast<bool (CLHEP::HepRotation::*)(const CLHEP::HepRotation &)  const>(&CLHEP::HepRotation::operator<=));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepRotation::operator>=(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepRotation::operator>=(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:262:15
    t.method(">=", static_cast<bool (CLHEP::HepRotation::*)(const CLHEP::HepRotation &)  const>(&CLHEP::HepRotation::operator>=));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::distance2(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::distance2(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:264:10
    t.method("distance2", static_cast<double (CLHEP::HepRotation::*)(const CLHEP::HepRotation &)  const>(&CLHEP::HepRotation::distance2));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::howNear(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::howNear(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:267:10
    t.method("howNear", static_cast<double (CLHEP::HepRotation::*)(const CLHEP::HepRotation &)  const>(&CLHEP::HepRotation::howNear));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepRotation::isNear(const CLHEP::HepRotation &, double) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepRotation::isNear(const CLHEP::HepRotation &, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:268:8
    t.method("isNear", static_cast<bool (CLHEP::HepRotation::*)(const CLHEP::HepRotation &, double)  const>(&CLHEP::HepRotation::isNear));
    t.method("isNear", [](CLHEP::HepRotation const& a, const CLHEP::HepRotation & arg0)->bool { return a.isNear(arg0); });
    t.method("isNear", [](CLHEP::HepRotation const* a, const CLHEP::HepRotation & arg0)->bool { return a->isNear(arg0); });

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::distance2(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::distance2(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:271:10
    t.method("distance2", static_cast<double (CLHEP::HepRotation::*)(const CLHEP::HepBoost &)  const>(&CLHEP::HepRotation::distance2));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::distance2(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::distance2(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:273:10
    t.method("distance2", static_cast<double (CLHEP::HepRotation::*)(const CLHEP::HepLorentzRotation &)  const>(&CLHEP::HepRotation::distance2));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::howNear(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::howNear(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:276:10
    t.method("howNear", static_cast<double (CLHEP::HepRotation::*)(const CLHEP::HepBoost &)  const>(&CLHEP::HepRotation::howNear));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::howNear(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::howNear(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:277:10
    t.method("howNear", static_cast<double (CLHEP::HepRotation::*)(const CLHEP::HepLorentzRotation &)  const>(&CLHEP::HepRotation::howNear));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepRotation::isNear(const CLHEP::HepBoost &, double) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepRotation::isNear(const CLHEP::HepBoost &, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:278:8
    t.method("isNear", static_cast<bool (CLHEP::HepRotation::*)(const CLHEP::HepBoost &, double)  const>(&CLHEP::HepRotation::isNear));
    t.method("isNear", [](CLHEP::HepRotation const& a, const CLHEP::HepBoost & arg0)->bool { return a.isNear(arg0); });
    t.method("isNear", [](CLHEP::HepRotation const* a, const CLHEP::HepBoost & arg0)->bool { return a->isNear(arg0); });

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepRotation::isNear(const CLHEP::HepLorentzRotation &, double) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepRotation::isNear(const CLHEP::HepLorentzRotation &, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:280:8
    t.method("isNear", static_cast<bool (CLHEP::HepRotation::*)(const CLHEP::HepLorentzRotation &, double)  const>(&CLHEP::HepRotation::isNear));
    t.method("isNear", [](CLHEP::HepRotation const& a, const CLHEP::HepLorentzRotation & arg0)->bool { return a.isNear(arg0); });
    t.method("isNear", [](CLHEP::HepRotation const* a, const CLHEP::HepLorentzRotation & arg0)->bool { return a->isNear(arg0); });

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::norm2() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::norm2()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:285:10
    t.method("norm2", static_cast<double (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::norm2));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepRotation::rectify() (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepRotation::rectify()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:288:8
    t.method("rectify", static_cast<void (CLHEP::HepRotation::*)() >(&CLHEP::HepRotation::rectify));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::HepRotation::operator()(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::HepRotation::operator()(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:298:21
    t.method("paren", static_cast<CLHEP::Hep3Vector (CLHEP::HepRotation::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::HepRotation::operator()));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::HepRotation::operator*(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::HepRotation::operator*(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:301:22
    t.method("*", static_cast<CLHEP::Hep3Vector (CLHEP::HepRotation::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::HepRotation::operator*));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepRotation::operator()(const CLHEP::HepLorentzVector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepRotation::operator()(const CLHEP::HepLorentzVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:304:27
    t.method("paren", static_cast<CLHEP::HepLorentzVector (CLHEP::HepRotation::*)(const CLHEP::HepLorentzVector &)  const>(&CLHEP::HepRotation::operator()));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepRotation::operator*(const CLHEP::HepLorentzVector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepRotation::operator*(const CLHEP::HepLorentzVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:307:28
    t.method("*", static_cast<CLHEP::HepLorentzVector (CLHEP::HepRotation::*)(const CLHEP::HepLorentzVector &)  const>(&CLHEP::HepRotation::operator*));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation CLHEP::HepRotation::operator*(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation CLHEP::HepRotation::operator*(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:312:22
    t.method("*", static_cast<CLHEP::HepRotation (CLHEP::HepRotation::*)(const CLHEP::HepRotation &)  const>(&CLHEP::HepRotation::operator*));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation CLHEP::HepRotation::operator*(const CLHEP::HepRotationX &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation CLHEP::HepRotation::operator*(const CLHEP::HepRotationX &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:315:22
    t.method("*", static_cast<CLHEP::HepRotation (CLHEP::HepRotation::*)(const CLHEP::HepRotationX &)  const>(&CLHEP::HepRotation::operator*));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation CLHEP::HepRotation::operator*(const CLHEP::HepRotationY &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation CLHEP::HepRotation::operator*(const CLHEP::HepRotationY &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:316:22
    t.method("*", static_cast<CLHEP::HepRotation (CLHEP::HepRotation::*)(const CLHEP::HepRotationY &)  const>(&CLHEP::HepRotation::operator*));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation CLHEP::HepRotation::operator*(const CLHEP::HepRotationZ &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation CLHEP::HepRotation::operator*(const CLHEP::HepRotationZ &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:317:22
    t.method("*", static_cast<CLHEP::HepRotation (CLHEP::HepRotation::*)(const CLHEP::HepRotationZ &)  const>(&CLHEP::HepRotation::operator*));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::operator*=(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::operator*=(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:320:25
    t.method("mult!", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotation &) >(&CLHEP::HepRotation::operator*=));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::transform(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::transform(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:321:25
    t.method("transform", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotation &) >(&CLHEP::HepRotation::transform));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::operator*=(const CLHEP::HepRotationX &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::operator*=(const CLHEP::HepRotationX &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:325:25
    t.method("mult!", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotationX &) >(&CLHEP::HepRotation::operator*=));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::operator*=(const CLHEP::HepRotationY &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::operator*=(const CLHEP::HepRotationY &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:326:25
    t.method("mult!", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotationY &) >(&CLHEP::HepRotation::operator*=));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::operator*=(const CLHEP::HepRotationZ &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::operator*=(const CLHEP::HepRotationZ &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:327:25
    t.method("mult!", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotationZ &) >(&CLHEP::HepRotation::operator*=));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::transform(const CLHEP::HepRotationX &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::transform(const CLHEP::HepRotationX &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:328:25
    t.method("transform", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotationX &) >(&CLHEP::HepRotation::transform));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::transform(const CLHEP::HepRotationY &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::transform(const CLHEP::HepRotationY &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:329:25
    t.method("transform", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotationY &) >(&CLHEP::HepRotation::transform));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::transform(const CLHEP::HepRotationZ &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::transform(const CLHEP::HepRotationZ &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:330:25
    t.method("transform", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::HepRotationZ &) >(&CLHEP::HepRotation::transform));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::rotateX(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::rotateX(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:333:17
    t.method("rotateX", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(double) >(&CLHEP::HepRotation::rotateX));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::rotateY(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::rotateY(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:336:17
    t.method("rotateY", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(double) >(&CLHEP::HepRotation::rotateY));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::rotateZ(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::rotateZ(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:339:17
    t.method("rotateZ", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(double) >(&CLHEP::HepRotation::rotateZ));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::rotate(double, const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::rotate(double, const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:342:24
    t.method("rotate", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(double, const CLHEP::Hep3Vector &) >(&CLHEP::HepRotation::rotate));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::rotate(double, const CLHEP::Hep3Vector *) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::rotate(double, const CLHEP::Hep3Vector *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:343:24
    t.method("rotate", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(double, const CLHEP::Hep3Vector *) >(&CLHEP::HepRotation::rotate));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::rotateAxes(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::rotateAxes(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:347:17
    t.method("rotateAxes", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &) >(&CLHEP::HepRotation::rotateAxes));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation CLHEP::HepRotation::inverse() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation CLHEP::HepRotation::inverse()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:353:22
    t.method("inverse", static_cast<CLHEP::HepRotation (CLHEP::HepRotation::*)()  const>(&CLHEP::HepRotation::inverse));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRotation & CLHEP::HepRotation::invert() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRotation & CLHEP::HepRotation::invert()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:356:24
    t.method("invert", static_cast<CLHEP::HepRotation & (CLHEP::HepRotation::*)() >(&CLHEP::HepRotation::invert));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::getTolerance() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::getTolerance()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:370:24
    module_.method("CLHEP!HepRotation!getTolerance", static_cast<double (*)() >(&CLHEP::HepRotation::getTolerance));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepRotation::setTolerance(double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepRotation::setTolerance(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Rotation.h:371:24
    module_.method("CLHEP!HepRotation!setTolerance", static_cast<double (*)(double) >(&CLHEP::HepRotation::setTolerance));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<CLHEP::HepRotation>> type_;
};
std::shared_ptr<Wrapper> newJlCLHEP_HepRotation(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlCLHEP_HepRotation(module));
}
