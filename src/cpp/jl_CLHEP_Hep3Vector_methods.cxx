// this file was auto-generated by wrapit v0.1.0-54-g4322429
#include <type_traits>
#include "jlcxx/jlcxx.hpp"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

#include "cpp/jlGeant4.h"


#ifdef VERBOSE_IMPORT
#  define DEBUG_MSG(a) std::cerr << a << "\n"
#else
#  define DEBUG_MSG(a)
#endif
#define __HERE__  __FILE__ ":" QUOTE2(__LINE__)
#define QUOTE(arg) #arg
#define QUOTE2(arg) QUOTE(arg)
void add_methods_for_CLHEP_Hep3Vector(jlcxx::Module& types, jlcxx::TypeWrapper<CLHEP::Hep3Vector>& t8) {


  /**********************************************************************/
  /* Wrappers for the methods of class CLHEP::Hep3Vector
   */


  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::Hep3Vector(double) (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:47:12
  t8.constructor<double>(/*finalize=*/true);


  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::Hep3Vector(double, double) (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:48:3
  t8.constructor<double, double>(/*finalize=*/true);


  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::Hep3Vector(double, double, double) (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:49:3
  t8.constructor<double, double, double>(/*finalize=*/true);


  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::Hep3Vector(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:52:10
  t8.constructor<const CLHEP::Hep3Vector &>(/*finalize=*/true);


  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::operator()(int) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::operator()(int)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:59:17
  t8.method("paren", static_cast<double (CLHEP::Hep3Vector::*)(int)  const>(&CLHEP::Hep3Vector::operator()));
  types.set_override_module(jl_base_module);


  DEBUG_MSG("Adding getindex method to wrap double CLHEP::Hep3Vector::operator[](int) (" __HERE__ ")");
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:62:17
  t8.method("getindex",
    [](CLHEP::Hep3Vector& a, int i){
    return a[i];
  });

  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for double & CLHEP::Hep3Vector::operator()(int) (" __HERE__ ")");
  // signature to use in the veto list: double & CLHEP::Hep3Vector::operator()(int)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:65:19
  t8.method("paren", static_cast<double & (CLHEP::Hep3Vector::*)(int) >(&CLHEP::Hep3Vector::operator()));
  types.set_override_module(jl_base_module);


  DEBUG_MSG("Adding setindex! method  to wrap double & CLHEP::Hep3Vector::operator[](int) (" __HERE__ ")");
// defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:68:19
  t8.method("setindex!",
    [](CLHEP::Hep3Vector& a, int i, double const & val){
    return a[i] = val;
  });

  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::x() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::x()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:71:17
  t8.method("x", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::x));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::y() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::y()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:72:17
  t8.method("y", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::y));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::z() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::z()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:73:17
  t8.method("z", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::z));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setX(double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setX(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:76:15
  t8.method("setX", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setX));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setY(double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setY(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:77:15
  t8.method("setY", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setY));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setZ(double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setZ(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:78:15
  t8.method("setZ", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setZ));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::set(double, double, double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::set(double, double, double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:81:15
  t8.method("set", static_cast<void (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::set));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::phi() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::phi()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:84:17
  t8.method("phi", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::phi));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::theta() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::theta()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:87:17
  t8.method("theta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::theta));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::cosTheta() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::cosTheta()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:90:17
  t8.method("cosTheta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::cosTheta));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::cos2Theta() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::cos2Theta()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:93:17
  t8.method("cos2Theta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::cos2Theta));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::mag2() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::mag2()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:96:17
  t8.method("mag2", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::mag2));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::mag() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::mag()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:99:17
  t8.method("mag", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::mag));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setPhi(double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setPhi(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:102:15
  t8.method("setPhi", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setPhi));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setTheta(double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setTheta(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:105:15
  t8.method("setTheta", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setTheta));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setMag(double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setMag(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:108:15
  t8.method("setMag", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setMag));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::perp2() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::perp2()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:111:17
  t8.method("perp2", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::perp2));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::perp() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::perp()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:114:17
  t8.method("perp", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::perp));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setPerp(double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setPerp(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:117:15
  t8.method("setPerp", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setPerp));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setCylTheta(double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setCylTheta(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:120:8
  t8.method("setCylTheta", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setCylTheta));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::perp2(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::perp2(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:123:17
  t8.method("perp2", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::perp2));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::perp(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::perp(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:126:17
  t8.method("perp", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::perp));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator=(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator=(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:129:23
  t8.method("assign", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &) >(&CLHEP::Hep3Vector::operator=));

  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::operator==(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: bool CLHEP::Hep3Vector::operator==(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:133:15
  t8.method("==", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::operator==));

  DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::operator!=(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: bool CLHEP::Hep3Vector::operator!=(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:134:15
  t8.method("!=", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::operator!=));

  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::isNear(const CLHEP::Hep3Vector &, double) (" __HERE__ ")");
  // signature to use in the veto list: bool CLHEP::Hep3Vector::isNear(const CLHEP::Hep3Vector &, double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:137:8
  t8.method("isNear", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &, double)  const>(&CLHEP::Hep3Vector::isNear));
  t8.method("isNear", [](CLHEP::Hep3Vector const& a, const CLHEP::Hep3Vector & arg0)->bool{ return a.isNear(arg0); });
  t8.method("isNear", [](CLHEP::Hep3Vector const* a, const CLHEP::Hep3Vector & arg0)->bool{ return a->isNear(arg0); });

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::howNear(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::howNear(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:141:10
  t8.method("howNear", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::howNear));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::deltaR(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::deltaR(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:145:10
  t8.method("deltaR", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::deltaR));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator+=(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator+=(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:148:23
  t8.method("add!", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &) >(&CLHEP::Hep3Vector::operator+=));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator-=(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator-=(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:151:23
  t8.method("sub!", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &) >(&CLHEP::Hep3Vector::operator-=));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::operator-() (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::operator-()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:154:21
  t8.method("-", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::operator-));

  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator*=(double) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator*=(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:157:23
  t8.method("mult!", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::operator*=));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator/=(double) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator/=(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:160:23
  t8.method("fdiv!", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::operator/=));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::unit() (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::unit()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:163:21
  t8.method("unit", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::unit));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::orthogonal() (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::orthogonal()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:166:21
  t8.method("orthogonal", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::orthogonal));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::dot(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::dot(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:169:17
  t8.method("dot", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::dot));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::cross(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::cross(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:172:21
  t8.method("cross", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::cross));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::angle(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::angle(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:175:10
  t8.method("angle", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::angle));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::pseudoRapidity() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::pseudoRapidity()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:178:10
  t8.method("pseudoRapidity", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::pseudoRapidity));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setEta(double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setEta(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:181:8
  t8.method("setEta", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setEta));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setCylEta(double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setCylEta(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:184:8
  t8.method("setCylEta", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setCylEta));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateX(double) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateX(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:187:16
  t8.method("rotateX", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::rotateX));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateY(double) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateY(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:190:16
  t8.method("rotateY", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::rotateY));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateZ(double) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateZ(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:193:16
  t8.method("rotateZ", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::rotateZ));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateUz(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotateUz(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:196:16
  t8.method("rotateUz", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &) >(&CLHEP::Hep3Vector::rotateUz));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(double, const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(double, const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:199:18
  t8.method("rotate", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double, const CLHEP::Hep3Vector &) >(&CLHEP::Hep3Vector::rotate));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator*=(const CLHEP::HepRotation &) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::operator*=(const CLHEP::HepRotation &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:203:16
  t8.method("mult!", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::HepRotation &) >(&CLHEP::Hep3Vector::operator*=));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::transform(const CLHEP::HepRotation &) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::transform(const CLHEP::HepRotation &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:204:16
  t8.method("transform", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::HepRotation &) >(&CLHEP::Hep3Vector::transform));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setRThetaPhi(double, double, double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setRThetaPhi(double, double, double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:223:15
  t8.method("setRThetaPhi", static_cast<void (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::setRThetaPhi));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setREtaPhi(double, double, double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setREtaPhi(double, double, double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:226:15
  t8.method("setREtaPhi", static_cast<void (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::setREtaPhi));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setRhoPhiZ(double, double, double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setRhoPhiZ(double, double, double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:229:15
  t8.method("setRhoPhiZ", static_cast<void (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::setRhoPhiZ));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setRhoPhiTheta(double, double, double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setRhoPhiTheta(double, double, double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:232:8
  t8.method("setRhoPhiTheta", static_cast<void (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::setRhoPhiTheta));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setRhoPhiEta(double, double, double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setRhoPhiEta(double, double, double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:235:8
  t8.method("setRhoPhiEta", static_cast<void (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::setRhoPhiEta));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getX() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::getX()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:240:17
  t8.method("getX", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getX));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getY() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::getY()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:241:17
  t8.method("getY", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getY));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getZ() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::getZ()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:242:17
  t8.method("getZ", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getZ));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getR() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::getR()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:245:17
  t8.method("getR", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getR));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getTheta() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::getTheta()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:246:17
  t8.method("getTheta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getTheta));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getPhi() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::getPhi()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:247:17
  t8.method("getPhi", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getPhi));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::r() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::r()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:250:17
  t8.method("r", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::r));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::rho() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::rho()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:253:17
  t8.method("rho", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::rho));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getRho() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::getRho()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:254:17
  t8.method("getRho", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getRho));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::eta() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::eta()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:257:10
  t8.method("eta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::eta));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getEta() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::getEta()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:258:10
  t8.method("getEta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::getEta));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setR(double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setR(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:261:15
  t8.method("setR", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setR));

  DEBUG_MSG("Adding wrapper for void CLHEP::Hep3Vector::setRho(double) (" __HERE__ ")");
  // signature to use in the veto list: void CLHEP::Hep3Vector::setRho(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:264:15
  t8.method("setRho", static_cast<void (CLHEP::Hep3Vector::*)(double) >(&CLHEP::Hep3Vector::setRho));

  DEBUG_MSG("Adding wrapper for int CLHEP::Hep3Vector::compare(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: int CLHEP::Hep3Vector::compare(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:269:7
  t8.method("compare", static_cast<int (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::compare));
  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::operator>(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: bool CLHEP::Hep3Vector::operator>(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:270:8
  t8.method(">", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::operator>));

  DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::operator<(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: bool CLHEP::Hep3Vector::operator<(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:271:8
  t8.method("<", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::operator<));

  DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::operator>=(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: bool CLHEP::Hep3Vector::operator>=(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:272:8
  t8.method(">=", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::operator>=));

  DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::operator<=(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: bool CLHEP::Hep3Vector::operator<=(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:273:8
  t8.method("<=", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::operator<=));

  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::diff2(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::diff2(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:276:17
  t8.method("diff2", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::diff2));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::setTolerance(double) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::setTolerance(double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:279:17
  t8.method("CLHEP!Hep3Vector!setTolerance", static_cast<double (*)(double) >(&CLHEP::Hep3Vector::setTolerance));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::getTolerance() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::getTolerance()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:280:24
  t8.method("CLHEP!Hep3Vector!getTolerance", static_cast<double (*)() >(&CLHEP::Hep3Vector::getTolerance));

  DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::isParallel(const CLHEP::Hep3Vector &, double) (" __HERE__ ")");
  // signature to use in the veto list: bool CLHEP::Hep3Vector::isParallel(const CLHEP::Hep3Vector &, double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:283:8
  t8.method("isParallel", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &, double)  const>(&CLHEP::Hep3Vector::isParallel));
  t8.method("isParallel", [](CLHEP::Hep3Vector const& a, const CLHEP::Hep3Vector & arg0)->bool{ return a.isParallel(arg0); });
  t8.method("isParallel", [](CLHEP::Hep3Vector const* a, const CLHEP::Hep3Vector & arg0)->bool{ return a->isParallel(arg0); });

  DEBUG_MSG("Adding wrapper for bool CLHEP::Hep3Vector::isOrthogonal(const CLHEP::Hep3Vector &, double) (" __HERE__ ")");
  // signature to use in the veto list: bool CLHEP::Hep3Vector::isOrthogonal(const CLHEP::Hep3Vector &, double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:286:8
  t8.method("isOrthogonal", static_cast<bool (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &, double)  const>(&CLHEP::Hep3Vector::isOrthogonal));
  t8.method("isOrthogonal", [](CLHEP::Hep3Vector const& a, const CLHEP::Hep3Vector & arg0)->bool{ return a.isOrthogonal(arg0); });
  t8.method("isOrthogonal", [](CLHEP::Hep3Vector const* a, const CLHEP::Hep3Vector & arg0)->bool{ return a->isOrthogonal(arg0); });

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::howParallel(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::howParallel(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:289:10
  t8.method("howParallel", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::howParallel));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::howOrthogonal(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::howOrthogonal(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:292:10
  t8.method("howOrthogonal", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::howOrthogonal));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::beta() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::beta()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:299:10
  t8.method("beta", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::beta));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::gamma() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::gamma()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:303:10
  t8.method("gamma", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::gamma));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::coLinearRapidity() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::coLinearRapidity()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:306:10
  t8.method("coLinearRapidity", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::coLinearRapidity));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::angle() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::angle()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:314:17
  t8.method("angle", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::angle));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::theta(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::theta(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:317:17
  t8.method("theta", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::theta));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::cosTheta(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::cosTheta(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:320:10
  t8.method("cosTheta", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::cosTheta));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::cos2Theta(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::cos2Theta(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:321:10
  t8.method("cos2Theta", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::cos2Theta));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::project() (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::project()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:324:21
  t8.method("project", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::project));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::project(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::project(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:325:21
  t8.method("project", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::project));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::perpPart() (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::perpPart()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:328:21
  t8.method("perpPart", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::perpPart));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::Hep3Vector::perpPart(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::Hep3Vector::perpPart(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:329:21
  t8.method("perpPart", static_cast<CLHEP::Hep3Vector (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::perpPart));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::rapidity() (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::rapidity()
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:332:10
  t8.method("rapidity", static_cast<double (CLHEP::Hep3Vector::*)()  const>(&CLHEP::Hep3Vector::rapidity));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::rapidity(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::rapidity(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:335:10
  t8.method("rapidity", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::rapidity));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::eta(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::eta(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:339:10
  t8.method("eta", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::eta));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::polarAngle(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::polarAngle(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:346:10
  t8.method("polarAngle", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::polarAngle));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::deltaPhi(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::deltaPhi(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:349:10
  t8.method("deltaPhi", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::deltaPhi));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::azimAngle(const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::azimAngle(const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:352:10
  t8.method("azimAngle", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::azimAngle));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::polarAngle(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::polarAngle(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:355:10
  t8.method("polarAngle", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::polarAngle));

  DEBUG_MSG("Adding wrapper for double CLHEP::Hep3Vector::azimAngle(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &) (" __HERE__ ")");
  // signature to use in the veto list: double CLHEP::Hep3Vector::azimAngle(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:360:10
  t8.method("azimAngle", static_cast<double (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &, const CLHEP::Hep3Vector &)  const>(&CLHEP::Hep3Vector::azimAngle));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(const CLHEP::Hep3Vector &, double) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(const CLHEP::Hep3Vector &, double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:371:16
  t8.method("rotate", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::Hep3Vector &, double) >(&CLHEP::Hep3Vector::rotate));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(const CLHEP::HepAxisAngle &) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(const CLHEP::HepAxisAngle &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:374:16
  t8.method("rotate", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::HepAxisAngle &) >(&CLHEP::Hep3Vector::rotate));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(const CLHEP::HepEulerAngles &) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(const CLHEP::HepEulerAngles &)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:377:16
  t8.method("rotate", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(const CLHEP::HepEulerAngles &) >(&CLHEP::Hep3Vector::rotate));

  DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(double, double, double) (" __HERE__ ")");
  // signature to use in the veto list: CLHEP::Hep3Vector & CLHEP::Hep3Vector::rotate(double, double, double)
  // defined in /Users/mato/.julia/artifacts/3ddffb81697f6dd4742c75d8b8d14865fe8a388c/include/Geant4/CLHEP/Vector/ThreeVector.h:378:16
  t8.method("rotate", static_cast<CLHEP::Hep3Vector & (CLHEP::Hep3Vector::*)(double, double, double) >(&CLHEP::Hep3Vector::rotate));

  /* End of CLHEP::Hep3Vector class method wrappers
   **********************************************************************/

}
