// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<CLHEP::RandPoissonQ> : std::false_type { };
  template<> struct DefaultConstructible<CLHEP::RandPoissonQ> : std::false_type { };
}

// Class generating the wrapper for type CLHEP::RandPoissonQ
// signature to use in the veto file: CLHEP::RandPoissonQ
struct JlCLHEP_RandPoissonQ: public Wrapper {

  JlCLHEP_RandPoissonQ(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type CLHEP::RandPoissonQ (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:31:7
    jlcxx::TypeWrapper<CLHEP::RandPoissonQ>  t = jlModule.add_type<CLHEP::RandPoissonQ>("CLHEP!RandPoissonQ");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<CLHEP::RandPoissonQ>>(new jlcxx::TypeWrapper<CLHEP::RandPoissonQ>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void CLHEP::RandPoissonQ::RandPoissonQ(CLHEP::HepRandomEngine &, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:35:10
    t.constructor<CLHEP::HepRandomEngine &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("anEngine")    );
    t.constructor<CLHEP::HepRandomEngine &, double>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("anEngine"), jlcxx::arg("b1")    );


    DEBUG_MSG("Adding wrapper for void CLHEP::RandPoissonQ::RandPoissonQ(CLHEP::HepRandomEngine *, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:36:10
    t.constructor<CLHEP::HepRandomEngine *>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("anEngine")    );
    t.constructor<CLHEP::HepRandomEngine *, double>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("anEngine"), jlcxx::arg("b1")    );

    DEBUG_MSG("Adding wrapper for long CLHEP::RandPoissonQ::shoot(double) (" __HERE__ ")");
    // signature to use in the veto list: long CLHEP::RandPoissonQ::shoot(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:74:16
    module_.method("CLHEP!RandPoissonQ!shoot", []()->long { return CLHEP::RandPoissonQ::shoot(); }, jlcxx::arg("mean"));
    module_.method("CLHEP!RandPoissonQ!shoot", [](double arg0)->long { return CLHEP::RandPoissonQ::shoot(arg0); }, jlcxx::arg("mean"));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandPoissonQ::shootArray(const int, long *, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandPoissonQ::shootArray(const int, long *, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:76:16
    module_.method("CLHEP!RandPoissonQ!shootArray", [](const int arg0, long * arg1)->void { CLHEP::RandPoissonQ::shootArray(arg0, arg1); }, jlcxx::arg("size"), jlcxx::arg("vect"));
    module_.method("CLHEP!RandPoissonQ!shootArray", [](const int arg0, long * arg1, double arg2)->void { CLHEP::RandPoissonQ::shootArray(arg0, arg1, arg2); }, jlcxx::arg("size"), jlcxx::arg("vect"), jlcxx::arg("mean"));

    DEBUG_MSG("Adding wrapper for long CLHEP::RandPoissonQ::shoot(CLHEP::HepRandomEngine *, double) (" __HERE__ ")");
    // signature to use in the veto list: long CLHEP::RandPoissonQ::shoot(CLHEP::HepRandomEngine *, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:81:16
    module_.method("CLHEP!RandPoissonQ!shoot", [](CLHEP::HepRandomEngine * arg0)->long { return CLHEP::RandPoissonQ::shoot(arg0); }, jlcxx::arg("anEngine"));
    module_.method("CLHEP!RandPoissonQ!shoot", [](CLHEP::HepRandomEngine * arg0, double arg1)->long { return CLHEP::RandPoissonQ::shoot(arg0, arg1); }, jlcxx::arg("anEngine"), jlcxx::arg("mean"));

    DEBUG_MSG("Adding wrapper for long CLHEP::RandPoissonQ::fire() (" __HERE__ ")");
    // signature to use in the veto list: long CLHEP::RandPoissonQ::fire()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:89:9
    t.method("fire", [](CLHEP::RandPoissonQ& a)->long { return a.fire(); }, jlcxx::arg("this"));
    t.method("fire", [](CLHEP::RandPoissonQ* a)->long { return a->fire(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for long CLHEP::RandPoissonQ::fire(double) (" __HERE__ ")");
    // signature to use in the veto list: long CLHEP::RandPoissonQ::fire(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:90:9
    t.method("fire", [](CLHEP::RandPoissonQ& a, double arg0)->long { return a.fire(arg0); }, jlcxx::arg("this"), jlcxx::arg("mean"));
    t.method("fire", [](CLHEP::RandPoissonQ* a, double arg0)->long { return a->fire(arg0); }, jlcxx::arg("this"), jlcxx::arg("mean"));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandPoissonQ::fireArray(const int, long *) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandPoissonQ::fireArray(const int, long *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:92:8
    t.method("fireArray", [](CLHEP::RandPoissonQ& a, const int arg0, long * arg1)->void { a.fireArray(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("size"), jlcxx::arg("vect"));
    t.method("fireArray", [](CLHEP::RandPoissonQ* a, const int arg0, long * arg1)->void { a->fireArray(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("size"), jlcxx::arg("vect"));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandPoissonQ::fireArray(const int, long *, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandPoissonQ::fireArray(const int, long *, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:93:8
    t.method("fireArray", [](CLHEP::RandPoissonQ& a, const int arg0, long * arg1, double arg2)->void { a.fireArray(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("size"), jlcxx::arg("vect"), jlcxx::arg("mean"));
    t.method("fireArray", [](CLHEP::RandPoissonQ* a, const int arg0, long * arg1, double arg2)->void { a->fireArray(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("size"), jlcxx::arg("vect"), jlcxx::arg("mean"));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandPoissonQ::operator()() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandPoissonQ::operator()()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:95:10
    t.method("paren", [](CLHEP::RandPoissonQ& a)->double { return a.operator()(); }, jlcxx::arg("this"));
    t.method("paren", [](CLHEP::RandPoissonQ* a)->double { return a->operator()(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandPoissonQ::operator()(double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandPoissonQ::operator()(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:96:10
    t.method("paren", [](CLHEP::RandPoissonQ& a, double arg0)->double { return a.operator()(arg0); }, jlcxx::arg("this"), jlcxx::arg("mean"));
    t.method("paren", [](CLHEP::RandPoissonQ* a, double arg0)->double { return a->operator()(arg0); }, jlcxx::arg("this"), jlcxx::arg("mean"));

    DEBUG_MSG("Adding wrapper for std::string CLHEP::RandPoissonQ::name() (" __HERE__ ")");
    // signature to use in the veto list: std::string CLHEP::RandPoissonQ::name()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:98:15
    t.method("name", [](CLHEP::RandPoissonQ const& a)->std::string { return a.name(); }, jlcxx::arg("this"));
    t.method("name", [](CLHEP::RandPoissonQ const* a)->std::string { return a->name(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRandomEngine & CLHEP::RandPoissonQ::engine() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRandomEngine & CLHEP::RandPoissonQ::engine()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:99:21
    t.method("engine", [](CLHEP::RandPoissonQ& a)->CLHEP::HepRandomEngine & { return a.engine(); }, jlcxx::arg("this"));
    t.method("engine", [](CLHEP::RandPoissonQ* a)->CLHEP::HepRandomEngine & { return a->engine(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for std::string CLHEP::RandPoissonQ::distributionName() (" __HERE__ ")");
    // signature to use in the veto list: std::string CLHEP::RandPoissonQ::distributionName()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:101:22
    module_.method("CLHEP!RandPoissonQ!distributionName", []()->std::string { return CLHEP::RandPoissonQ::distributionName(); });

    DEBUG_MSG("Adding wrapper for int CLHEP::RandPoissonQ::tableBoundary() (" __HERE__ ")");
    // signature to use in the veto list: int CLHEP::RandPoissonQ::tableBoundary()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Random/RandPoissonQ.h:110:21
    module_.method("CLHEP!RandPoissonQ!tableBoundary", []()->int { return CLHEP::RandPoissonQ::tableBoundary(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<CLHEP::RandPoissonQ>> type_;
};
std::shared_ptr<Wrapper> newJlCLHEP_RandPoissonQ(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlCLHEP_RandPoissonQ(module));
}
