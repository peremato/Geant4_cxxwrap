// this file was auto-generated by wrapit v1.3.1-15-g5168a24
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4VPrimaryGenerator> : std::false_type { };
  template<> struct DefaultConstructible<G4VPrimaryGenerator> : std::false_type { };
}

// Class generating the wrapper for type G4VPrimaryGenerator
// signature to use in the veto file: G4VPrimaryGenerator
struct JlG4VPrimaryGenerator: public Wrapper {

  JlG4VPrimaryGenerator(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4VPrimaryGenerator (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VPrimaryGenerator.hh:44:7
    jlcxx::TypeWrapper<G4VPrimaryGenerator>  t = jlModule.add_type<G4VPrimaryGenerator>("G4VPrimaryGenerator");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4VPrimaryGenerator>>(new jlcxx::TypeWrapper<G4VPrimaryGenerator>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for G4bool G4VPrimaryGenerator::CheckVertexInsideWorld(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4VPrimaryGenerator::CheckVertexInsideWorld(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VPrimaryGenerator.hh:52:19
    module_.method("G4VPrimaryGenerator!CheckVertexInsideWorld", static_cast<G4bool (*)(const G4ThreeVector &) >(&G4VPrimaryGenerator::CheckVertexInsideWorld));

    DEBUG_MSG("Adding wrapper for void G4VPrimaryGenerator::GeneratePrimaryVertex(G4Event *) (" __HERE__ ")");
    // signature to use in the veto list: void G4VPrimaryGenerator::GeneratePrimaryVertex(G4Event *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VPrimaryGenerator.hh:56:18
    t.method("GeneratePrimaryVertex", static_cast<void (G4VPrimaryGenerator::*)(G4Event *) >(&G4VPrimaryGenerator::GeneratePrimaryVertex));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4VPrimaryGenerator::GetParticlePosition() (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4VPrimaryGenerator::GetParticlePosition()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VPrimaryGenerator.hh:60:26
    t.method("GetParticlePosition", static_cast<G4ThreeVector (G4VPrimaryGenerator::*)() >(&G4VPrimaryGenerator::GetParticlePosition));

    DEBUG_MSG("Adding wrapper for G4double G4VPrimaryGenerator::GetParticleTime() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4VPrimaryGenerator::GetParticleTime()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VPrimaryGenerator.hh:61:21
    t.method("GetParticleTime", static_cast<G4double (G4VPrimaryGenerator::*)() >(&G4VPrimaryGenerator::GetParticleTime));

    DEBUG_MSG("Adding wrapper for void G4VPrimaryGenerator::SetParticlePosition(G4ThreeVector) (" __HERE__ ")");
    // signature to use in the veto list: void G4VPrimaryGenerator::SetParticlePosition(G4ThreeVector)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VPrimaryGenerator.hh:63:10
    t.method("SetParticlePosition", static_cast<void (G4VPrimaryGenerator::*)(G4ThreeVector) >(&G4VPrimaryGenerator::SetParticlePosition));

    DEBUG_MSG("Adding wrapper for void G4VPrimaryGenerator::SetParticleTime(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4VPrimaryGenerator::SetParticleTime(G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VPrimaryGenerator.hh:70:17
    t.method("SetParticleTime", static_cast<void (G4VPrimaryGenerator::*)(G4double) >(&G4VPrimaryGenerator::SetParticleTime));

    DEBUG_MSG("Adding wrapper for void G4VPrimaryGenerator::CheckInside(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4VPrimaryGenerator::CheckInside(G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VPrimaryGenerator.hh:73:17
    t.method("CheckInside", static_cast<void (G4VPrimaryGenerator::*)(G4bool) >(&G4VPrimaryGenerator::CheckInside));
    t.method("CheckInside", [](G4VPrimaryGenerator& a)->void { a.CheckInside(); });
    t.method("CheckInside", [](G4VPrimaryGenerator* a)->void { a->CheckInside(); });

    DEBUG_MSG("Adding wrapper for G4bool G4VPrimaryGenerator::IfCheckInside() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4VPrimaryGenerator::IfCheckInside()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VPrimaryGenerator.hh:75:19
    t.method("IfCheckInside", static_cast<G4bool (G4VPrimaryGenerator::*)() >(&G4VPrimaryGenerator::IfCheckInside));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4VPrimaryGenerator>> type_;
};
std::shared_ptr<Wrapper> newJlG4VPrimaryGenerator(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4VPrimaryGenerator(module));
}
