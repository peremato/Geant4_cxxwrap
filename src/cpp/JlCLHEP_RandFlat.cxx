// this file was auto-generated by wrapit 5168a24-dirty
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<CLHEP::RandFlat> : std::false_type { };
  template<> struct DefaultConstructible<CLHEP::RandFlat> : std::false_type { };
template<> struct SuperType<CLHEP::RandFlat> { typedef CLHEP::HepRandom type; };
}

// Class generating the wrapper for type CLHEP::RandFlat
// signature to use in the veto file: CLHEP::RandFlat
struct JlCLHEP_RandFlat: public Wrapper {

  JlCLHEP_RandFlat(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type CLHEP::RandFlat (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:41:7
    jlcxx::TypeWrapper<CLHEP::RandFlat>  t = jlModule.add_type<CLHEP::RandFlat>("CLHEP!RandFlat",
      jlcxx::julia_base_type<CLHEP::HepRandom>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<CLHEP::RandFlat>>(new jlcxx::TypeWrapper<CLHEP::RandFlat>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::RandFlat(CLHEP::HepRandomEngine &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:45:10
    t.constructor<CLHEP::HepRandomEngine &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::RandFlat(CLHEP::HepRandomEngine &, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:46:10
    t.constructor<CLHEP::HepRandomEngine &, double>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::RandFlat(CLHEP::HepRandomEngine &, double, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:47:10
    t.constructor<CLHEP::HepRandomEngine &, double, double>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::RandFlat(CLHEP::HepRandomEngine *) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:48:10
    t.constructor<CLHEP::HepRandomEngine *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::RandFlat(CLHEP::HepRandomEngine *, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:49:10
    t.constructor<CLHEP::HepRandomEngine *, double>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::RandFlat(CLHEP::HepRandomEngine *, double, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:50:10
    t.constructor<CLHEP::HepRandomEngine *, double, double>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for double CLHEP::RandFlat::shoot() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandFlat::shoot()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:65:18
    module_.method("CLHEP!RandFlat!shoot", static_cast<double (*)() >(&CLHEP::RandFlat::shoot));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandFlat::shoot(double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandFlat::shoot(double)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:67:25
    module_.method("CLHEP!RandFlat!shoot", static_cast<double (*)(double) >(&CLHEP::RandFlat::shoot));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandFlat::shoot(double, double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandFlat::shoot(double, double)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:69:25
    module_.method("CLHEP!RandFlat!shoot", static_cast<double (*)(double, double) >(&CLHEP::RandFlat::shoot));

    DEBUG_MSG("Adding wrapper for long CLHEP::RandFlat::shootInt(long) (" __HERE__ ")");
    // signature to use in the veto list: long CLHEP::RandFlat::shootInt(long)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:71:23
    module_.method("CLHEP!RandFlat!shootInt", static_cast<long (*)(long) >(&CLHEP::RandFlat::shootInt));

    DEBUG_MSG("Adding wrapper for long CLHEP::RandFlat::shootInt(long, long) (" __HERE__ ")");
    // signature to use in the veto list: long CLHEP::RandFlat::shootInt(long, long)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:73:23
    module_.method("CLHEP!RandFlat!shootInt", static_cast<long (*)(long, long) >(&CLHEP::RandFlat::shootInt));

    DEBUG_MSG("Adding wrapper for int CLHEP::RandFlat::shootBit() (" __HERE__ ")");
    // signature to use in the veto list: int CLHEP::RandFlat::shootBit()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:75:22
    module_.method("CLHEP!RandFlat!shootBit", static_cast<int (*)() >(&CLHEP::RandFlat::shootBit));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::shootArray(const int, double *) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandFlat::shootArray(const int, double *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:77:16
    module_.method("CLHEP!RandFlat!shootArray", static_cast<void (*)(const int, double *) >(&CLHEP::RandFlat::shootArray));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::shootArray(const int, double *, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandFlat::shootArray(const int, double *, double, double)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:79:16
    module_.method("CLHEP!RandFlat!shootArray", static_cast<void (*)(const int, double *, double, double) >(&CLHEP::RandFlat::shootArray));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandFlat::shoot(CLHEP::HepRandomEngine *) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandFlat::shoot(CLHEP::HepRandomEngine *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:85:25
    module_.method("CLHEP!RandFlat!shoot", static_cast<double (*)(CLHEP::HepRandomEngine *) >(&CLHEP::RandFlat::shoot));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandFlat::shoot(CLHEP::HepRandomEngine *, double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandFlat::shoot(CLHEP::HepRandomEngine *, double)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:87:25
    module_.method("CLHEP!RandFlat!shoot", static_cast<double (*)(CLHEP::HepRandomEngine *, double) >(&CLHEP::RandFlat::shoot));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandFlat::shoot(CLHEP::HepRandomEngine *, double, double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandFlat::shoot(CLHEP::HepRandomEngine *, double, double)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:89:25
    module_.method("CLHEP!RandFlat!shoot", static_cast<double (*)(CLHEP::HepRandomEngine *, double, double) >(&CLHEP::RandFlat::shoot));

    DEBUG_MSG("Adding wrapper for long CLHEP::RandFlat::shootInt(CLHEP::HepRandomEngine *, long) (" __HERE__ ")");
    // signature to use in the veto list: long CLHEP::RandFlat::shootInt(CLHEP::HepRandomEngine *, long)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:91:23
    module_.method("CLHEP!RandFlat!shootInt", static_cast<long (*)(CLHEP::HepRandomEngine *, long) >(&CLHEP::RandFlat::shootInt));

    DEBUG_MSG("Adding wrapper for long CLHEP::RandFlat::shootInt(CLHEP::HepRandomEngine *, long, long) (" __HERE__ ")");
    // signature to use in the veto list: long CLHEP::RandFlat::shootInt(CLHEP::HepRandomEngine *, long, long)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:93:23
    module_.method("CLHEP!RandFlat!shootInt", static_cast<long (*)(CLHEP::HepRandomEngine *, long, long) >(&CLHEP::RandFlat::shootInt));

    DEBUG_MSG("Adding wrapper for int CLHEP::RandFlat::shootBit(CLHEP::HepRandomEngine *) (" __HERE__ ")");
    // signature to use in the veto list: int CLHEP::RandFlat::shootBit(CLHEP::HepRandomEngine *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:95:22
    module_.method("CLHEP!RandFlat!shootBit", static_cast<int (*)(CLHEP::HepRandomEngine *) >(&CLHEP::RandFlat::shootBit));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::shootArray(CLHEP::HepRandomEngine *, const int, double *) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandFlat::shootArray(CLHEP::HepRandomEngine *, const int, double *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:97:23
    module_.method("CLHEP!RandFlat!shootArray", static_cast<void (*)(CLHEP::HepRandomEngine *, const int, double *) >(&CLHEP::RandFlat::shootArray));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::shootArray(CLHEP::HepRandomEngine *, const int, double *, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandFlat::shootArray(CLHEP::HepRandomEngine *, const int, double *, double, double)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:100:16
    module_.method("CLHEP!RandFlat!shootArray", static_cast<void (*)(CLHEP::HepRandomEngine *, const int, double *, double, double) >(&CLHEP::RandFlat::shootArray));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandFlat::fire() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandFlat::fire()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:107:17
    t.method("fire", static_cast<double (CLHEP::RandFlat::*)() >(&CLHEP::RandFlat::fire));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandFlat::fire(double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandFlat::fire(double)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:109:17
    t.method("fire", static_cast<double (CLHEP::RandFlat::*)(double) >(&CLHEP::RandFlat::fire));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandFlat::fire(double, double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandFlat::fire(double, double)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:111:17
    t.method("fire", static_cast<double (CLHEP::RandFlat::*)(double, double) >(&CLHEP::RandFlat::fire));

    DEBUG_MSG("Adding wrapper for long CLHEP::RandFlat::fireInt(long) (" __HERE__ ")");
    // signature to use in the veto list: long CLHEP::RandFlat::fireInt(long)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:113:15
    t.method("fireInt", static_cast<long (CLHEP::RandFlat::*)(long) >(&CLHEP::RandFlat::fireInt));

    DEBUG_MSG("Adding wrapper for long CLHEP::RandFlat::fireInt(long, long) (" __HERE__ ")");
    // signature to use in the veto list: long CLHEP::RandFlat::fireInt(long, long)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:115:15
    t.method("fireInt", static_cast<long (CLHEP::RandFlat::*)(long, long) >(&CLHEP::RandFlat::fireInt));

    DEBUG_MSG("Adding wrapper for int CLHEP::RandFlat::fireBit() (" __HERE__ ")");
    // signature to use in the veto list: int CLHEP::RandFlat::fireBit()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:117:14
    t.method("fireBit", static_cast<int (CLHEP::RandFlat::*)() >(&CLHEP::RandFlat::fireBit));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::fireArray(const int, double *) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandFlat::fireArray(const int, double *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:119:8
    t.method("fireArray", static_cast<void (CLHEP::RandFlat::*)(const int, double *) >(&CLHEP::RandFlat::fireArray));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::fireArray(const int, double *, double, double) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandFlat::fireArray(const int, double *, double, double)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:121:8
    t.method("fireArray", static_cast<void (CLHEP::RandFlat::*)(const int, double *, double, double) >(&CLHEP::RandFlat::fireArray));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandFlat::operator()() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandFlat::operator()()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:124:10
    t.method("paren", static_cast<double (CLHEP::RandFlat::*)() >(&CLHEP::RandFlat::operator()));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandFlat::operator()(double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandFlat::operator()(double)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:125:10
    t.method("paren", static_cast<double (CLHEP::RandFlat::*)(double) >(&CLHEP::RandFlat::operator()));

    DEBUG_MSG("Adding wrapper for double CLHEP::RandFlat::operator()(double, double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::RandFlat::operator()(double, double)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:126:10
    t.method("paren", static_cast<double (CLHEP::RandFlat::*)(double, double) >(&CLHEP::RandFlat::operator()));

    DEBUG_MSG("Adding wrapper for std::string CLHEP::RandFlat::name() (" __HERE__ ")");
    // signature to use in the veto list: std::string CLHEP::RandFlat::name()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:133:15
    t.method("name", static_cast<std::string (CLHEP::RandFlat::*)()  const>(&CLHEP::RandFlat::name));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRandomEngine & CLHEP::RandFlat::engine() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRandomEngine & CLHEP::RandFlat::engine()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:134:21
    t.method("engine", static_cast<CLHEP::HepRandomEngine & (CLHEP::RandFlat::*)() >(&CLHEP::RandFlat::engine));

    DEBUG_MSG("Adding wrapper for std::string CLHEP::RandFlat::distributionName() (" __HERE__ ")");
    // signature to use in the veto list: std::string CLHEP::RandFlat::distributionName()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:136:22
    module_.method("CLHEP!RandFlat!distributionName", static_cast<std::string (*)() >(&CLHEP::RandFlat::distributionName));

    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::saveEngineStatus(const char []) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandFlat::saveEngineStatus(const char [])
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:144:15
    module_.method("CLHEP!RandFlat!saveEngineStatus", static_cast<void (*)(const char []) >(&CLHEP::RandFlat::saveEngineStatus));
    module_.method("CLHEP!RandFlat!saveEngineStatus", []()->void { CLHEP::RandFlat::saveEngineStatus(); });

    DEBUG_MSG("Adding wrapper for void CLHEP::RandFlat::restoreEngineStatus(const char []) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::RandFlat::restoreEngineStatus(const char [])
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/CLHEP/Random/RandFlat.h:147:15
    module_.method("CLHEP!RandFlat!restoreEngineStatus", static_cast<void (*)(const char []) >(&CLHEP::RandFlat::restoreEngineStatus));
    module_.method("CLHEP!RandFlat!restoreEngineStatus", []()->void { CLHEP::RandFlat::restoreEngineStatus(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<CLHEP::RandFlat>> type_;
};
std::shared_ptr<Wrapper> newJlCLHEP_RandFlat(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlCLHEP_RandFlat(module));
}
