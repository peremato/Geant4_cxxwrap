// this file was auto-generated by wrapit 5168a24-dirty
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4UnionSolid> : std::false_type { };
  template<> struct DefaultConstructible<G4UnionSolid> : std::false_type { };
template<> struct SuperType<G4UnionSolid> { typedef G4BooleanSolid type; };
}

// Class generating the wrapper for type G4UnionSolid
// signature to use in the veto file: G4UnionSolid
struct JlG4UnionSolid: public Wrapper {

  JlG4UnionSolid(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4UnionSolid (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:45:7
    jlcxx::TypeWrapper<G4UnionSolid>  t = jlModule.add_type<G4UnionSolid>("G4UnionSolid",
      jlcxx::julia_base_type<G4BooleanSolid>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4UnionSolid>>(new jlcxx::TypeWrapper<G4UnionSolid>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void G4UnionSolid::G4UnionSolid(const G4String &, G4VSolid *, G4VSolid *) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:49:5
    t.constructor<const G4String &, G4VSolid *, G4VSolid *>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void G4UnionSolid::G4UnionSolid(const G4String &, G4VSolid *, G4VSolid *, G4RotationMatrix *, const G4ThreeVector &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:53:5
    t.constructor<const G4String &, G4VSolid *, G4VSolid *, G4RotationMatrix *, const G4ThreeVector &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void G4UnionSolid::G4UnionSolid(const G4String &, G4VSolid *, G4VSolid *, const G4Transform3D &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:59:5
    t.constructor<const G4String &, G4VSolid *, G4VSolid *, const G4Transform3D &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for G4GeometryType G4UnionSolid::GetEntityType() (" __HERE__ ")");
    // signature to use in the veto list: G4GeometryType G4UnionSolid::GetEntityType()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:66:21
    t.method("GetEntityType", static_cast<G4GeometryType (G4UnionSolid::*)()  const>(&G4UnionSolid::GetEntityType));

    DEBUG_MSG("Adding wrapper for G4VSolid * G4UnionSolid::Clone() (" __HERE__ ")");
    // signature to use in the veto list: G4VSolid * G4UnionSolid::Clone()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:68:15
    t.method("Clone", static_cast<G4VSolid * (G4UnionSolid::*)()  const>(&G4UnionSolid::Clone));


    DEBUG_MSG("Adding wrapper for void G4UnionSolid::G4UnionSolid(const G4UnionSolid &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:75:5
    t.constructor<const G4UnionSolid &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for G4UnionSolid & G4UnionSolid::operator=(const G4UnionSolid &) (" __HERE__ ")");
    // signature to use in the veto list: G4UnionSolid & G4UnionSolid::operator=(const G4UnionSolid &)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:76:19
    t.method("assign", static_cast<G4UnionSolid & (G4UnionSolid::*)(const G4UnionSolid &) >(&G4UnionSolid::operator=));

    DEBUG_MSG("Adding wrapper for void G4UnionSolid::BoundingLimits(G4ThreeVector &, G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: void G4UnionSolid::BoundingLimits(G4ThreeVector &, G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:79:10
    t.method("BoundingLimits", static_cast<void (G4UnionSolid::*)(G4ThreeVector &, G4ThreeVector &)  const>(&G4UnionSolid::BoundingLimits));

    DEBUG_MSG("Adding wrapper for EInside G4UnionSolid::Inside(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: EInside G4UnionSolid::Inside(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:86:13
    t.method("Inside", static_cast<EInside (G4UnionSolid::*)(const G4ThreeVector &)  const>(&G4UnionSolid::Inside));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4UnionSolid::SurfaceNormal(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4UnionSolid::SurfaceNormal(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:88:19
    t.method("SurfaceNormal", static_cast<G4ThreeVector (G4UnionSolid::*)(const G4ThreeVector &)  const>(&G4UnionSolid::SurfaceNormal));

    DEBUG_MSG("Adding wrapper for G4double G4UnionSolid::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4UnionSolid::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:90:14
    t.method("DistanceToIn", static_cast<G4double (G4UnionSolid::*)(const G4ThreeVector &, const G4ThreeVector &)  const>(&G4UnionSolid::DistanceToIn));

    DEBUG_MSG("Adding wrapper for G4double G4UnionSolid::DistanceToIn(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4UnionSolid::DistanceToIn(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:93:14
    t.method("DistanceToIn", static_cast<G4double (G4UnionSolid::*)(const G4ThreeVector &)  const>(&G4UnionSolid::DistanceToIn));

    DEBUG_MSG("Adding wrapper for G4double G4UnionSolid::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4UnionSolid::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:95:14
    t.method("DistanceToOut", static_cast<G4double (G4UnionSolid::*)(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *)  const>(&G4UnionSolid::DistanceToOut));
    t.method("DistanceToOut", [](G4UnionSolid const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a.DistanceToOut(arg0, arg1); });
    t.method("DistanceToOut", [](G4UnionSolid const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double { return a.DistanceToOut(arg0, arg1, arg2); });
    t.method("DistanceToOut", [](G4UnionSolid const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double { return a.DistanceToOut(arg0, arg1, arg2, arg3); });
    t.method("DistanceToOut", [](G4UnionSolid const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a->DistanceToOut(arg0, arg1); });
    t.method("DistanceToOut", [](G4UnionSolid const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double { return a->DistanceToOut(arg0, arg1, arg2); });
    t.method("DistanceToOut", [](G4UnionSolid const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double { return a->DistanceToOut(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for G4double G4UnionSolid::DistanceToOut(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4UnionSolid::DistanceToOut(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:101:14
    t.method("DistanceToOut", static_cast<G4double (G4UnionSolid::*)(const G4ThreeVector &)  const>(&G4UnionSolid::DistanceToOut));

    DEBUG_MSG("Adding wrapper for void G4UnionSolid::ComputeDimensions(G4VPVParameterisation *, const G4int, const G4VPhysicalVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void G4UnionSolid::ComputeDimensions(G4VPVParameterisation *, const G4int, const G4VPhysicalVolume *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:104:10
    t.method("ComputeDimensions", static_cast<void (G4UnionSolid::*)(G4VPVParameterisation *, const G4int, const G4VPhysicalVolume *) >(&G4UnionSolid::ComputeDimensions));

    DEBUG_MSG("Adding wrapper for G4Polyhedron * G4UnionSolid::CreatePolyhedron() (" __HERE__ ")");
    // signature to use in the veto list: G4Polyhedron * G4UnionSolid::CreatePolyhedron()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:109:19
    t.method("CreatePolyhedron", static_cast<G4Polyhedron * (G4UnionSolid::*)()  const>(&G4UnionSolid::CreatePolyhedron));

    DEBUG_MSG("Adding wrapper for G4double G4UnionSolid::GetCubicVolume() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4UnionSolid::GetCubicVolume()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4UnionSolid.hh:111:14
    t.method("GetCubicVolume", static_cast<G4double (G4UnionSolid::*)() >(&G4UnionSolid::GetCubicVolume));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4UnionSolid>> type_;
};
std::shared_ptr<Wrapper> newJlG4UnionSolid(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4UnionSolid(module));
}
