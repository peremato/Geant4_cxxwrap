// this file was auto-generated by wrapit v1.3.1-15-g5168a24
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4Trap> : std::false_type { };
  template<> struct DefaultConstructible<G4Trap> : std::false_type { };
template<> struct SuperType<G4Trap> { typedef G4CSGSolid type; };
}

// Class generating the wrapper for type G4Trap
// signature to use in the veto file: G4Trap
struct JlG4Trap: public Wrapper {

  JlG4Trap(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4Trap (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:109:7
    jlcxx::TypeWrapper<G4Trap>  t = jlModule.add_type<G4Trap>("G4Trap",
      jlcxx::julia_base_type<G4CSGSolid>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4Trap>>(new jlcxx::TypeWrapper<G4Trap>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void G4Trap::G4Trap(const G4String &, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:114:5
    t.constructor<const G4String &, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void G4Trap::G4Trap(const G4String &, G4double, G4double, G4double, G4double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:130:5
    t.constructor<const G4String &, G4double, G4double, G4double, G4double>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void G4Trap::G4Trap(const G4String &, G4double, G4double, G4double, G4double, G4double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:137:5
    t.constructor<const G4String &, G4double, G4double, G4double, G4double, G4double>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void G4Trap::G4Trap(const G4String &, G4double, G4double, G4double, G4double, G4double, G4double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:144:6
    t.constructor<const G4String &, G4double, G4double, G4double, G4double, G4double, G4double>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void G4Trap::G4Trap(const G4String &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:150:6
    t.constructor<const G4String &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetZHalfLength() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetZHalfLength()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:161:21
    t.method("GetZHalfLength", static_cast<G4double (G4Trap::*)()  const>(&G4Trap::GetZHalfLength));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetYHalfLength1() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetYHalfLength1()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:162:21
    t.method("GetYHalfLength1", static_cast<G4double (G4Trap::*)()  const>(&G4Trap::GetYHalfLength1));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetXHalfLength1() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetXHalfLength1()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:163:21
    t.method("GetXHalfLength1", static_cast<G4double (G4Trap::*)()  const>(&G4Trap::GetXHalfLength1));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetXHalfLength2() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetXHalfLength2()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:164:21
    t.method("GetXHalfLength2", static_cast<G4double (G4Trap::*)()  const>(&G4Trap::GetXHalfLength2));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetTanAlpha1() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetTanAlpha1()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:165:21
    t.method("GetTanAlpha1", static_cast<G4double (G4Trap::*)()  const>(&G4Trap::GetTanAlpha1));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetYHalfLength2() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetYHalfLength2()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:166:21
    t.method("GetYHalfLength2", static_cast<G4double (G4Trap::*)()  const>(&G4Trap::GetYHalfLength2));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetXHalfLength3() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetXHalfLength3()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:167:21
    t.method("GetXHalfLength3", static_cast<G4double (G4Trap::*)()  const>(&G4Trap::GetXHalfLength3));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetXHalfLength4() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetXHalfLength4()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:168:21
    t.method("GetXHalfLength4", static_cast<G4double (G4Trap::*)()  const>(&G4Trap::GetXHalfLength4));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetTanAlpha2() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetTanAlpha2()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:169:21
    t.method("GetTanAlpha2", static_cast<G4double (G4Trap::*)()  const>(&G4Trap::GetTanAlpha2));

    DEBUG_MSG("Adding wrapper for TrapSidePlane G4Trap::GetSidePlane(G4int) (" __HERE__ ")");
    // signature to use in the veto list: TrapSidePlane G4Trap::GetSidePlane(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:174:26
    t.method("GetSidePlane", static_cast<TrapSidePlane (G4Trap::*)(G4int)  const>(&G4Trap::GetSidePlane));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4Trap::GetSymAxis() (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4Trap::GetSymAxis()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:175:26
    t.method("GetSymAxis", static_cast<G4ThreeVector (G4Trap::*)()  const>(&G4Trap::GetSymAxis));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetPhi() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetPhi()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:177:21
    t.method("GetPhi", static_cast<G4double (G4Trap::*)()  const>(&G4Trap::GetPhi));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetTheta() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetTheta()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:178:21
    t.method("GetTheta", static_cast<G4double (G4Trap::*)()  const>(&G4Trap::GetTheta));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetAlpha1() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetAlpha1()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:179:21
    t.method("GetAlpha1", static_cast<G4double (G4Trap::*)()  const>(&G4Trap::GetAlpha1));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetAlpha2() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetAlpha2()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:180:21
    t.method("GetAlpha2", static_cast<G4double (G4Trap::*)()  const>(&G4Trap::GetAlpha2));

    DEBUG_MSG("Adding wrapper for void G4Trap::SetAllParameters(G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Trap::SetAllParameters(G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:185:10
    t.method("SetAllParameters", static_cast<void (G4Trap::*)(G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double, G4double) >(&G4Trap::SetAllParameters));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetCubicVolume() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetCubicVolume()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:199:14
    t.method("GetCubicVolume", static_cast<G4double (G4Trap::*)() >(&G4Trap::GetCubicVolume));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::GetSurfaceArea() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::GetSurfaceArea()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:200:14
    t.method("GetSurfaceArea", static_cast<G4double (G4Trap::*)() >(&G4Trap::GetSurfaceArea));

    DEBUG_MSG("Adding wrapper for void G4Trap::ComputeDimensions(G4VPVParameterisation *, const G4int, const G4VPhysicalVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void G4Trap::ComputeDimensions(G4VPVParameterisation *, const G4int, const G4VPhysicalVolume *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:202:10
    t.method("ComputeDimensions", static_cast<void (G4Trap::*)(G4VPVParameterisation *, const G4int, const G4VPhysicalVolume *) >(&G4Trap::ComputeDimensions));

    DEBUG_MSG("Adding wrapper for void G4Trap::BoundingLimits(G4ThreeVector &, G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: void G4Trap::BoundingLimits(G4ThreeVector &, G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:206:10
    t.method("BoundingLimits", static_cast<void (G4Trap::*)(G4ThreeVector &, G4ThreeVector &)  const>(&G4Trap::BoundingLimits));

    DEBUG_MSG("Adding wrapper for EInside G4Trap::Inside(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: EInside G4Trap::Inside(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:213:13
    t.method("Inside", static_cast<EInside (G4Trap::*)(const G4ThreeVector &)  const>(&G4Trap::Inside));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4Trap::SurfaceNormal(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4Trap::SurfaceNormal(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:215:19
    t.method("SurfaceNormal", static_cast<G4ThreeVector (G4Trap::*)(const G4ThreeVector &)  const>(&G4Trap::SurfaceNormal));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:217:14
    t.method("DistanceToIn", static_cast<G4double (G4Trap::*)(const G4ThreeVector &, const G4ThreeVector &)  const>(&G4Trap::DistanceToIn));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::DistanceToIn(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::DistanceToIn(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:220:14
    t.method("DistanceToIn", static_cast<G4double (G4Trap::*)(const G4ThreeVector &)  const>(&G4Trap::DistanceToIn));

    DEBUG_MSG("Adding wrapper for G4double G4Trap::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:222:14
    t.method("DistanceToOut", static_cast<G4double (G4Trap::*)(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *)  const>(&G4Trap::DistanceToOut));
    t.method("DistanceToOut", [](G4Trap const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a.DistanceToOut(arg0, arg1); });
    t.method("DistanceToOut", [](G4Trap const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double { return a.DistanceToOut(arg0, arg1, arg2); });
    t.method("DistanceToOut", [](G4Trap const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double { return a.DistanceToOut(arg0, arg1, arg2, arg3); });
    t.method("DistanceToOut", [](G4Trap const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a->DistanceToOut(arg0, arg1); });
    t.method("DistanceToOut", [](G4Trap const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double { return a->DistanceToOut(arg0, arg1, arg2); });
    t.method("DistanceToOut", [](G4Trap const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double { return a->DistanceToOut(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for G4double G4Trap::DistanceToOut(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Trap::DistanceToOut(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:227:14
    t.method("DistanceToOut", static_cast<G4double (G4Trap::*)(const G4ThreeVector &)  const>(&G4Trap::DistanceToOut));

    DEBUG_MSG("Adding wrapper for G4GeometryType G4Trap::GetEntityType() (" __HERE__ ")");
    // signature to use in the veto list: G4GeometryType G4Trap::GetEntityType()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:229:20
    t.method("GetEntityType", static_cast<G4GeometryType (G4Trap::*)()  const>(&G4Trap::GetEntityType));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4Trap::GetPointOnSurface() (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4Trap::GetPointOnSurface()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:231:19
    t.method("GetPointOnSurface", static_cast<G4ThreeVector (G4Trap::*)()  const>(&G4Trap::GetPointOnSurface));

    DEBUG_MSG("Adding wrapper for G4bool G4Trap::IsFaceted() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4Trap::IsFaceted()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:233:12
    t.method("IsFaceted", static_cast<G4bool (G4Trap::*)()  const>(&G4Trap::IsFaceted));

    DEBUG_MSG("Adding wrapper for G4VSolid * G4Trap::Clone() (" __HERE__ ")");
    // signature to use in the veto list: G4VSolid * G4Trap::Clone()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:235:15
    t.method("Clone", static_cast<G4VSolid * (G4Trap::*)()  const>(&G4Trap::Clone));

    DEBUG_MSG("Adding wrapper for G4Polyhedron * G4Trap::CreatePolyhedron() (" __HERE__ ")");
    // signature to use in the veto list: G4Polyhedron * G4Trap::CreatePolyhedron()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:242:19
    t.method("CreatePolyhedron", static_cast<G4Polyhedron * (G4Trap::*)()  const>(&G4Trap::CreatePolyhedron));


    DEBUG_MSG("Adding wrapper for void G4Trap::G4Trap(const G4Trap &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:249:5
    t.constructor<const G4Trap &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for G4Trap & G4Trap::operator=(const G4Trap &) (" __HERE__ ")");
    // signature to use in the veto list: G4Trap & G4Trap::operator=(const G4Trap &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Trap.hh:250:13
    t.method("assign", static_cast<G4Trap & (G4Trap::*)(const G4Trap &) >(&G4Trap::operator=));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4Trap>> type_;
};
std::shared_ptr<Wrapper> newJlG4Trap(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4Trap(module));
}
