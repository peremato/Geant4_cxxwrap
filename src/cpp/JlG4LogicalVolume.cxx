// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4LogicalVolume> : std::false_type { };
  template<> struct DefaultConstructible<G4LogicalVolume> : std::false_type { };
}

// Class generating the wrapper for type G4LogicalVolume
// signature to use in the veto file: G4LogicalVolume
struct JlG4LogicalVolume: public Wrapper {

  JlG4LogicalVolume(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4LogicalVolume (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:182:7
    jlcxx::TypeWrapper<G4LogicalVolume>  t = jlModule.add_type<G4LogicalVolume>("G4LogicalVolume");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4LogicalVolume>>(new jlcxx::TypeWrapper<G4LogicalVolume>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::G4LogicalVolume(G4VSolid *, G4Material *, const G4String &, G4FieldManager *, G4VSensitiveDetector *, G4UserLimits *, G4bool) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:186:5
    t.constructor<G4VSolid *, G4Material *, const G4String &>(/*finalize=*/jlcxx::finalize_policy::no, jlcxx::arg("this"), jlcxx::arg("pSolid"), jlcxx::arg("pMaterial"), jlcxx::arg("name")    );
    t.constructor<G4VSolid *, G4Material *, const G4String &, G4FieldManager *>(/*finalize=*/jlcxx::finalize_policy::no, jlcxx::arg("this"), jlcxx::arg("pSolid"), jlcxx::arg("pMaterial"), jlcxx::arg("name"), jlcxx::arg("pFieldMgr")    );
    t.constructor<G4VSolid *, G4Material *, const G4String &, G4FieldManager *, G4VSensitiveDetector *>(/*finalize=*/jlcxx::finalize_policy::no, jlcxx::arg("this"), jlcxx::arg("pSolid"), jlcxx::arg("pMaterial"), jlcxx::arg("name"), jlcxx::arg("pFieldMgr"), jlcxx::arg("pSDetector")    );
    t.constructor<G4VSolid *, G4Material *, const G4String &, G4FieldManager *, G4VSensitiveDetector *, G4UserLimits *>(/*finalize=*/jlcxx::finalize_policy::no, jlcxx::arg("this"), jlcxx::arg("pSolid"), jlcxx::arg("pMaterial"), jlcxx::arg("name"), jlcxx::arg("pFieldMgr"), jlcxx::arg("pSDetector"), jlcxx::arg("pULimits")    );
    t.constructor<G4VSolid *, G4Material *, const G4String &, G4FieldManager *, G4VSensitiveDetector *, G4UserLimits *, G4bool>(/*finalize=*/jlcxx::finalize_policy::no, jlcxx::arg("this"), jlcxx::arg("pSolid"), jlcxx::arg("pMaterial"), jlcxx::arg("name"), jlcxx::arg("pFieldMgr"), jlcxx::arg("pSDetector"), jlcxx::arg("pULimits"), jlcxx::arg("optimise")    );

    DEBUG_MSG("Adding wrapper for const G4String & G4LogicalVolume::GetName() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4LogicalVolume::GetName()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:209:28
    t.method("GetName", [](G4LogicalVolume const& a)->const G4String & { return a.GetName(); }, jlcxx::arg("this"));
    t.method("GetName", [](G4LogicalVolume const* a)->const G4String & { return a->GetName(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetName(const G4String &) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetName(const G4String &)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:210:10
    t.method("SetName", [](G4LogicalVolume& a, const G4String & arg0)->void { a.SetName(arg0); }, jlcxx::arg("this"), jlcxx::arg("pName"));
    t.method("SetName", [](G4LogicalVolume* a, const G4String & arg0)->void { a->SetName(arg0); }, jlcxx::arg("this"), jlcxx::arg("pName"));

    DEBUG_MSG("Adding wrapper for std::size_t G4LogicalVolume::GetNoDaughters() (" __HERE__ ")");
    // signature to use in the veto list: std::size_t G4LogicalVolume::GetNoDaughters()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:213:24
    t.method("GetNoDaughters", [](G4LogicalVolume const& a)->std::size_t { return a.GetNoDaughters(); }, jlcxx::arg("this"));
    t.method("GetNoDaughters", [](G4LogicalVolume const* a)->std::size_t { return a->GetNoDaughters(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4VPhysicalVolume * G4LogicalVolume::GetDaughter(const std::size_t) (" __HERE__ ")");
    // signature to use in the veto list: G4VPhysicalVolume * G4LogicalVolume::GetDaughter(const std::size_t)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:215:31
    t.method("GetDaughter", [](G4LogicalVolume const& a, const std::size_t arg0)->G4VPhysicalVolume * { return a.GetDaughter(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));
    t.method("GetDaughter", [](G4LogicalVolume const* a, const std::size_t arg0)->G4VPhysicalVolume * { return a->GetDaughter(arg0); }, jlcxx::arg("this"), jlcxx::arg("i"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::AddDaughter(G4VPhysicalVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::AddDaughter(G4VPhysicalVolume *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:218:10
    t.method("AddDaughter", [](G4LogicalVolume& a, G4VPhysicalVolume * arg0)->void { a.AddDaughter(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("AddDaughter", [](G4LogicalVolume* a, G4VPhysicalVolume * arg0)->void { a->AddDaughter(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    DEBUG_MSG("Adding wrapper for G4bool G4LogicalVolume::IsDaughter(const G4VPhysicalVolume *) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4LogicalVolume::IsDaughter(const G4VPhysicalVolume *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:220:19
    t.method("IsDaughter", [](G4LogicalVolume const& a, const G4VPhysicalVolume * arg0)->G4bool { return a.IsDaughter(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("IsDaughter", [](G4LogicalVolume const* a, const G4VPhysicalVolume * arg0)->G4bool { return a->IsDaughter(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    DEBUG_MSG("Adding wrapper for G4bool G4LogicalVolume::IsAncestor(const G4VPhysicalVolume *) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4LogicalVolume::IsAncestor(const G4VPhysicalVolume *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:223:12
    t.method("IsAncestor", [](G4LogicalVolume const& a, const G4VPhysicalVolume * arg0)->G4bool { return a.IsAncestor(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("IsAncestor", [](G4LogicalVolume const* a, const G4VPhysicalVolume * arg0)->G4bool { return a->IsAncestor(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::RemoveDaughter(const G4VPhysicalVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::RemoveDaughter(const G4VPhysicalVolume *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:227:10
    t.method("RemoveDaughter", [](G4LogicalVolume& a, const G4VPhysicalVolume * arg0)->void { a.RemoveDaughter(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("RemoveDaughter", [](G4LogicalVolume* a, const G4VPhysicalVolume * arg0)->void { a->RemoveDaughter(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::ClearDaughters() (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::ClearDaughters()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:230:10
    t.method("ClearDaughters", [](G4LogicalVolume& a)->void { a.ClearDaughters(); }, jlcxx::arg("this"));
    t.method("ClearDaughters", [](G4LogicalVolume* a)->void { a->ClearDaughters(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4int G4LogicalVolume::TotalVolumeEntities() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4LogicalVolume::TotalVolumeEntities()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:233:11
    t.method("TotalVolumeEntities", [](G4LogicalVolume const& a)->G4int { return a.TotalVolumeEntities(); }, jlcxx::arg("this"));
    t.method("TotalVolumeEntities", [](G4LogicalVolume const* a)->G4int { return a->TotalVolumeEntities(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for EVolume G4LogicalVolume::CharacteriseDaughters() (" __HERE__ ")");
    // signature to use in the veto list: EVolume G4LogicalVolume::CharacteriseDaughters()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:236:20
    t.method("CharacteriseDaughters", [](G4LogicalVolume const& a)->EVolume { return a.CharacteriseDaughters(); }, jlcxx::arg("this"));
    t.method("CharacteriseDaughters", [](G4LogicalVolume const* a)->EVolume { return a->CharacteriseDaughters(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for EVolume G4LogicalVolume::DeduceDaughtersType() (" __HERE__ ")");
    // signature to use in the veto list: EVolume G4LogicalVolume::DeduceDaughtersType()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:238:20
    t.method("DeduceDaughtersType", [](G4LogicalVolume const& a)->EVolume { return a.DeduceDaughtersType(); }, jlcxx::arg("this"));
    t.method("DeduceDaughtersType", [](G4LogicalVolume const* a)->EVolume { return a->DeduceDaughtersType(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4VSolid * G4LogicalVolume::GetSolid() (" __HERE__ ")");
    // signature to use in the veto list: G4VSolid * G4LogicalVolume::GetSolid()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:241:15
    t.method("GetSolid", [](G4LogicalVolume const& a)->G4VSolid * { return a.GetSolid(); }, jlcxx::arg("this"));
    t.method("GetSolid", [](G4LogicalVolume const* a)->G4VSolid * { return a->GetSolid(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetSolid(G4VSolid *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetSolid(G4VSolid *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:242:10
    t.method("SetSolid", [](G4LogicalVolume& a, G4VSolid * arg0)->void { a.SetSolid(arg0); }, jlcxx::arg("this"), jlcxx::arg("pSolid"));
    t.method("SetSolid", [](G4LogicalVolume* a, G4VSolid * arg0)->void { a->SetSolid(arg0); }, jlcxx::arg("this"), jlcxx::arg("pSolid"));

    DEBUG_MSG("Adding wrapper for G4Material * G4LogicalVolume::GetMaterial() (" __HERE__ ")");
    // signature to use in the veto list: G4Material * G4LogicalVolume::GetMaterial()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:245:17
    t.method("GetMaterial", [](G4LogicalVolume const& a)->G4Material * { return a.GetMaterial(); }, jlcxx::arg("this"));
    t.method("GetMaterial", [](G4LogicalVolume const* a)->G4Material * { return a->GetMaterial(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetMaterial(G4Material *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetMaterial(G4Material *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:246:10
    t.method("SetMaterial", [](G4LogicalVolume& a, G4Material * arg0)->void { a.SetMaterial(arg0); }, jlcxx::arg("this"), jlcxx::arg("pMaterial"));
    t.method("SetMaterial", [](G4LogicalVolume* a, G4Material * arg0)->void { a->SetMaterial(arg0); }, jlcxx::arg("this"), jlcxx::arg("pMaterial"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::UpdateMaterial(G4Material *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::UpdateMaterial(G4Material *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:248:10
    t.method("UpdateMaterial", [](G4LogicalVolume& a, G4Material * arg0)->void { a.UpdateMaterial(arg0); }, jlcxx::arg("this"), jlcxx::arg("pMaterial"));
    t.method("UpdateMaterial", [](G4LogicalVolume* a, G4Material * arg0)->void { a->UpdateMaterial(arg0); }, jlcxx::arg("this"), jlcxx::arg("pMaterial"));

    DEBUG_MSG("Adding wrapper for G4double G4LogicalVolume::GetMass(G4bool, G4bool, G4Material *) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4LogicalVolume::GetMass(G4bool, G4bool, G4Material *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:252:14
    t.method("GetMass", [](G4LogicalVolume& a)->G4double { return a.GetMass(); }, jlcxx::arg("this"));
    t.method("GetMass", [](G4LogicalVolume& a, G4bool arg0)->G4double { return a.GetMass(arg0); }, jlcxx::arg("this"), jlcxx::arg("forced"));
    t.method("GetMass", [](G4LogicalVolume& a, G4bool arg0, G4bool arg1)->G4double { return a.GetMass(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("forced"), jlcxx::arg("propagate"));
    t.method("GetMass", [](G4LogicalVolume& a, G4bool arg0, G4bool arg1, G4Material * arg2)->G4double { return a.GetMass(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("forced"), jlcxx::arg("propagate"), jlcxx::arg("parMaterial"));
    t.method("GetMass", [](G4LogicalVolume* a)->G4double { return a->GetMass(); }, jlcxx::arg("this"));
    t.method("GetMass", [](G4LogicalVolume* a, G4bool arg0)->G4double { return a->GetMass(arg0); }, jlcxx::arg("this"), jlcxx::arg("forced"));
    t.method("GetMass", [](G4LogicalVolume* a, G4bool arg0, G4bool arg1)->G4double { return a->GetMass(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("forced"), jlcxx::arg("propagate"));
    t.method("GetMass", [](G4LogicalVolume* a, G4bool arg0, G4bool arg1, G4Material * arg2)->G4double { return a->GetMass(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("forced"), jlcxx::arg("propagate"), jlcxx::arg("parMaterial"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::ResetMass() (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::ResetMass()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:267:10
    t.method("ResetMass", [](G4LogicalVolume& a)->void { a.ResetMass(); }, jlcxx::arg("this"));
    t.method("ResetMass", [](G4LogicalVolume* a)->void { a->ResetMass(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4FieldManager * G4LogicalVolume::GetFieldManager() (" __HERE__ ")");
    // signature to use in the veto list: G4FieldManager * G4LogicalVolume::GetFieldManager()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:272:21
    t.method("GetFieldManager", [](G4LogicalVolume const& a)->G4FieldManager * { return a.GetFieldManager(); }, jlcxx::arg("this"));
    t.method("GetFieldManager", [](G4LogicalVolume const* a)->G4FieldManager * { return a->GetFieldManager(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetFieldManager(G4FieldManager *, G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetFieldManager(G4FieldManager *, G4bool)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:274:10
    t.method("SetFieldManager", [](G4LogicalVolume& a, G4FieldManager * arg0, G4bool arg1)->void { a.SetFieldManager(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("pFieldMgr"), jlcxx::arg("forceToAllDaughters"));
    t.method("SetFieldManager", [](G4LogicalVolume* a, G4FieldManager * arg0, G4bool arg1)->void { a->SetFieldManager(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("pFieldMgr"), jlcxx::arg("forceToAllDaughters"));

    DEBUG_MSG("Adding wrapper for G4VSensitiveDetector * G4LogicalVolume::GetSensitiveDetector() (" __HERE__ ")");
    // signature to use in the veto list: G4VSensitiveDetector * G4LogicalVolume::GetSensitiveDetector()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:281:27
    t.method("GetSensitiveDetector", [](G4LogicalVolume const& a)->G4VSensitiveDetector * { return a.GetSensitiveDetector(); }, jlcxx::arg("this"));
    t.method("GetSensitiveDetector", [](G4LogicalVolume const* a)->G4VSensitiveDetector * { return a->GetSensitiveDetector(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetSensitiveDetector(G4VSensitiveDetector *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetSensitiveDetector(G4VSensitiveDetector *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:283:10
    t.method("SetSensitiveDetector", [](G4LogicalVolume& a, G4VSensitiveDetector * arg0)->void { a.SetSensitiveDetector(arg0); }, jlcxx::arg("this"), jlcxx::arg("pSDetector"));
    t.method("SetSensitiveDetector", [](G4LogicalVolume* a, G4VSensitiveDetector * arg0)->void { a->SetSensitiveDetector(arg0); }, jlcxx::arg("this"), jlcxx::arg("pSDetector"));

    DEBUG_MSG("Adding wrapper for G4UserLimits * G4LogicalVolume::GetUserLimits() (" __HERE__ ")");
    // signature to use in the veto list: G4UserLimits * G4LogicalVolume::GetUserLimits()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:286:26
    t.method("GetUserLimits", [](G4LogicalVolume const& a)->G4UserLimits * { return a.GetUserLimits(); }, jlcxx::arg("this"));
    t.method("GetUserLimits", [](G4LogicalVolume const* a)->G4UserLimits * { return a->GetUserLimits(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetUserLimits(G4UserLimits *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetUserLimits(G4UserLimits *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:287:17
    t.method("SetUserLimits", [](G4LogicalVolume& a, G4UserLimits * arg0)->void { a.SetUserLimits(arg0); }, jlcxx::arg("this"), jlcxx::arg("pULimits"));
    t.method("SetUserLimits", [](G4LogicalVolume* a, G4UserLimits * arg0)->void { a->SetUserLimits(arg0); }, jlcxx::arg("this"), jlcxx::arg("pULimits"));

    DEBUG_MSG("Adding wrapper for G4SmartVoxelHeader * G4LogicalVolume::GetVoxelHeader() (" __HERE__ ")");
    // signature to use in the veto list: G4SmartVoxelHeader * G4LogicalVolume::GetVoxelHeader()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:290:32
    t.method("GetVoxelHeader", [](G4LogicalVolume const& a)->G4SmartVoxelHeader * { return a.GetVoxelHeader(); }, jlcxx::arg("this"));
    t.method("GetVoxelHeader", [](G4LogicalVolume const* a)->G4SmartVoxelHeader * { return a->GetVoxelHeader(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetVoxelHeader(G4SmartVoxelHeader *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetVoxelHeader(G4SmartVoxelHeader *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:291:17
    t.method("SetVoxelHeader", [](G4LogicalVolume& a, G4SmartVoxelHeader * arg0)->void { a.SetVoxelHeader(arg0); }, jlcxx::arg("this"), jlcxx::arg("pVoxel"));
    t.method("SetVoxelHeader", [](G4LogicalVolume* a, G4SmartVoxelHeader * arg0)->void { a->SetVoxelHeader(arg0); }, jlcxx::arg("this"), jlcxx::arg("pVoxel"));

    DEBUG_MSG("Adding wrapper for G4double G4LogicalVolume::GetSmartless() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4LogicalVolume::GetSmartless()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:294:21
    t.method("GetSmartless", [](G4LogicalVolume const& a)->G4double { return a.GetSmartless(); }, jlcxx::arg("this"));
    t.method("GetSmartless", [](G4LogicalVolume const* a)->G4double { return a->GetSmartless(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetSmartless(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetSmartless(G4double)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:295:17
    t.method("SetSmartless", [](G4LogicalVolume& a, G4double arg0)->void { a.SetSmartless(arg0); }, jlcxx::arg("this"), jlcxx::arg("s"));
    t.method("SetSmartless", [](G4LogicalVolume* a, G4double arg0)->void { a->SetSmartless(arg0); }, jlcxx::arg("this"), jlcxx::arg("s"));

    DEBUG_MSG("Adding wrapper for G4bool G4LogicalVolume::IsToOptimise() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4LogicalVolume::IsToOptimise()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:298:19
    t.method("IsToOptimise", [](G4LogicalVolume const& a)->G4bool { return a.IsToOptimise(); }, jlcxx::arg("this"));
    t.method("IsToOptimise", [](G4LogicalVolume const* a)->G4bool { return a->IsToOptimise(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetOptimisation(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetOptimisation(G4bool)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:301:17
    t.method("SetOptimisation", [](G4LogicalVolume& a, G4bool arg0)->void { a.SetOptimisation(arg0); }, jlcxx::arg("this"), jlcxx::arg("optim"));
    t.method("SetOptimisation", [](G4LogicalVolume* a, G4bool arg0)->void { a->SetOptimisation(arg0); }, jlcxx::arg("this"), jlcxx::arg("optim"));

    DEBUG_MSG("Adding wrapper for G4bool G4LogicalVolume::IsRootRegion() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4LogicalVolume::IsRootRegion()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:306:19
    t.method("IsRootRegion", [](G4LogicalVolume const& a)->G4bool { return a.IsRootRegion(); }, jlcxx::arg("this"));
    t.method("IsRootRegion", [](G4LogicalVolume const* a)->G4bool { return a->IsRootRegion(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetRegionRootFlag(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetRegionRootFlag(G4bool)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:308:17
    t.method("SetRegionRootFlag", [](G4LogicalVolume& a, G4bool arg0)->void { a.SetRegionRootFlag(arg0); }, jlcxx::arg("this"), jlcxx::arg("rreg"));
    t.method("SetRegionRootFlag", [](G4LogicalVolume* a, G4bool arg0)->void { a->SetRegionRootFlag(arg0); }, jlcxx::arg("this"), jlcxx::arg("rreg"));

    DEBUG_MSG("Adding wrapper for G4bool G4LogicalVolume::IsRegion() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4LogicalVolume::IsRegion()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:310:19
    t.method("IsRegion", [](G4LogicalVolume const& a)->G4bool { return a.IsRegion(); }, jlcxx::arg("this"));
    t.method("IsRegion", [](G4LogicalVolume const* a)->G4bool { return a->IsRegion(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetRegion(G4Region *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetRegion(G4Region *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:312:17
    t.method("SetRegion", [](G4LogicalVolume& a, G4Region * arg0)->void { a.SetRegion(arg0); }, jlcxx::arg("this"), jlcxx::arg("reg"));
    t.method("SetRegion", [](G4LogicalVolume* a, G4Region * arg0)->void { a->SetRegion(arg0); }, jlcxx::arg("this"), jlcxx::arg("reg"));

    DEBUG_MSG("Adding wrapper for G4Region * G4LogicalVolume::GetRegion() (" __HERE__ ")");
    // signature to use in the veto list: G4Region * G4LogicalVolume::GetRegion()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:314:22
    t.method("GetRegion", [](G4LogicalVolume const& a)->G4Region * { return a.GetRegion(); }, jlcxx::arg("this"));
    t.method("GetRegion", [](G4LogicalVolume const* a)->G4Region * { return a->GetRegion(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::PropagateRegion() (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::PropagateRegion()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:316:17
    t.method("PropagateRegion", [](G4LogicalVolume& a)->void { a.PropagateRegion(); }, jlcxx::arg("this"));
    t.method("PropagateRegion", [](G4LogicalVolume* a)->void { a->PropagateRegion(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const G4MaterialCutsCouple * G4LogicalVolume::GetMaterialCutsCouple() (" __HERE__ ")");
    // signature to use in the veto list: const G4MaterialCutsCouple * G4LogicalVolume::GetMaterialCutsCouple()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:319:33
    t.method("GetMaterialCutsCouple", [](G4LogicalVolume const& a)->const G4MaterialCutsCouple * { return a.GetMaterialCutsCouple(); }, jlcxx::arg("this"));
    t.method("GetMaterialCutsCouple", [](G4LogicalVolume const* a)->const G4MaterialCutsCouple * { return a->GetMaterialCutsCouple(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetMaterialCutsCouple(G4MaterialCutsCouple *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetMaterialCutsCouple(G4MaterialCutsCouple *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:320:10
    t.method("SetMaterialCutsCouple", [](G4LogicalVolume& a, G4MaterialCutsCouple * arg0)->void { a.SetMaterialCutsCouple(arg0); }, jlcxx::arg("this"), jlcxx::arg("cuts"));
    t.method("SetMaterialCutsCouple", [](G4LogicalVolume* a, G4MaterialCutsCouple * arg0)->void { a->SetMaterialCutsCouple(arg0); }, jlcxx::arg("this"), jlcxx::arg("cuts"));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for G4bool G4LogicalVolume::operator==(const G4LogicalVolume &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4LogicalVolume::operator==(const G4LogicalVolume &)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:323:12
    t.method("==", [](G4LogicalVolume const& a, const G4LogicalVolume & arg0)->G4bool { return a.operator==(arg0); }, jlcxx::arg("this"), jlcxx::arg("lv"));
    t.method("==", [](G4LogicalVolume const* a, const G4LogicalVolume & arg0)->G4bool { return a->operator==(arg0); }, jlcxx::arg("this"), jlcxx::arg("lv"));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for const G4VisAttributes * G4LogicalVolume::GetVisAttributes() (" __HERE__ ")");
    // signature to use in the veto list: const G4VisAttributes * G4LogicalVolume::GetVisAttributes()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:327:28
    t.method("GetVisAttributes", [](G4LogicalVolume const& a)->const G4VisAttributes * { return a.GetVisAttributes(); }, jlcxx::arg("this"));
    t.method("GetVisAttributes", [](G4LogicalVolume const* a)->const G4VisAttributes * { return a->GetVisAttributes(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetVisAttributes(const G4VisAttributes *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetVisAttributes(const G4VisAttributes *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:328:10
    t.method("SetVisAttributes", [](G4LogicalVolume& a, const G4VisAttributes * arg0)->void { a.SetVisAttributes(arg0); }, jlcxx::arg("this"), jlcxx::arg("pVA"));
    t.method("SetVisAttributes", [](G4LogicalVolume* a, const G4VisAttributes * arg0)->void { a->SetVisAttributes(arg0); }, jlcxx::arg("this"), jlcxx::arg("pVA"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetVisAttributes(const G4VisAttributes &) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetVisAttributes(const G4VisAttributes &)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:329:10
    t.method("SetVisAttributes", [](G4LogicalVolume& a, const G4VisAttributes & arg0)->void { a.SetVisAttributes(arg0); }, jlcxx::arg("this"), jlcxx::arg("VA"));
    t.method("SetVisAttributes", [](G4LogicalVolume* a, const G4VisAttributes & arg0)->void { a->SetVisAttributes(arg0); }, jlcxx::arg("this"), jlcxx::arg("VA"));

    DEBUG_MSG("Adding wrapper for G4FastSimulationManager * G4LogicalVolume::GetFastSimulationManager() (" __HERE__ ")");
    // signature to use in the veto list: G4FastSimulationManager * G4LogicalVolume::GetFastSimulationManager()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:333:37
    t.method("GetFastSimulationManager", [](G4LogicalVolume const& a)->G4FastSimulationManager * { return a.GetFastSimulationManager(); }, jlcxx::arg("this"));
    t.method("GetFastSimulationManager", [](G4LogicalVolume const* a)->G4FastSimulationManager * { return a->GetFastSimulationManager(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetBiasWeight(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetBiasWeight(G4double)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:336:17
    t.method("SetBiasWeight", [](G4LogicalVolume& a, G4double arg0)->void { a.SetBiasWeight(arg0); }, jlcxx::arg("this"), jlcxx::arg("w"));
    t.method("SetBiasWeight", [](G4LogicalVolume* a, G4double arg0)->void { a->SetBiasWeight(arg0); }, jlcxx::arg("this"), jlcxx::arg("w"));

    DEBUG_MSG("Adding wrapper for G4double G4LogicalVolume::GetBiasWeight() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4LogicalVolume::GetBiasWeight()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:337:21
    t.method("GetBiasWeight", [](G4LogicalVolume const& a)->G4double { return a.GetBiasWeight(); }, jlcxx::arg("this"));
    t.method("GetBiasWeight", [](G4LogicalVolume const* a)->G4double { return a->GetBiasWeight(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4bool G4LogicalVolume::IsExtended() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4LogicalVolume::IsExtended()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:347:20
    t.method("IsExtended", [](G4LogicalVolume const& a)->G4bool { return a.IsExtended(); }, jlcxx::arg("this"));
    t.method("IsExtended", [](G4LogicalVolume const* a)->G4bool { return a->IsExtended(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4FieldManager * G4LogicalVolume::GetMasterFieldManager() (" __HERE__ ")");
    // signature to use in the veto list: G4FieldManager * G4LogicalVolume::GetMasterFieldManager()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:350:28
    t.method("GetMasterFieldManager", [](G4LogicalVolume const& a)->G4FieldManager * { return a.GetMasterFieldManager(); }, jlcxx::arg("this"));
    t.method("GetMasterFieldManager", [](G4LogicalVolume const* a)->G4FieldManager * { return a->GetMasterFieldManager(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4VSensitiveDetector * G4LogicalVolume::GetMasterSensitiveDetector() (" __HERE__ ")");
    // signature to use in the veto list: G4VSensitiveDetector * G4LogicalVolume::GetMasterSensitiveDetector()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:352:34
    t.method("GetMasterSensitiveDetector", [](G4LogicalVolume const& a)->G4VSensitiveDetector * { return a.GetMasterSensitiveDetector(); }, jlcxx::arg("this"));
    t.method("GetMasterSensitiveDetector", [](G4LogicalVolume const* a)->G4VSensitiveDetector * { return a->GetMasterSensitiveDetector(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4VSolid * G4LogicalVolume::GetMasterSolid() (" __HERE__ ")");
    // signature to use in the veto list: G4VSolid * G4LogicalVolume::GetMasterSolid()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:354:22
    t.method("GetMasterSolid", [](G4LogicalVolume const& a)->G4VSolid * { return a.GetMasterSolid(); }, jlcxx::arg("this"));
    t.method("GetMasterSolid", [](G4LogicalVolume const* a)->G4VSolid * { return a->GetMasterSolid(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4int G4LogicalVolume::GetInstanceID() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4LogicalVolume::GetInstanceID()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:357:18
    t.method("GetInstanceID", [](G4LogicalVolume const& a)->G4int { return a.GetInstanceID(); }, jlcxx::arg("this"));
    t.method("GetInstanceID", [](G4LogicalVolume const* a)->G4int { return a->GetInstanceID(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::Clean() (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::Clean()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:363:17
    module_.method("G4LogicalVolume!Clean", []()->void { G4LogicalVolume::Clean(); });

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::Lock() (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::Lock()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:366:17
    t.method("Lock", [](G4LogicalVolume& a)->void { a.Lock(); }, jlcxx::arg("this"));
    t.method("Lock", [](G4LogicalVolume* a)->void { a->Lock(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::InitialiseWorker(G4LogicalVolume *, G4VSolid *, G4VSensitiveDetector *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::InitialiseWorker(G4LogicalVolume *, G4VSolid *, G4VSensitiveDetector *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:369:10
    t.method("InitialiseWorker", [](G4LogicalVolume& a, G4LogicalVolume * arg0, G4VSolid * arg1, G4VSensitiveDetector * arg2)->void { a.InitialiseWorker(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("ptrMasterObject"), jlcxx::arg("pSolid"), jlcxx::arg("pSDetector"));
    t.method("InitialiseWorker", [](G4LogicalVolume* a, G4LogicalVolume * arg0, G4VSolid * arg1, G4VSensitiveDetector * arg2)->void { a->InitialiseWorker(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("ptrMasterObject"), jlcxx::arg("pSolid"), jlcxx::arg("pSDetector"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::TerminateWorker(G4LogicalVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::TerminateWorker(G4LogicalVolume *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:374:10
    t.method("TerminateWorker", [](G4LogicalVolume& a, G4LogicalVolume * arg0)->void { a.TerminateWorker(arg0); }, jlcxx::arg("this"), jlcxx::arg("ptrMasterObject"));
    t.method("TerminateWorker", [](G4LogicalVolume* a, G4LogicalVolume * arg0)->void { a->TerminateWorker(arg0); }, jlcxx::arg("this"), jlcxx::arg("ptrMasterObject"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::AssignFieldManager(G4FieldManager *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::AssignFieldManager(G4FieldManager *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:378:10
    t.method("AssignFieldManager", [](G4LogicalVolume& a, G4FieldManager * arg0)->void { a.AssignFieldManager(arg0); }, jlcxx::arg("this"), jlcxx::arg("fldMgr"));
    t.method("AssignFieldManager", [](G4LogicalVolume* a, G4FieldManager * arg0)->void { a->AssignFieldManager(arg0); }, jlcxx::arg("this"), jlcxx::arg("fldMgr"));

    DEBUG_MSG("Adding wrapper for G4VSolid * G4LogicalVolume::GetSolid(G4LVData &) (" __HERE__ ")");
    // signature to use in the veto list: G4VSolid * G4LogicalVolume::GetSolid(G4LVData &)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:381:22
    module_.method("G4LogicalVolume!GetSolid", [](G4LVData & arg0)->G4VSolid * { return G4LogicalVolume::GetSolid(arg0); }, jlcxx::arg("instLVdata"));

    DEBUG_MSG("Adding wrapper for void G4LogicalVolume::SetSolid(G4LVData &, G4VSolid *) (" __HERE__ ")");
    // signature to use in the veto list: void G4LogicalVolume::SetSolid(G4LVData &, G4VSolid *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:382:17
    module_.method("G4LogicalVolume!SetSolid", [](G4LVData & arg0, G4VSolid * arg1)->void { G4LogicalVolume::SetSolid(arg0, arg1); }, jlcxx::arg("instLVdata"), jlcxx::arg("pSolid"));

    DEBUG_MSG("Adding wrapper for G4bool G4LogicalVolume::ChangeDaughtersType(EVolume) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4LogicalVolume::ChangeDaughtersType(EVolume)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4LogicalVolume.hh:385:12
    t.method("ChangeDaughtersType", [](G4LogicalVolume& a, EVolume arg0)->G4bool { return a.ChangeDaughtersType(arg0); }, jlcxx::arg("this"), jlcxx::arg("atype"));
    t.method("ChangeDaughtersType", [](G4LogicalVolume* a, EVolume arg0)->G4bool { return a->ChangeDaughtersType(arg0); }, jlcxx::arg("this"), jlcxx::arg("atype"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4LogicalVolume>> type_;
};
std::shared_ptr<Wrapper> newJlG4LogicalVolume(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4LogicalVolume(module));
}
