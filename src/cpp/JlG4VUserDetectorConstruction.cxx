// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4VUserDetectorConstruction> : std::false_type { };
  template<> struct DefaultConstructible<G4VUserDetectorConstruction> : std::false_type { };
}

// Class generating the wrapper for type G4VUserDetectorConstruction
// signature to use in the veto file: G4VUserDetectorConstruction
struct JlG4VUserDetectorConstruction: public Wrapper {

  JlG4VUserDetectorConstruction(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4VUserDetectorConstruction (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VUserDetectorConstruction.hh:50:7
    jlcxx::TypeWrapper<G4VUserDetectorConstruction>  t = jlModule.add_type<G4VUserDetectorConstruction>("G4VUserDetectorConstruction");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4VUserDetectorConstruction>>(new jlcxx::TypeWrapper<G4VUserDetectorConstruction>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for G4VPhysicalVolume * G4VUserDetectorConstruction::Construct() (" __HERE__ ")");
    // signature to use in the veto list: G4VPhysicalVolume * G4VUserDetectorConstruction::Construct()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VUserDetectorConstruction.hh:56:32
    t.method("Construct", [](G4VUserDetectorConstruction& a)->G4VPhysicalVolume * { return a.Construct(); }, jlcxx::arg("this"));
    t.method("Construct", [](G4VUserDetectorConstruction* a)->G4VPhysicalVolume * { return a->Construct(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4VUserDetectorConstruction::ConstructSDandField() (" __HERE__ ")");
    // signature to use in the veto list: void G4VUserDetectorConstruction::ConstructSDandField()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VUserDetectorConstruction.hh:60:18
    t.method("ConstructSDandField", [](G4VUserDetectorConstruction& a)->void { a.ConstructSDandField(); }, jlcxx::arg("this"));
    t.method("ConstructSDandField", [](G4VUserDetectorConstruction* a)->void { a->ConstructSDandField(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4VUserDetectorConstruction::CloneSD() (" __HERE__ ")");
    // signature to use in the veto list: void G4VUserDetectorConstruction::CloneSD()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VUserDetectorConstruction.hh:62:18
    t.method("CloneSD", [](G4VUserDetectorConstruction& a)->void { a.CloneSD(); }, jlcxx::arg("this"));
    t.method("CloneSD", [](G4VUserDetectorConstruction* a)->void { a->CloneSD(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4VUserDetectorConstruction::CloneF() (" __HERE__ ")");
    // signature to use in the veto list: void G4VUserDetectorConstruction::CloneF()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VUserDetectorConstruction.hh:63:18
    t.method("CloneF", [](G4VUserDetectorConstruction& a)->void { a.CloneF(); }, jlcxx::arg("this"));
    t.method("CloneF", [](G4VUserDetectorConstruction* a)->void { a->CloneF(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4int G4VUserDetectorConstruction::ConstructParallelGeometries() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4VUserDetectorConstruction::ConstructParallelGeometries()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VUserDetectorConstruction.hh:67:11
    t.method("ConstructParallelGeometries", [](G4VUserDetectorConstruction& a)->G4int { return a.ConstructParallelGeometries(); }, jlcxx::arg("this"));
    t.method("ConstructParallelGeometries", [](G4VUserDetectorConstruction* a)->G4int { return a->ConstructParallelGeometries(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4VUserDetectorConstruction::ConstructParallelSD() (" __HERE__ ")");
    // signature to use in the veto list: void G4VUserDetectorConstruction::ConstructParallelSD()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VUserDetectorConstruction.hh:68:10
    t.method("ConstructParallelSD", [](G4VUserDetectorConstruction& a)->void { a.ConstructParallelSD(); }, jlcxx::arg("this"));
    t.method("ConstructParallelSD", [](G4VUserDetectorConstruction* a)->void { a->ConstructParallelSD(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4int G4VUserDetectorConstruction::GetNumberOfParallelWorld() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4VUserDetectorConstruction::GetNumberOfParallelWorld()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VUserDetectorConstruction.hh:70:11
    t.method("GetNumberOfParallelWorld", [](G4VUserDetectorConstruction const& a)->G4int { return a.GetNumberOfParallelWorld(); }, jlcxx::arg("this"));
    t.method("GetNumberOfParallelWorld", [](G4VUserDetectorConstruction const* a)->G4int { return a->GetNumberOfParallelWorld(); }, jlcxx::arg("this"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4VUserDetectorConstruction>> type_;
};
std::shared_ptr<Wrapper> newJlG4VUserDetectorConstruction(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4VUserDetectorConstruction(module));
}
