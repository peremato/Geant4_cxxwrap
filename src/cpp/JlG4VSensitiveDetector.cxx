// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4VSensitiveDetector> : std::false_type { };
  template<> struct DefaultConstructible<G4VSensitiveDetector> : std::false_type { };
}

// Class generating the wrapper for type G4VSensitiveDetector
// signature to use in the veto file: G4VSensitiveDetector
struct JlG4VSensitiveDetector: public Wrapper {

  JlG4VSensitiveDetector(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4VSensitiveDetector (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:50:7
    jlcxx::TypeWrapper<G4VSensitiveDetector>  t = jlModule.add_type<G4VSensitiveDetector>("G4VSensitiveDetector");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4VSensitiveDetector>>(new jlcxx::TypeWrapper<G4VSensitiveDetector>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;



    DEBUG_MSG("Adding wrapper for G4VSensitiveDetector & G4VSensitiveDetector::operator=(const G4VSensitiveDetector &) (" __HERE__ ")");
    // signature to use in the veto list: G4VSensitiveDetector & G4VSensitiveDetector::operator=(const G4VSensitiveDetector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:58:25
    t.method("assign", [](G4VSensitiveDetector& a, const G4VSensitiveDetector & arg0)->G4VSensitiveDetector & { return a.operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("right"));
    t.method("assign", [](G4VSensitiveDetector* a, const G4VSensitiveDetector & arg0)->G4VSensitiveDetector & { return a->operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("right"));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for G4bool G4VSensitiveDetector::operator==(const G4VSensitiveDetector &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4VSensitiveDetector::operator==(const G4VSensitiveDetector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:61:10
    t.method("==", [](G4VSensitiveDetector const& a, const G4VSensitiveDetector & arg0)->G4bool { return a.operator==(arg0); }, jlcxx::arg("this"), jlcxx::arg("right"));
    t.method("==", [](G4VSensitiveDetector const* a, const G4VSensitiveDetector & arg0)->G4bool { return a->operator==(arg0); }, jlcxx::arg("this"), jlcxx::arg("right"));

    DEBUG_MSG("Adding wrapper for G4bool G4VSensitiveDetector::operator!=(const G4VSensitiveDetector &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4VSensitiveDetector::operator!=(const G4VSensitiveDetector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:62:10
    t.method("!=", [](G4VSensitiveDetector const& a, const G4VSensitiveDetector & arg0)->G4bool { return a.operator!=(arg0); }, jlcxx::arg("this"), jlcxx::arg("right"));
    t.method("!=", [](G4VSensitiveDetector const* a, const G4VSensitiveDetector & arg0)->G4bool { return a->operator!=(arg0); }, jlcxx::arg("this"), jlcxx::arg("right"));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for void G4VSensitiveDetector::Initialize(G4HCofThisEvent *) (" __HERE__ ")");
    // signature to use in the veto list: void G4VSensitiveDetector::Initialize(G4HCofThisEvent *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:67:16
    t.method("Initialize", [](G4VSensitiveDetector& a, G4HCofThisEvent * arg0)->void { a.Initialize(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("Initialize", [](G4VSensitiveDetector* a, G4HCofThisEvent * arg0)->void { a->Initialize(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void G4VSensitiveDetector::EndOfEvent(G4HCofThisEvent *) (" __HERE__ ")");
    // signature to use in the veto list: void G4VSensitiveDetector::EndOfEvent(G4HCofThisEvent *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:68:16
    t.method("EndOfEvent", [](G4VSensitiveDetector& a, G4HCofThisEvent * arg0)->void { a.EndOfEvent(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("EndOfEvent", [](G4VSensitiveDetector* a, G4HCofThisEvent * arg0)->void { a->EndOfEvent(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void G4VSensitiveDetector::clear() (" __HERE__ ")");
    // signature to use in the veto list: void G4VSensitiveDetector::clear()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:74:16
    t.method("clear", [](G4VSensitiveDetector& a)->void { a.clear(); }, jlcxx::arg("this"));
    t.method("clear", [](G4VSensitiveDetector* a)->void { a->clear(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4VSensitiveDetector::DrawAll() (" __HERE__ ")");
    // signature to use in the veto list: void G4VSensitiveDetector::DrawAll()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:76:16
    t.method("DrawAll", [](G4VSensitiveDetector& a)->void { a.DrawAll(); }, jlcxx::arg("this"));
    t.method("DrawAll", [](G4VSensitiveDetector* a)->void { a->DrawAll(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4VSensitiveDetector::PrintAll() (" __HERE__ ")");
    // signature to use in the veto list: void G4VSensitiveDetector::PrintAll()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:77:16
    t.method("PrintAll", [](G4VSensitiveDetector& a)->void { a.PrintAll(); }, jlcxx::arg("this"));
    t.method("PrintAll", [](G4VSensitiveDetector* a)->void { a->PrintAll(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4bool G4VSensitiveDetector::Hit(G4Step *) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4VSensitiveDetector::Hit(G4Step *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:83:17
    t.method("Hit", [](G4VSensitiveDetector& a, G4Step * arg0)->G4bool { return a.Hit(arg0); }, jlcxx::arg("this"), jlcxx::arg("aStep"));
    t.method("Hit", [](G4VSensitiveDetector* a, G4Step * arg0)->G4bool { return a->Hit(arg0); }, jlcxx::arg("this"), jlcxx::arg("aStep"));

    DEBUG_MSG("Adding wrapper for void G4VSensitiveDetector::SetROgeometry(G4VReadOutGeometry *) (" __HERE__ ")");
    // signature to use in the veto list: void G4VSensitiveDetector::SetROgeometry(G4VReadOutGeometry *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:97:15
    t.method("SetROgeometry", [](G4VSensitiveDetector& a, G4VReadOutGeometry * arg0)->void { a.SetROgeometry(arg0); }, jlcxx::arg("this"), jlcxx::arg("value"));
    t.method("SetROgeometry", [](G4VSensitiveDetector* a, G4VReadOutGeometry * arg0)->void { a->SetROgeometry(arg0); }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding wrapper for void G4VSensitiveDetector::SetFilter(G4VSDFilter *) (" __HERE__ ")");
    // signature to use in the veto list: void G4VSensitiveDetector::SetFilter(G4VSDFilter *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:100:15
    t.method("SetFilter", [](G4VSensitiveDetector& a, G4VSDFilter * arg0)->void { a.SetFilter(arg0); }, jlcxx::arg("this"), jlcxx::arg("value"));
    t.method("SetFilter", [](G4VSensitiveDetector* a, G4VSDFilter * arg0)->void { a->SetFilter(arg0); }, jlcxx::arg("this"), jlcxx::arg("value"));

    DEBUG_MSG("Adding wrapper for G4int G4VSensitiveDetector::GetNumberOfCollections() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4VSensitiveDetector::GetNumberOfCollections()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:102:16
    t.method("GetNumberOfCollections", [](G4VSensitiveDetector const& a)->G4int { return a.GetNumberOfCollections(); }, jlcxx::arg("this"));
    t.method("GetNumberOfCollections", [](G4VSensitiveDetector const* a)->G4int { return a->GetNumberOfCollections(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const G4String & G4VSensitiveDetector::GetCollectionName(G4int) (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4VSensitiveDetector::GetCollectionName(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:103:26
    t.method("GetCollectionName", [](G4VSensitiveDetector const& a, G4int arg0)->const G4String & { return a.GetCollectionName(arg0); }, jlcxx::arg("this"), jlcxx::arg("id"));
    t.method("GetCollectionName", [](G4VSensitiveDetector const* a, G4int arg0)->const G4String & { return a->GetCollectionName(arg0); }, jlcxx::arg("this"), jlcxx::arg("id"));

    DEBUG_MSG("Adding wrapper for void G4VSensitiveDetector::SetVerboseLevel(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4VSensitiveDetector::SetVerboseLevel(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:104:15
    t.method("SetVerboseLevel", [](G4VSensitiveDetector& a, G4int arg0)->void { a.SetVerboseLevel(arg0); }, jlcxx::arg("this"), jlcxx::arg("vl"));
    t.method("SetVerboseLevel", [](G4VSensitiveDetector* a, G4int arg0)->void { a->SetVerboseLevel(arg0); }, jlcxx::arg("this"), jlcxx::arg("vl"));

    DEBUG_MSG("Adding wrapper for void G4VSensitiveDetector::Activate(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4VSensitiveDetector::Activate(G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:105:15
    t.method("Activate", [](G4VSensitiveDetector& a, G4bool arg0)->void { a.Activate(arg0); }, jlcxx::arg("this"), jlcxx::arg("activeFlag"));
    t.method("Activate", [](G4VSensitiveDetector* a, G4bool arg0)->void { a->Activate(arg0); }, jlcxx::arg("this"), jlcxx::arg("activeFlag"));

    DEBUG_MSG("Adding wrapper for G4bool G4VSensitiveDetector::isActive() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4VSensitiveDetector::isActive()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:106:17
    t.method("isActive", [](G4VSensitiveDetector const& a)->G4bool { return a.isActive(); }, jlcxx::arg("this"));
    t.method("isActive", [](G4VSensitiveDetector const* a)->G4bool { return a->isActive(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const G4String & G4VSensitiveDetector::GetName() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4VSensitiveDetector::GetName()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:107:26
    t.method("GetName", [](G4VSensitiveDetector const& a)->const G4String & { return a.GetName(); }, jlcxx::arg("this"));
    t.method("GetName", [](G4VSensitiveDetector const* a)->const G4String & { return a->GetName(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const G4String & G4VSensitiveDetector::GetPathName() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4VSensitiveDetector::GetPathName()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:108:26
    t.method("GetPathName", [](G4VSensitiveDetector const& a)->const G4String & { return a.GetPathName(); }, jlcxx::arg("this"));
    t.method("GetPathName", [](G4VSensitiveDetector const* a)->const G4String & { return a->GetPathName(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const G4String & G4VSensitiveDetector::GetFullPathName() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4VSensitiveDetector::GetFullPathName()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:109:26
    t.method("GetFullPathName", [](G4VSensitiveDetector const& a)->const G4String & { return a.GetFullPathName(); }, jlcxx::arg("this"));
    t.method("GetFullPathName", [](G4VSensitiveDetector const* a)->const G4String & { return a->GetFullPathName(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4VReadOutGeometry * G4VSensitiveDetector::GetROgeometry() (" __HERE__ ")");
    // signature to use in the veto list: G4VReadOutGeometry * G4VSensitiveDetector::GetROgeometry()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:110:30
    t.method("GetROgeometry", [](G4VSensitiveDetector const& a)->G4VReadOutGeometry * { return a.GetROgeometry(); }, jlcxx::arg("this"));
    t.method("GetROgeometry", [](G4VSensitiveDetector const* a)->G4VReadOutGeometry * { return a->GetROgeometry(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4VSDFilter * G4VSensitiveDetector::GetFilter() (" __HERE__ ")");
    // signature to use in the veto list: G4VSDFilter * G4VSensitiveDetector::GetFilter()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:111:23
    t.method("GetFilter", [](G4VSensitiveDetector const& a)->G4VSDFilter * { return a.GetFilter(); }, jlcxx::arg("this"));
    t.method("GetFilter", [](G4VSensitiveDetector const* a)->G4VSDFilter * { return a->GetFilter(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4VSensitiveDetector * G4VSensitiveDetector::Clone() (" __HERE__ ")");
    // signature to use in the veto list: G4VSensitiveDetector * G4VSensitiveDetector::Clone()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4VSensitiveDetector.hh:113:33
    t.method("Clone", [](G4VSensitiveDetector const& a)->G4VSensitiveDetector * { return a.Clone(); }, jlcxx::arg("this"));
    t.method("Clone", [](G4VSensitiveDetector const* a)->G4VSensitiveDetector * { return a->Clone(); }, jlcxx::arg("this"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4VSensitiveDetector>> type_;
};
std::shared_ptr<Wrapper> newJlG4VSensitiveDetector(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4VSensitiveDetector(module));
}
