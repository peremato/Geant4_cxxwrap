// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4Hype> : std::false_type { };
  template<> struct DefaultConstructible<G4Hype> : std::false_type { };
template<> struct SuperType<G4Hype> { typedef G4VSolid type; };
}

// Class generating the wrapper for type G4Hype
// signature to use in the veto file: G4Hype
struct JlG4Hype: public Wrapper {

  JlG4Hype(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4Hype (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:68:7
    jlcxx::TypeWrapper<G4Hype>  t = jlModule.add_type<G4Hype>("G4Hype",
      jlcxx::julia_base_type<G4VSolid>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4Hype>>(new jlcxx::TypeWrapper<G4Hype>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void G4Hype::G4Hype(const G4String &, G4double, G4double, G4double, G4double, G4double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:72:5
    t.constructor<const G4String &, G4double, G4double, G4double, G4double, G4double>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("pName"), jlcxx::arg("newInnerRadius"), jlcxx::arg("newOuterRadius"), jlcxx::arg("newInnerStereo"), jlcxx::arg("newOuterStereo"), jlcxx::arg("newHalfLenZ")    );

    DEBUG_MSG("Adding wrapper for void G4Hype::ComputeDimensions(G4VPVParameterisation *, const G4int, const G4VPhysicalVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void G4Hype::ComputeDimensions(G4VPVParameterisation *, const G4int, const G4VPhysicalVolume *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:81:10
    t.method("ComputeDimensions", [](G4Hype& a, G4VPVParameterisation * arg0, const G4int arg1, const G4VPhysicalVolume * arg2)->void { a.ComputeDimensions(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("n"), jlcxx::arg("pRep"));
    t.method("ComputeDimensions", [](G4Hype* a, G4VPVParameterisation * arg0, const G4int arg1, const G4VPhysicalVolume * arg2)->void { a->ComputeDimensions(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("n"), jlcxx::arg("pRep"));

    DEBUG_MSG("Adding wrapper for void G4Hype::BoundingLimits(G4ThreeVector &, G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: void G4Hype::BoundingLimits(G4ThreeVector &, G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:85:10
    t.method("BoundingLimits", [](G4Hype const& a, G4ThreeVector & arg0, G4ThreeVector & arg1)->void { a.BoundingLimits(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("pMin"), jlcxx::arg("pMax"));
    t.method("BoundingLimits", [](G4Hype const* a, G4ThreeVector & arg0, G4ThreeVector & arg1)->void { a->BoundingLimits(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("pMin"), jlcxx::arg("pMax"));

    DEBUG_MSG("Adding wrapper for G4double G4Hype::GetInnerRadius() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Hype::GetInnerRadius()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:92:21
    t.method("GetInnerRadius", [](G4Hype const& a)->G4double { return a.GetInnerRadius(); }, jlcxx::arg("this"));
    t.method("GetInnerRadius", [](G4Hype const* a)->G4double { return a->GetInnerRadius(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Hype::GetOuterRadius() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Hype::GetOuterRadius()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:93:21
    t.method("GetOuterRadius", [](G4Hype const& a)->G4double { return a.GetOuterRadius(); }, jlcxx::arg("this"));
    t.method("GetOuterRadius", [](G4Hype const* a)->G4double { return a->GetOuterRadius(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Hype::GetZHalfLength() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Hype::GetZHalfLength()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:94:21
    t.method("GetZHalfLength", [](G4Hype const& a)->G4double { return a.GetZHalfLength(); }, jlcxx::arg("this"));
    t.method("GetZHalfLength", [](G4Hype const* a)->G4double { return a->GetZHalfLength(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Hype::GetInnerStereo() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Hype::GetInnerStereo()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:95:21
    t.method("GetInnerStereo", [](G4Hype const& a)->G4double { return a.GetInnerStereo(); }, jlcxx::arg("this"));
    t.method("GetInnerStereo", [](G4Hype const* a)->G4double { return a->GetInnerStereo(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Hype::GetOuterStereo() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Hype::GetOuterStereo()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:96:21
    t.method("GetOuterStereo", [](G4Hype const& a)->G4double { return a.GetOuterStereo(); }, jlcxx::arg("this"));
    t.method("GetOuterStereo", [](G4Hype const* a)->G4double { return a->GetOuterStereo(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4Hype::SetInnerRadius(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Hype::SetInnerRadius(G4double)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:98:17
    t.method("SetInnerRadius", [](G4Hype& a, G4double arg0)->void { a.SetInnerRadius(arg0); }, jlcxx::arg("this"), jlcxx::arg("newIRad"));
    t.method("SetInnerRadius", [](G4Hype* a, G4double arg0)->void { a->SetInnerRadius(arg0); }, jlcxx::arg("this"), jlcxx::arg("newIRad"));

    DEBUG_MSG("Adding wrapper for void G4Hype::SetOuterRadius(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Hype::SetOuterRadius(G4double)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:99:17
    t.method("SetOuterRadius", [](G4Hype& a, G4double arg0)->void { a.SetOuterRadius(arg0); }, jlcxx::arg("this"), jlcxx::arg("newORad"));
    t.method("SetOuterRadius", [](G4Hype* a, G4double arg0)->void { a->SetOuterRadius(arg0); }, jlcxx::arg("this"), jlcxx::arg("newORad"));

    DEBUG_MSG("Adding wrapper for void G4Hype::SetZHalfLength(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Hype::SetZHalfLength(G4double)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:100:17
    t.method("SetZHalfLength", [](G4Hype& a, G4double arg0)->void { a.SetZHalfLength(arg0); }, jlcxx::arg("this"), jlcxx::arg("newHLZ"));
    t.method("SetZHalfLength", [](G4Hype* a, G4double arg0)->void { a->SetZHalfLength(arg0); }, jlcxx::arg("this"), jlcxx::arg("newHLZ"));

    DEBUG_MSG("Adding wrapper for void G4Hype::SetInnerStereo(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Hype::SetInnerStereo(G4double)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:101:17
    t.method("SetInnerStereo", [](G4Hype& a, G4double arg0)->void { a.SetInnerStereo(arg0); }, jlcxx::arg("this"), jlcxx::arg("newISte"));
    t.method("SetInnerStereo", [](G4Hype* a, G4double arg0)->void { a->SetInnerStereo(arg0); }, jlcxx::arg("this"), jlcxx::arg("newISte"));

    DEBUG_MSG("Adding wrapper for void G4Hype::SetOuterStereo(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Hype::SetOuterStereo(G4double)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:102:17
    t.method("SetOuterStereo", [](G4Hype& a, G4double arg0)->void { a.SetOuterStereo(arg0); }, jlcxx::arg("this"), jlcxx::arg("newOSte"));
    t.method("SetOuterStereo", [](G4Hype* a, G4double arg0)->void { a->SetOuterStereo(arg0); }, jlcxx::arg("this"), jlcxx::arg("newOSte"));

    DEBUG_MSG("Adding wrapper for EInside G4Hype::Inside(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: EInside G4Hype::Inside(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:104:13
    t.method("Inside", [](G4Hype const& a, const G4ThreeVector & arg0)->EInside { return a.Inside(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("Inside", [](G4Hype const* a, const G4ThreeVector & arg0)->EInside { return a->Inside(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4Hype::SurfaceNormal(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4Hype::SurfaceNormal(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:106:19
    t.method("SurfaceNormal", [](G4Hype const& a, const G4ThreeVector & arg0)->G4ThreeVector { return a.SurfaceNormal(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("SurfaceNormal", [](G4Hype const* a, const G4ThreeVector & arg0)->G4ThreeVector { return a->SurfaceNormal(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    DEBUG_MSG("Adding wrapper for G4double G4Hype::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Hype::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:108:14
    t.method("DistanceToIn", [](G4Hype const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a.DistanceToIn(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"));
    t.method("DistanceToIn", [](G4Hype const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a->DistanceToIn(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"));

    DEBUG_MSG("Adding wrapper for G4double G4Hype::DistanceToIn(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Hype::DistanceToIn(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:110:14
    t.method("DistanceToIn", [](G4Hype const& a, const G4ThreeVector & arg0)->G4double { return a.DistanceToIn(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("DistanceToIn", [](G4Hype const* a, const G4ThreeVector & arg0)->G4double { return a->DistanceToIn(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    DEBUG_MSG("Adding wrapper for G4double G4Hype::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Hype::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:111:14
    t.method("DistanceToOut", [](G4Hype const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a.DistanceToOut(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"));
    t.method("DistanceToOut", [](G4Hype const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double { return a.DistanceToOut(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"), jlcxx::arg("calcNorm"));
    t.method("DistanceToOut", [](G4Hype const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double { return a.DistanceToOut(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"), jlcxx::arg("calcNorm"), jlcxx::arg("validNorm"));
    t.method("DistanceToOut", [](G4Hype const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3, G4ThreeVector * arg4)->G4double { return a.DistanceToOut(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"), jlcxx::arg("calcNorm"), jlcxx::arg("validNorm"), jlcxx::arg("n"));
    t.method("DistanceToOut", [](G4Hype const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a->DistanceToOut(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"));
    t.method("DistanceToOut", [](G4Hype const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double { return a->DistanceToOut(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"), jlcxx::arg("calcNorm"));
    t.method("DistanceToOut", [](G4Hype const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double { return a->DistanceToOut(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"), jlcxx::arg("calcNorm"), jlcxx::arg("validNorm"));
    t.method("DistanceToOut", [](G4Hype const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3, G4ThreeVector * arg4)->G4double { return a->DistanceToOut(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"), jlcxx::arg("calcNorm"), jlcxx::arg("validNorm"), jlcxx::arg("n"));

    DEBUG_MSG("Adding wrapper for G4double G4Hype::DistanceToOut(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Hype::DistanceToOut(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:115:14
    t.method("DistanceToOut", [](G4Hype const& a, const G4ThreeVector & arg0)->G4double { return a.DistanceToOut(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("DistanceToOut", [](G4Hype const* a, const G4ThreeVector & arg0)->G4double { return a->DistanceToOut(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    DEBUG_MSG("Adding wrapper for G4GeometryType G4Hype::GetEntityType() (" __HERE__ ")");
    // signature to use in the veto list: G4GeometryType G4Hype::GetEntityType()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:117:21
    t.method("GetEntityType", [](G4Hype const& a)->G4GeometryType { return a.GetEntityType(); }, jlcxx::arg("this"));
    t.method("GetEntityType", [](G4Hype const* a)->G4GeometryType { return a->GetEntityType(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4VSolid * G4Hype::Clone() (" __HERE__ ")");
    // signature to use in the veto list: G4VSolid * G4Hype::Clone()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:119:15
    t.method("Clone", [](G4Hype const& a)->G4VSolid * { return a.Clone(); }, jlcxx::arg("this"));
    t.method("Clone", [](G4Hype const* a)->G4VSolid * { return a->Clone(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Hype::GetCubicVolume() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Hype::GetCubicVolume()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:123:14
    t.method("GetCubicVolume", [](G4Hype& a)->G4double { return a.GetCubicVolume(); }, jlcxx::arg("this"));
    t.method("GetCubicVolume", [](G4Hype* a)->G4double { return a->GetCubicVolume(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Hype::GetSurfaceArea() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Hype::GetSurfaceArea()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:124:14
    t.method("GetSurfaceArea", [](G4Hype& a)->G4double { return a.GetSurfaceArea(); }, jlcxx::arg("this"));
    t.method("GetSurfaceArea", [](G4Hype* a)->G4double { return a->GetSurfaceArea(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4Hype::GetPointOnSurface() (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4Hype::GetPointOnSurface()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:126:19
    t.method("GetPointOnSurface", [](G4Hype const& a)->G4ThreeVector { return a.GetPointOnSurface(); }, jlcxx::arg("this"));
    t.method("GetPointOnSurface", [](G4Hype const* a)->G4ThreeVector { return a->GetPointOnSurface(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4Polyhedron * G4Hype::CreatePolyhedron() (" __HERE__ ")");
    // signature to use in the veto list: G4Polyhedron * G4Hype::CreatePolyhedron()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:130:19
    t.method("CreatePolyhedron", [](G4Hype const& a)->G4Polyhedron * { return a.CreatePolyhedron(); }, jlcxx::arg("this"));
    t.method("CreatePolyhedron", [](G4Hype const* a)->G4Polyhedron * { return a->CreatePolyhedron(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4Polyhedron * G4Hype::GetPolyhedron() (" __HERE__ ")");
    // signature to use in the veto list: G4Polyhedron * G4Hype::GetPolyhedron()
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:131:19
    t.method("GetPolyhedron", [](G4Hype const& a)->G4Polyhedron * { return a.GetPolyhedron(); }, jlcxx::arg("this"));
    t.method("GetPolyhedron", [](G4Hype const* a)->G4Polyhedron * { return a->GetPolyhedron(); }, jlcxx::arg("this"));


    DEBUG_MSG("Adding wrapper for void G4Hype::G4Hype(const G4Hype &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:138:5
    t.constructor<const G4Hype &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("rhs")    );

    DEBUG_MSG("Adding wrapper for G4Hype & G4Hype::operator=(const G4Hype &) (" __HERE__ ")");
    // signature to use in the veto list: G4Hype & G4Hype::operator=(const G4Hype &)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4Hype.hh:139:13
    t.method("assign", [](G4Hype& a, const G4Hype & arg0)->G4Hype & { return a.operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("rhs"));
    t.method("assign", [](G4Hype* a, const G4Hype & arg0)->G4Hype & { return a->operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("rhs"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4Hype>> type_;
};
std::shared_ptr<Wrapper> newJlG4Hype(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4Hype(module));
}
