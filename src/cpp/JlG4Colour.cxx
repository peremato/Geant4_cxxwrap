// this file was auto-generated by wrapit 
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4Colour> : std::false_type { };
  template<> struct DefaultConstructible<G4Colour> : std::false_type { };
}

// Class generating the wrapper for type G4Colour
// signature to use in the veto file: G4Colour
struct JlG4Colour: public Wrapper {

  JlG4Colour(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4Colour (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:82:7
    jlcxx::TypeWrapper<G4Colour>  t = jlModule.add_type<G4Colour>("G4Colour");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4Colour>>(new jlcxx::TypeWrapper<G4Colour>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void G4Colour::G4Colour(G4double, G4double, G4double, G4double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:88:3
    t.constructor<G4double>(/*finalize=*/true);
    t.constructor<G4double, G4double>(/*finalize=*/true);
    t.constructor<G4double, G4double, G4double>(/*finalize=*/true);
    t.constructor<G4double, G4double, G4double, G4double>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void G4Colour::G4Colour(G4ThreeVector) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:91:3
    t.constructor<G4ThreeVector>(/*finalize=*/true);
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for G4bool G4Colour::operator!=(const G4Colour &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4Colour::operator!=(const G4Colour &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:98:10
    t.method("!=", static_cast<G4bool (G4Colour::*)(const G4Colour &)  const>(&G4Colour::operator!=));

    DEBUG_MSG("Adding wrapper for G4bool G4Colour::operator==(const G4Colour &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4Colour::operator==(const G4Colour &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:99:10
    t.method("==", static_cast<G4bool (G4Colour::*)(const G4Colour &)  const>(&G4Colour::operator==));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for G4Colour & G4Colour::operator+=(const G4Colour &) (" __HERE__ ")");
    // signature to use in the veto list: G4Colour & G4Colour::operator+=(const G4Colour &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:101:13
    t.method("add!", static_cast<G4Colour & (G4Colour::*)(const G4Colour &) >(&G4Colour::operator+=));

    DEBUG_MSG("Adding wrapper for G4double G4Colour::GetRed() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Colour::GetRed()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:107:12
    t.method("GetRed", static_cast<G4double (G4Colour::*)()  const>(&G4Colour::GetRed));

    DEBUG_MSG("Adding wrapper for G4double G4Colour::GetGreen() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Colour::GetGreen()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:108:12
    t.method("GetGreen", static_cast<G4double (G4Colour::*)()  const>(&G4Colour::GetGreen));

    DEBUG_MSG("Adding wrapper for G4double G4Colour::GetBlue() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Colour::GetBlue()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:109:12
    t.method("GetBlue", static_cast<G4double (G4Colour::*)()  const>(&G4Colour::GetBlue));

    DEBUG_MSG("Adding wrapper for G4double G4Colour::GetAlpha() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Colour::GetAlpha()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:110:12
    t.method("GetAlpha", static_cast<G4double (G4Colour::*)()  const>(&G4Colour::GetAlpha));

    DEBUG_MSG("Adding wrapper for void G4Colour::SetRed(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Colour::SetRed(G4double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:112:8
    t.method("SetRed", static_cast<void (G4Colour::*)(G4double) >(&G4Colour::SetRed));

    DEBUG_MSG("Adding wrapper for void G4Colour::SetGreen(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Colour::SetGreen(G4double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:113:8
    t.method("SetGreen", static_cast<void (G4Colour::*)(G4double) >(&G4Colour::SetGreen));

    DEBUG_MSG("Adding wrapper for void G4Colour::SetBlue(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Colour::SetBlue(G4double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:114:8
    t.method("SetBlue", static_cast<void (G4Colour::*)(G4double) >(&G4Colour::SetBlue));

    DEBUG_MSG("Adding wrapper for void G4Colour::SetAlpha(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Colour::SetAlpha(G4double)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:115:8
    t.method("SetAlpha", static_cast<void (G4Colour::*)(G4double) >(&G4Colour::SetAlpha));

    DEBUG_MSG("Adding wrapper for G4Colour G4Colour::White() (" __HERE__ ")");
    // signature to use in the veto list: G4Colour G4Colour::White()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:117:19
    t.method("G4Colour!White", static_cast<G4Colour (*)() >(&G4Colour::White));

    DEBUG_MSG("Adding wrapper for G4Colour G4Colour::Gray() (" __HERE__ ")");
    // signature to use in the veto list: G4Colour G4Colour::Gray()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:118:19
    t.method("G4Colour!Gray", static_cast<G4Colour (*)() >(&G4Colour::Gray));

    DEBUG_MSG("Adding wrapper for G4Colour G4Colour::Grey() (" __HERE__ ")");
    // signature to use in the veto list: G4Colour G4Colour::Grey()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:119:19
    t.method("G4Colour!Grey", static_cast<G4Colour (*)() >(&G4Colour::Grey));

    DEBUG_MSG("Adding wrapper for G4Colour G4Colour::Black() (" __HERE__ ")");
    // signature to use in the veto list: G4Colour G4Colour::Black()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:120:19
    t.method("G4Colour!Black", static_cast<G4Colour (*)() >(&G4Colour::Black));

    DEBUG_MSG("Adding wrapper for G4Colour G4Colour::Brown() (" __HERE__ ")");
    // signature to use in the veto list: G4Colour G4Colour::Brown()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:121:19
    t.method("G4Colour!Brown", static_cast<G4Colour (*)() >(&G4Colour::Brown));

    DEBUG_MSG("Adding wrapper for G4Colour G4Colour::Red() (" __HERE__ ")");
    // signature to use in the veto list: G4Colour G4Colour::Red()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:122:19
    t.method("G4Colour!Red", static_cast<G4Colour (*)() >(&G4Colour::Red));

    DEBUG_MSG("Adding wrapper for G4Colour G4Colour::Green() (" __HERE__ ")");
    // signature to use in the veto list: G4Colour G4Colour::Green()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:123:19
    t.method("G4Colour!Green", static_cast<G4Colour (*)() >(&G4Colour::Green));

    DEBUG_MSG("Adding wrapper for G4Colour G4Colour::Blue() (" __HERE__ ")");
    // signature to use in the veto list: G4Colour G4Colour::Blue()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:124:19
    t.method("G4Colour!Blue", static_cast<G4Colour (*)() >(&G4Colour::Blue));

    DEBUG_MSG("Adding wrapper for G4Colour G4Colour::Cyan() (" __HERE__ ")");
    // signature to use in the veto list: G4Colour G4Colour::Cyan()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:125:19
    t.method("G4Colour!Cyan", static_cast<G4Colour (*)() >(&G4Colour::Cyan));

    DEBUG_MSG("Adding wrapper for G4Colour G4Colour::Magenta() (" __HERE__ ")");
    // signature to use in the veto list: G4Colour G4Colour::Magenta()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:126:19
    t.method("G4Colour!Magenta", static_cast<G4Colour (*)() >(&G4Colour::Magenta));

    DEBUG_MSG("Adding wrapper for G4Colour G4Colour::Yellow() (" __HERE__ ")");
    // signature to use in the veto list: G4Colour G4Colour::Yellow()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:127:19
    t.method("G4Colour!Yellow", static_cast<G4Colour (*)() >(&G4Colour::Yellow));

    DEBUG_MSG("Adding wrapper for G4bool G4Colour::GetColour(const G4String &, G4Colour &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4Colour::GetColour(const G4String &, G4Colour &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:129:17
    t.method("G4Colour!GetColour", static_cast<G4bool (*)(const G4String &, G4Colour &) >(&G4Colour::GetColour));

    DEBUG_MSG("Adding wrapper for void G4Colour::AddToMap(const G4String &, const G4Colour &) (" __HERE__ ")");
    // signature to use in the veto list: void G4Colour::AddToMap(const G4String &, const G4Colour &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:135:15
    t.method("G4Colour!AddToMap", static_cast<void (*)(const G4String &, const G4Colour &) >(&G4Colour::AddToMap));

    DEBUG_MSG("Adding wrapper for void G4Colour::InitialiseColourMap() (" __HERE__ ")");
    // signature to use in the veto list: void G4Colour::InitialiseColourMap()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:139:15
    t.method("G4Colour!InitialiseColourMap", static_cast<void (*)() >(&G4Colour::InitialiseColourMap));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for G4bool G4Colour::operator<(const G4Colour &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4Colour::operator<(const G4Colour &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4Colour.hh:142:10
    t.method("<", static_cast<G4bool (G4Colour::*)(const G4Colour &)  const>(&G4Colour::operator<));

    module_.unset_override_module();
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4Colour>> type_;
};
std::shared_ptr<Wrapper> newJlG4Colour(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4Colour(module));
}
