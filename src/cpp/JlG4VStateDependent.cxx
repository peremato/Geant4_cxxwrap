// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4VStateDependent> : std::false_type { };
  template<> struct DefaultConstructible<G4VStateDependent> : std::false_type { };
}

// Class generating the wrapper for type G4VStateDependent
// signature to use in the veto file: G4VStateDependent
struct JlG4VStateDependent: public Wrapper {

  JlG4VStateDependent(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4VStateDependent (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VStateDependent.hh:46:7
    jlcxx::TypeWrapper<G4VStateDependent>  t = jlModule.add_type<G4VStateDependent>("G4VStateDependent");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4VStateDependent>>(new jlcxx::TypeWrapper<G4VStateDependent>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for G4bool G4VStateDependent::operator==(const G4VStateDependent &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4VStateDependent::operator==(const G4VStateDependent &)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VStateDependent.hh:51:10
    t.method("==", [](G4VStateDependent const& a, const G4VStateDependent & arg0)->G4bool { return a.operator==(arg0); }, jlcxx::arg("this"), jlcxx::arg("right"));
    t.method("==", [](G4VStateDependent const* a, const G4VStateDependent & arg0)->G4bool { return a->operator==(arg0); }, jlcxx::arg("this"), jlcxx::arg("right"));

    DEBUG_MSG("Adding wrapper for G4bool G4VStateDependent::operator!=(const G4VStateDependent &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4VStateDependent::operator!=(const G4VStateDependent &)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VStateDependent.hh:52:10
    t.method("!=", [](G4VStateDependent const& a, const G4VStateDependent & arg0)->G4bool { return a.operator!=(arg0); }, jlcxx::arg("this"), jlcxx::arg("right"));
    t.method("!=", [](G4VStateDependent const* a, const G4VStateDependent & arg0)->G4bool { return a->operator!=(arg0); }, jlcxx::arg("this"), jlcxx::arg("right"));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for G4bool G4VStateDependent::Notify(G4ApplicationState) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4VStateDependent::Notify(G4ApplicationState)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VStateDependent.hh:54:18
    t.method("Notify", [](G4VStateDependent& a, G4ApplicationState arg0)->G4bool { return a.Notify(arg0); }, jlcxx::arg("this"), jlcxx::arg("requestedState"));
    t.method("Notify", [](G4VStateDependent* a, G4ApplicationState arg0)->G4bool { return a->Notify(arg0); }, jlcxx::arg("this"), jlcxx::arg("requestedState"));

    DEBUG_MSG("Adding wrapper for void G4VStateDependent::NotifyDeletion(const G4Event *) (" __HERE__ ")");
    // signature to use in the veto list: void G4VStateDependent::NotifyDeletion(const G4Event *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VStateDependent.hh:61:16
    t.method("NotifyDeletion", [](G4VStateDependent& a, const G4Event * arg0)->void { a.NotifyDeletion(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("NotifyDeletion", [](G4VStateDependent* a, const G4Event * arg0)->void { a->NotifyDeletion(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for void G4VStateDependent::NotifyDeletion(const G4Run *) (" __HERE__ ")");
    // signature to use in the veto list: void G4VStateDependent::NotifyDeletion(const G4Run *)
    // defined in /Users/mato/.julia/artifacts/40f6fc0de669f0d3e0a749c73a29fe79804135d5/include/Geant4/G4VStateDependent.hh:62:16
    t.method("NotifyDeletion", [](G4VStateDependent& a, const G4Run * arg0)->void { a.NotifyDeletion(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("NotifyDeletion", [](G4VStateDependent* a, const G4Run * arg0)->void { a->NotifyDeletion(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4VStateDependent>> type_;
};
std::shared_ptr<Wrapper> newJlG4VStateDependent(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4VStateDependent(module));
}
