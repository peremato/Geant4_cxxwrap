// this file was auto-generated by wrapit v1.3.1-15-g5168a24
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4UserSteppingAction> : std::false_type { };
  template<> struct DefaultConstructible<G4UserSteppingAction> : std::false_type { };
}

// Class generating the wrapper for type G4UserSteppingAction
// signature to use in the veto file: G4UserSteppingAction
struct JlG4UserSteppingAction: public Wrapper {

  JlG4UserSteppingAction(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4UserSteppingAction (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4UserSteppingAction.hh:44:7
    jlcxx::TypeWrapper<G4UserSteppingAction>  t = jlModule.add_type<G4UserSteppingAction>("G4UserSteppingAction");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4UserSteppingAction>>(new jlcxx::TypeWrapper<G4UserSteppingAction>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for void G4UserSteppingAction::SetSteppingManagerPointer(G4SteppingManager *) (" __HERE__ ")");
    // signature to use in the veto list: void G4UserSteppingAction::SetSteppingManagerPointer(G4SteppingManager *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4UserSteppingAction.hh:54:16
    t.method("SetSteppingManagerPointer", static_cast<void (G4UserSteppingAction::*)(G4SteppingManager *) >(&G4UserSteppingAction::SetSteppingManagerPointer));

    DEBUG_MSG("Adding wrapper for void G4UserSteppingAction::UserSteppingAction(const G4Step *) (" __HERE__ ")");
    // signature to use in the veto list: void G4UserSteppingAction::UserSteppingAction(const G4Step *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4UserSteppingAction.hh:55:16
    t.method("UserSteppingAction", static_cast<void (G4UserSteppingAction::*)(const G4Step *) >(&G4UserSteppingAction::UserSteppingAction));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4UserSteppingAction>> type_;
};
std::shared_ptr<Wrapper> newJlG4UserSteppingAction(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4UserSteppingAction(module));
}
