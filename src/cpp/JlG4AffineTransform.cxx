// this file was auto-generated by wrapit 
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4AffineTransform> : std::false_type { };
  template<> struct DefaultConstructible<G4AffineTransform> : std::false_type { };
}

// Class generating the wrapper for type G4AffineTransform
// signature to use in the veto file: G4AffineTransform
struct JlG4AffineTransform: public Wrapper {

  JlG4AffineTransform(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4AffineTransform (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:69:7
    jlcxx::TypeWrapper<G4AffineTransform>  t = jlModule.add_type<G4AffineTransform>("G4AffineTransform");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4AffineTransform>>(new jlcxx::TypeWrapper<G4AffineTransform>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void G4AffineTransform::G4AffineTransform(const G4ThreeVector &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:77:12
    t.constructor<const G4ThreeVector &>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void G4AffineTransform::G4AffineTransform(const G4RotationMatrix &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:80:12
    t.constructor<const G4RotationMatrix &>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void G4AffineTransform::G4AffineTransform(const G4RotationMatrix &, const G4ThreeVector &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:83:12
    t.constructor<const G4RotationMatrix &, const G4ThreeVector &>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void G4AffineTransform::G4AffineTransform(const G4RotationMatrix *, const G4ThreeVector &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:87:12
    t.constructor<const G4RotationMatrix *, const G4ThreeVector &>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void G4AffineTransform::G4AffineTransform(const G4AffineTransform &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:91:12
    t.constructor<const G4AffineTransform &>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for G4AffineTransform & G4AffineTransform::operator=(const G4AffineTransform &) (" __HERE__ ")");
    // signature to use in the veto list: G4AffineTransform & G4AffineTransform::operator=(const G4AffineTransform &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:95:31
    t.method("assign", static_cast<G4AffineTransform & (G4AffineTransform::*)(const G4AffineTransform &) >(&G4AffineTransform::operator=));

    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for G4AffineTransform G4AffineTransform::operator*(const G4AffineTransform &) (" __HERE__ ")");
    // signature to use in the veto list: G4AffineTransform G4AffineTransform::operator*(const G4AffineTransform &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:102:30
    t.method("*", static_cast<G4AffineTransform (G4AffineTransform::*)(const G4AffineTransform &)  const>(&G4AffineTransform::operator*));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for G4AffineTransform & G4AffineTransform::operator*=(const G4AffineTransform &) (" __HERE__ ")");
    // signature to use in the veto list: G4AffineTransform & G4AffineTransform::operator*=(const G4AffineTransform &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:107:31
    t.method("mult!", static_cast<G4AffineTransform & (G4AffineTransform::*)(const G4AffineTransform &) >(&G4AffineTransform::operator*=));

    DEBUG_MSG("Adding wrapper for G4AffineTransform & G4AffineTransform::Product(const G4AffineTransform &, const G4AffineTransform &) (" __HERE__ ")");
    // signature to use in the veto list: G4AffineTransform & G4AffineTransform::Product(const G4AffineTransform &, const G4AffineTransform &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:111:31
    t.method("Product", static_cast<G4AffineTransform & (G4AffineTransform::*)(const G4AffineTransform &, const G4AffineTransform &) >(&G4AffineTransform::Product));

    DEBUG_MSG("Adding wrapper for G4AffineTransform & G4AffineTransform::InverseProduct(const G4AffineTransform &, const G4AffineTransform &) (" __HERE__ ")");
    // signature to use in the veto list: G4AffineTransform & G4AffineTransform::InverseProduct(const G4AffineTransform &, const G4AffineTransform &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:118:31
    t.method("InverseProduct", static_cast<G4AffineTransform & (G4AffineTransform::*)(const G4AffineTransform &, const G4AffineTransform &) >(&G4AffineTransform::InverseProduct));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4AffineTransform::TransformPoint(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4AffineTransform::TransformPoint(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:122:26
    t.method("TransformPoint", static_cast<G4ThreeVector (G4AffineTransform::*)(const G4ThreeVector &)  const>(&G4AffineTransform::TransformPoint));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4AffineTransform::InverseTransformPoint(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4AffineTransform::InverseTransformPoint(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:125:26
    t.method("InverseTransformPoint", static_cast<G4ThreeVector (G4AffineTransform::*)(const G4ThreeVector &)  const>(&G4AffineTransform::InverseTransformPoint));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4AffineTransform::TransformAxis(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4AffineTransform::TransformAxis(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:128:26
    t.method("TransformAxis", static_cast<G4ThreeVector (G4AffineTransform::*)(const G4ThreeVector &)  const>(&G4AffineTransform::TransformAxis));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4AffineTransform::InverseTransformAxis(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4AffineTransform::InverseTransformAxis(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:131:26
    t.method("InverseTransformAxis", static_cast<G4ThreeVector (G4AffineTransform::*)(const G4ThreeVector &)  const>(&G4AffineTransform::InverseTransformAxis));

    DEBUG_MSG("Adding wrapper for void G4AffineTransform::ApplyPointTransform(G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: void G4AffineTransform::ApplyPointTransform(G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:134:17
    t.method("ApplyPointTransform", static_cast<void (G4AffineTransform::*)(G4ThreeVector &)  const>(&G4AffineTransform::ApplyPointTransform));

    DEBUG_MSG("Adding wrapper for void G4AffineTransform::ApplyAxisTransform(G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: void G4AffineTransform::ApplyAxisTransform(G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:137:17
    t.method("ApplyAxisTransform", static_cast<void (G4AffineTransform::*)(G4ThreeVector &)  const>(&G4AffineTransform::ApplyAxisTransform));

    DEBUG_MSG("Adding wrapper for G4AffineTransform G4AffineTransform::Inverse() (" __HERE__ ")");
    // signature to use in the veto list: G4AffineTransform G4AffineTransform::Inverse()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:140:30
    t.method("Inverse", static_cast<G4AffineTransform (G4AffineTransform::*)()  const>(&G4AffineTransform::Inverse));

    DEBUG_MSG("Adding wrapper for G4AffineTransform & G4AffineTransform::Invert() (" __HERE__ ")");
    // signature to use in the veto list: G4AffineTransform & G4AffineTransform::Invert()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:143:31
    t.method("Invert", static_cast<G4AffineTransform & (G4AffineTransform::*)() >(&G4AffineTransform::Invert));

    DEBUG_MSG("Adding wrapper for G4AffineTransform & G4AffineTransform::operator+=(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4AffineTransform & G4AffineTransform::operator+=(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:146:31
    t.method("add!", static_cast<G4AffineTransform & (G4AffineTransform::*)(const G4ThreeVector &) >(&G4AffineTransform::operator+=));

    DEBUG_MSG("Adding wrapper for G4AffineTransform & G4AffineTransform::operator-=(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4AffineTransform & G4AffineTransform::operator-=(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:147:31
    t.method("sub!", static_cast<G4AffineTransform & (G4AffineTransform::*)(const G4ThreeVector &) >(&G4AffineTransform::operator-=));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for G4bool G4AffineTransform::operator==(const G4AffineTransform &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4AffineTransform::operator==(const G4AffineTransform &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:151:19
    t.method("==", static_cast<G4bool (G4AffineTransform::*)(const G4AffineTransform &)  const>(&G4AffineTransform::operator==));

    DEBUG_MSG("Adding wrapper for G4bool G4AffineTransform::operator!=(const G4AffineTransform &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4AffineTransform::operator!=(const G4AffineTransform &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:152:19
    t.method("!=", static_cast<G4bool (G4AffineTransform::*)(const G4AffineTransform &)  const>(&G4AffineTransform::operator!=));


    DEBUG_MSG("Adding getindex method to wrap G4double G4AffineTransform::operator[](const G4int) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:154:21
    t.method("getindex",
      [](G4AffineTransform& a, const G4int i){
      return a[i];
    });

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for G4bool G4AffineTransform::IsRotated() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4AffineTransform::IsRotated()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:156:19
    t.method("IsRotated", static_cast<G4bool (G4AffineTransform::*)()  const>(&G4AffineTransform::IsRotated));

    DEBUG_MSG("Adding wrapper for G4bool G4AffineTransform::IsTranslated() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4AffineTransform::IsTranslated()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:159:19
    t.method("IsTranslated", static_cast<G4bool (G4AffineTransform::*)()  const>(&G4AffineTransform::IsTranslated));

    DEBUG_MSG("Adding wrapper for G4RotationMatrix G4AffineTransform::NetRotation() (" __HERE__ ")");
    // signature to use in the veto list: G4RotationMatrix G4AffineTransform::NetRotation()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:162:29
    t.method("NetRotation", static_cast<G4RotationMatrix (G4AffineTransform::*)()  const>(&G4AffineTransform::NetRotation));

    DEBUG_MSG("Adding wrapper for G4RotationMatrix G4AffineTransform::InverseNetRotation() (" __HERE__ ")");
    // signature to use in the veto list: G4RotationMatrix G4AffineTransform::InverseNetRotation()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:164:29
    t.method("InverseNetRotation", static_cast<G4RotationMatrix (G4AffineTransform::*)()  const>(&G4AffineTransform::InverseNetRotation));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4AffineTransform::NetTranslation() (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4AffineTransform::NetTranslation()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:166:26
    t.method("NetTranslation", static_cast<G4ThreeVector (G4AffineTransform::*)()  const>(&G4AffineTransform::NetTranslation));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4AffineTransform::InverseNetTranslation() (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4AffineTransform::InverseNetTranslation()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:168:26
    t.method("InverseNetTranslation", static_cast<G4ThreeVector (G4AffineTransform::*)()  const>(&G4AffineTransform::InverseNetTranslation));

    DEBUG_MSG("Adding wrapper for void G4AffineTransform::SetNetRotation(const G4RotationMatrix &) (" __HERE__ ")");
    // signature to use in the veto list: void G4AffineTransform::SetNetRotation(const G4RotationMatrix &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:170:17
    t.method("SetNetRotation", static_cast<void (G4AffineTransform::*)(const G4RotationMatrix &) >(&G4AffineTransform::SetNetRotation));

    DEBUG_MSG("Adding wrapper for void G4AffineTransform::SetNetTranslation(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: void G4AffineTransform::SetNetTranslation(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4AffineTransform.hh:172:17
    t.method("SetNetTranslation", static_cast<void (G4AffineTransform::*)(const G4ThreeVector &) >(&G4AffineTransform::SetNetTranslation));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4AffineTransform>> type_;
};
std::shared_ptr<Wrapper> newJlG4AffineTransform(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4AffineTransform(module));
}
