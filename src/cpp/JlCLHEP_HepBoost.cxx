// this file was auto-generated by wrapit v1.3.1-15-g5168a24
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<CLHEP::HepBoost> : std::false_type { };
  template<> struct DefaultConstructible<CLHEP::HepBoost> : std::false_type { };
}

// Class generating the wrapper for type CLHEP::HepBoost
// signature to use in the veto file: CLHEP::HepBoost
struct JlCLHEP_HepBoost: public Wrapper {

  JlCLHEP_HepBoost(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type CLHEP::HepBoost (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:38:7
    jlcxx::TypeWrapper<CLHEP::HepBoost>  t = jlModule.add_type<CLHEP::HepBoost>("CLHEP!HepBoost");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<CLHEP::HepBoost>>(new jlcxx::TypeWrapper<CLHEP::HepBoost>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void CLHEP::HepBoost::HepBoost(const CLHEP::HepBoost &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:47:10
    t.constructor<const CLHEP::HepBoost &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for CLHEP::HepBoost & CLHEP::HepBoost::operator=(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepBoost & CLHEP::HepBoost::operator=(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:51:21
    t.method("assign", static_cast<CLHEP::HepBoost & (CLHEP::HepBoost::*)(const CLHEP::HepBoost &) >(&CLHEP::HepBoost::operator=));


    DEBUG_MSG("Adding wrapper for CLHEP::HepBoost & CLHEP::HepBoost::set(double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepBoost & CLHEP::HepBoost::set(double, double, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:55:21
    t.method("set", static_cast<CLHEP::HepBoost & (CLHEP::HepBoost::*)(double, double, double) >(&CLHEP::HepBoost::set));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepBoost::HepBoost(double, double, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:56:10
    t.constructor<double, double, double>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for CLHEP::HepBoost & CLHEP::HepBoost::set(const CLHEP::HepRep4x4Symmetric &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepBoost & CLHEP::HepBoost::set(const CLHEP::HepRep4x4Symmetric &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:59:21
    t.method("set", static_cast<CLHEP::HepBoost & (CLHEP::HepBoost::*)(const CLHEP::HepRep4x4Symmetric &) >(&CLHEP::HepBoost::set));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepBoost::HepBoost(const CLHEP::HepRep4x4Symmetric &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:60:10
    t.constructor<const CLHEP::HepRep4x4Symmetric &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for CLHEP::HepBoost & CLHEP::HepBoost::set(CLHEP::Hep3Vector, double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepBoost & CLHEP::HepBoost::set(CLHEP::Hep3Vector, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:63:21
    t.method("set", static_cast<CLHEP::HepBoost & (CLHEP::HepBoost::*)(CLHEP::Hep3Vector, double) >(&CLHEP::HepBoost::set));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepBoost::HepBoost(CLHEP::Hep3Vector, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:64:10
    t.constructor<CLHEP::Hep3Vector, double>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for CLHEP::HepBoost & CLHEP::HepBoost::set(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepBoost & CLHEP::HepBoost::set(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:67:21
    t.method("set", static_cast<CLHEP::HepBoost & (CLHEP::HepBoost::*)(const CLHEP::Hep3Vector &) >(&CLHEP::HepBoost::set));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepBoost::HepBoost(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:68:10
    t.constructor<const CLHEP::Hep3Vector &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for CLHEP::HepBoost & CLHEP::HepBoost::set(const CLHEP::HepBoostX &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepBoost & CLHEP::HepBoost::set(const CLHEP::HepBoostX &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:71:21
    t.method("set", static_cast<CLHEP::HepBoost & (CLHEP::HepBoost::*)(const CLHEP::HepBoostX &) >(&CLHEP::HepBoost::set));

    DEBUG_MSG("Adding wrapper for CLHEP::HepBoost & CLHEP::HepBoost::set(const CLHEP::HepBoostY &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepBoost & CLHEP::HepBoost::set(const CLHEP::HepBoostY &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:72:21
    t.method("set", static_cast<CLHEP::HepBoost & (CLHEP::HepBoost::*)(const CLHEP::HepBoostY &) >(&CLHEP::HepBoost::set));

    DEBUG_MSG("Adding wrapper for CLHEP::HepBoost & CLHEP::HepBoost::set(const CLHEP::HepBoostZ &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepBoost & CLHEP::HepBoost::set(const CLHEP::HepBoostZ &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:73:21
    t.method("set", static_cast<CLHEP::HepBoost & (CLHEP::HepBoost::*)(const CLHEP::HepBoostZ &) >(&CLHEP::HepBoost::set));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepBoost::HepBoost(const CLHEP::HepBoostX &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:74:10
    t.constructor<const CLHEP::HepBoostX &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void CLHEP::HepBoost::HepBoost(const CLHEP::HepBoostY &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:75:10
    t.constructor<const CLHEP::HepBoostY &>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void CLHEP::HepBoost::HepBoost(const CLHEP::HepBoostZ &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:76:10
    t.constructor<const CLHEP::HepBoostZ &>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::beta() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::beta()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:80:18
    t.method("beta", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::beta));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::gamma() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::gamma()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:81:18
    t.method("gamma", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::gamma));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::HepBoost::boostVector() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::HepBoost::boostVector()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:82:21
    t.method("boostVector", static_cast<CLHEP::Hep3Vector (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::boostVector));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::HepBoost::getDirection() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::HepBoost::getDirection()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:83:21
    t.method("getDirection", static_cast<CLHEP::Hep3Vector (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::getDirection));

    DEBUG_MSG("Adding wrapper for CLHEP::Hep3Vector CLHEP::HepBoost::direction() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::Hep3Vector CLHEP::HepBoost::direction()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:84:21
    t.method("direction", static_cast<CLHEP::Hep3Vector (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::direction));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::xx() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::xx()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:86:17
    t.method("xx", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::xx));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::xy() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::xy()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:87:17
    t.method("xy", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::xy));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::xz() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::xz()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:88:17
    t.method("xz", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::xz));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::xt() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::xt()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:89:17
    t.method("xt", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::xt));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::yx() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::yx()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:90:17
    t.method("yx", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::yx));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::yy() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::yy()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:91:17
    t.method("yy", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::yy));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::yz() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::yz()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:92:17
    t.method("yz", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::yz));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::yt() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::yt()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:93:17
    t.method("yt", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::yt));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::zx() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::zx()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:94:17
    t.method("zx", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::zx));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::zy() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::zy()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:95:17
    t.method("zy", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::zy));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::zz() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::zz()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:96:17
    t.method("zz", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::zz));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::zt() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::zt()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:97:17
    t.method("zt", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::zt));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::tx() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::tx()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:98:17
    t.method("tx", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::tx));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::ty() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::ty()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:99:17
    t.method("ty", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::ty));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::tz() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::tz()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:100:17
    t.method("tz", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::tz));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::tt() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::tt()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:101:17
    t.method("tt", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::tt));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepBoost::col1() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepBoost::col1()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:104:27
    t.method("col1", static_cast<CLHEP::HepLorentzVector (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::col1));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepBoost::col2() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepBoost::col2()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:105:27
    t.method("col2", static_cast<CLHEP::HepLorentzVector (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::col2));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepBoost::col3() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepBoost::col3()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:106:27
    t.method("col3", static_cast<CLHEP::HepLorentzVector (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::col3));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepBoost::col4() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepBoost::col4()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:107:27
    t.method("col4", static_cast<CLHEP::HepLorentzVector (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::col4));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepBoost::row1() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepBoost::row1()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:110:27
    t.method("row1", static_cast<CLHEP::HepLorentzVector (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::row1));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepBoost::row2() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepBoost::row2()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:111:27
    t.method("row2", static_cast<CLHEP::HepLorentzVector (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::row2));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepBoost::row3() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepBoost::row3()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:112:27
    t.method("row3", static_cast<CLHEP::HepLorentzVector (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::row3));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepBoost::row4() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepBoost::row4()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:113:27
    t.method("row4", static_cast<CLHEP::HepLorentzVector (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::row4));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRep4x4 CLHEP::HepBoost::rep4x4() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRep4x4 CLHEP::HepBoost::rep4x4()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:116:20
    t.method("rep4x4", static_cast<CLHEP::HepRep4x4 (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::rep4x4));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRep4x4Symmetric CLHEP::HepBoost::rep4x4Symmetric() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRep4x4Symmetric CLHEP::HepBoost::rep4x4Symmetric()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:119:29
    t.method("rep4x4Symmetric", static_cast<CLHEP::HepRep4x4Symmetric (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::rep4x4Symmetric));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepBoost::decompose(CLHEP::HepRotation &, CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepBoost::decompose(CLHEP::HepRotation &, CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:124:8
    t.method("decompose", static_cast<void (CLHEP::HepBoost::*)(CLHEP::HepRotation &, CLHEP::HepBoost &)  const>(&CLHEP::HepBoost::decompose));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepBoost::decompose(CLHEP::HepAxisAngle &, CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepBoost::decompose(CLHEP::HepAxisAngle &, CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:125:8
    t.method("decompose", static_cast<void (CLHEP::HepBoost::*)(CLHEP::HepAxisAngle &, CLHEP::Hep3Vector &)  const>(&CLHEP::HepBoost::decompose));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepBoost::decompose(CLHEP::HepBoost &, CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepBoost::decompose(CLHEP::HepBoost &, CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:128:8
    t.method("decompose", static_cast<void (CLHEP::HepBoost::*)(CLHEP::HepBoost &, CLHEP::HepRotation &)  const>(&CLHEP::HepBoost::decompose));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepBoost::decompose(CLHEP::Hep3Vector &, CLHEP::HepAxisAngle &) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepBoost::decompose(CLHEP::Hep3Vector &, CLHEP::HepAxisAngle &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:129:8
    t.method("decompose", static_cast<void (CLHEP::HepBoost::*)(CLHEP::Hep3Vector &, CLHEP::HepAxisAngle &)  const>(&CLHEP::HepBoost::decompose));

    DEBUG_MSG("Adding wrapper for int CLHEP::HepBoost::compare(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: int CLHEP::HepBoost::compare(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:134:14
    t.method("compare", static_cast<int (CLHEP::HepBoost::*)(const CLHEP::HepBoost &)  const>(&CLHEP::HepBoost::compare));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepBoost::operator==(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepBoost::operator==(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:138:15
    t.method("==", static_cast<bool (CLHEP::HepBoost::*)(const CLHEP::HepBoost &)  const>(&CLHEP::HepBoost::operator==));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepBoost::operator!=(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepBoost::operator!=(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:139:15
    t.method("!=", static_cast<bool (CLHEP::HepBoost::*)(const CLHEP::HepBoost &)  const>(&CLHEP::HepBoost::operator!=));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepBoost::operator<=(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepBoost::operator<=(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:140:15
    t.method("<=", static_cast<bool (CLHEP::HepBoost::*)(const CLHEP::HepBoost &)  const>(&CLHEP::HepBoost::operator<=));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepBoost::operator>=(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepBoost::operator>=(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:141:15
    t.method(">=", static_cast<bool (CLHEP::HepBoost::*)(const CLHEP::HepBoost &)  const>(&CLHEP::HepBoost::operator>=));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepBoost::operator<(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepBoost::operator<(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:142:15
    t.method("<", static_cast<bool (CLHEP::HepBoost::*)(const CLHEP::HepBoost &)  const>(&CLHEP::HepBoost::operator<));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepBoost::operator>(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepBoost::operator>(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:143:15
    t.method(">", static_cast<bool (CLHEP::HepBoost::*)(const CLHEP::HepBoost &)  const>(&CLHEP::HepBoost::operator>));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepBoost::isIdentity() (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepBoost::isIdentity()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:146:15
    t.method("isIdentity", static_cast<bool (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::isIdentity));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::distance2(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::distance2(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:149:18
    t.method("distance2", static_cast<double (CLHEP::HepBoost::*)(const CLHEP::HepBoost &)  const>(&CLHEP::HepBoost::distance2));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::distance2(const CLHEP::HepBoostX &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::distance2(const CLHEP::HepBoostX &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:150:18
    t.method("distance2", static_cast<double (CLHEP::HepBoost::*)(const CLHEP::HepBoostX &)  const>(&CLHEP::HepBoost::distance2));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::distance2(const CLHEP::HepBoostY &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::distance2(const CLHEP::HepBoostY &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:151:18
    t.method("distance2", static_cast<double (CLHEP::HepBoost::*)(const CLHEP::HepBoostY &)  const>(&CLHEP::HepBoost::distance2));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::distance2(const CLHEP::HepBoostZ &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::distance2(const CLHEP::HepBoostZ &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:152:18
    t.method("distance2", static_cast<double (CLHEP::HepBoost::*)(const CLHEP::HepBoostZ &)  const>(&CLHEP::HepBoost::distance2));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::distance2(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::distance2(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:155:10
    t.method("distance2", static_cast<double (CLHEP::HepBoost::*)(const CLHEP::HepRotation &)  const>(&CLHEP::HepBoost::distance2));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::distance2(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::distance2(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:156:10
    t.method("distance2", static_cast<double (CLHEP::HepBoost::*)(const CLHEP::HepLorentzRotation &)  const>(&CLHEP::HepBoost::distance2));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::howNear(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::howNear(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:159:17
    t.method("howNear", static_cast<double (CLHEP::HepBoost::*)(const CLHEP::HepBoost &)  const>(&CLHEP::HepBoost::howNear));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepBoost::isNear(const CLHEP::HepBoost &, double) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepBoost::isNear(const CLHEP::HepBoost &, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:160:15
    t.method("isNear", static_cast<bool (CLHEP::HepBoost::*)(const CLHEP::HepBoost &, double)  const>(&CLHEP::HepBoost::isNear));
    t.method("isNear", [](CLHEP::HepBoost const& a, const CLHEP::HepBoost & arg0)->bool { return a.isNear(arg0); });
    t.method("isNear", [](CLHEP::HepBoost const* a, const CLHEP::HepBoost & arg0)->bool { return a->isNear(arg0); });

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::howNear(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::howNear(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:163:10
    t.method("howNear", static_cast<double (CLHEP::HepBoost::*)(const CLHEP::HepRotation &)  const>(&CLHEP::HepBoost::howNear));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::howNear(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::howNear(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:164:10
    t.method("howNear", static_cast<double (CLHEP::HepBoost::*)(const CLHEP::HepLorentzRotation &)  const>(&CLHEP::HepBoost::howNear));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepBoost::isNear(const CLHEP::HepRotation &, double) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepBoost::isNear(const CLHEP::HepRotation &, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:166:8
    t.method("isNear", static_cast<bool (CLHEP::HepBoost::*)(const CLHEP::HepRotation &, double)  const>(&CLHEP::HepBoost::isNear));
    t.method("isNear", [](CLHEP::HepBoost const& a, const CLHEP::HepRotation & arg0)->bool { return a.isNear(arg0); });
    t.method("isNear", [](CLHEP::HepBoost const* a, const CLHEP::HepRotation & arg0)->bool { return a->isNear(arg0); });

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepBoost::isNear(const CLHEP::HepLorentzRotation &, double) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepBoost::isNear(const CLHEP::HepLorentzRotation &, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:168:8
    t.method("isNear", static_cast<bool (CLHEP::HepBoost::*)(const CLHEP::HepLorentzRotation &, double)  const>(&CLHEP::HepBoost::isNear));
    t.method("isNear", [](CLHEP::HepBoost const& a, const CLHEP::HepLorentzRotation & arg0)->bool { return a.isNear(arg0); });
    t.method("isNear", [](CLHEP::HepBoost const* a, const CLHEP::HepLorentzRotation & arg0)->bool { return a->isNear(arg0); });

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::norm2() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::norm2()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:173:10
    t.method("norm2", static_cast<double (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::norm2));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepBoost::rectify() (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepBoost::rectify()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:176:8
    t.method("rectify", static_cast<void (CLHEP::HepBoost::*)() >(&CLHEP::HepBoost::rectify));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepBoost::operator()(const CLHEP::HepLorentzVector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepBoost::operator()(const CLHEP::HepLorentzVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:181:27
    t.method("paren", static_cast<CLHEP::HepLorentzVector (CLHEP::HepBoost::*)(const CLHEP::HepLorentzVector &)  const>(&CLHEP::HepBoost::operator()));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepBoost::operator*(const CLHEP::HepLorentzVector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepBoost::operator*(const CLHEP::HepLorentzVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:184:27
    t.method("*", static_cast<CLHEP::HepLorentzVector (CLHEP::HepBoost::*)(const CLHEP::HepLorentzVector &)  const>(&CLHEP::HepBoost::operator*));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation CLHEP::HepBoost::operator*(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation CLHEP::HepBoost::operator*(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:189:22
    t.method("*", static_cast<CLHEP::HepLorentzRotation (CLHEP::HepBoost::*)(const CLHEP::HepBoost &)  const>(&CLHEP::HepBoost::operator*));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation CLHEP::HepBoost::operator*(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation CLHEP::HepBoost::operator*(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:190:22
    t.method("*", static_cast<CLHEP::HepLorentzRotation (CLHEP::HepBoost::*)(const CLHEP::HepRotation &)  const>(&CLHEP::HepBoost::operator*));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation CLHEP::HepBoost::operator*(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation CLHEP::HepBoost::operator*(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:191:22
    t.method("*", static_cast<CLHEP::HepLorentzRotation (CLHEP::HepBoost::*)(const CLHEP::HepLorentzRotation &)  const>(&CLHEP::HepBoost::operator*));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for CLHEP::HepBoost CLHEP::HepBoost::inverse() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepBoost CLHEP::HepBoost::inverse()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:195:19
    t.method("inverse", static_cast<CLHEP::HepBoost (CLHEP::HepBoost::*)()  const>(&CLHEP::HepBoost::inverse));

    DEBUG_MSG("Adding wrapper for CLHEP::HepBoost & CLHEP::HepBoost::invert() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepBoost & CLHEP::HepBoost::invert()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:201:21
    t.method("invert", static_cast<CLHEP::HepBoost & (CLHEP::HepBoost::*)() >(&CLHEP::HepBoost::invert));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::getTolerance() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::getTolerance()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:211:24
    module_.method("CLHEP!HepBoost!getTolerance", static_cast<double (*)() >(&CLHEP::HepBoost::getTolerance));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepBoost::setTolerance(double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepBoost::setTolerance(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/Boost.h:212:24
    module_.method("CLHEP!HepBoost!setTolerance", static_cast<double (*)(double) >(&CLHEP::HepBoost::setTolerance));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<CLHEP::HepBoost>> type_;
};
std::shared_ptr<Wrapper> newJlCLHEP_HepBoost(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlCLHEP_HepBoost(module));
}
