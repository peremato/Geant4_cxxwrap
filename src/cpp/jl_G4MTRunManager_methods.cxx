// this file was auto-generated by wrapit v0.1.0-54-g4322429
#include <type_traits>
#include "jlcxx/jlcxx.hpp"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

#include "cpp/jlGeant4.h"


#ifdef VERBOSE_IMPORT
#  define DEBUG_MSG(a) std::cerr << a << "\n"
#else
#  define DEBUG_MSG(a)
#endif
#define __HERE__  __FILE__ ":" QUOTE2(__LINE__)
#define QUOTE(arg) #arg
#define QUOTE2(arg) QUOTE(arg)
void add_methods_for_G4MTRunManager(jlcxx::Module& types, jlcxx::TypeWrapper<G4MTRunManager>& t136) {


  /**********************************************************************/
  /* Wrappers for the methods of class G4MTRunManager
   */

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetNumberOfThreads(G4int) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetNumberOfThreads(G4int)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:74:18
  t136.method("SetNumberOfThreads", static_cast<void (G4MTRunManager::*)(G4int) >(&G4MTRunManager::SetNumberOfThreads));

  DEBUG_MSG("Adding wrapper for G4int G4MTRunManager::GetNumberOfThreads() (" __HERE__ ")");
  // signature to use in the veto list: G4int G4MTRunManager::GetNumberOfThreads()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:75:19
  t136.method("GetNumberOfThreads", static_cast<G4int (G4MTRunManager::*)()  const>(&G4MTRunManager::GetNumberOfThreads));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetPinAffinity(G4int) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetPinAffinity(G4int)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:76:10
  t136.method("SetPinAffinity", static_cast<void (G4MTRunManager::*)(G4int) >(&G4MTRunManager::SetPinAffinity));
  t136.method("SetPinAffinity", [](G4MTRunManager& a)->void{ a.SetPinAffinity(); });
  t136.method("SetPinAffinity", [](G4MTRunManager* a)->void{ a->SetPinAffinity(); });

  DEBUG_MSG("Adding wrapper for G4int G4MTRunManager::GetPinAffinity() (" __HERE__ ")");
  // signature to use in the veto list: G4int G4MTRunManager::GetPinAffinity()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:77:18
  t136.method("GetPinAffinity", static_cast<G4int (G4MTRunManager::*)()  const>(&G4MTRunManager::GetPinAffinity));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::Initialize() (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::Initialize()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:80:18
  t136.method("Initialize", static_cast<void (G4MTRunManager::*)() >(&G4MTRunManager::Initialize));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::InitializeEventLoop(G4int, const char *, G4int) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::InitializeEventLoop(G4int, const char *, G4int)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:81:18
  t136.method("InitializeEventLoop", static_cast<void (G4MTRunManager::*)(G4int, const char *, G4int) >(&G4MTRunManager::InitializeEventLoop));
  t136.method("InitializeEventLoop", [](G4MTRunManager& a, G4int arg0)->void{ a.InitializeEventLoop(arg0); });
  t136.method("InitializeEventLoop", [](G4MTRunManager& a, G4int arg0, const char * arg1)->void{ a.InitializeEventLoop(arg0, arg1); });
  t136.method("InitializeEventLoop", [](G4MTRunManager* a, G4int arg0)->void{ a->InitializeEventLoop(arg0); });
  t136.method("InitializeEventLoop", [](G4MTRunManager* a, G4int arg0, const char * arg1)->void{ a->InitializeEventLoop(arg0, arg1); });

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::InitializeThreadPool() (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::InitializeThreadPool()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:83:18
  t136.method("InitializeThreadPool", static_cast<void (G4MTRunManager::*)() >(&G4MTRunManager::InitializeThreadPool));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::TerminateOneEvent() (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::TerminateOneEvent()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:86:18
  t136.method("TerminateOneEvent", static_cast<void (G4MTRunManager::*)() >(&G4MTRunManager::TerminateOneEvent));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::ProcessOneEvent(G4int) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::ProcessOneEvent(G4int)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:87:18
  t136.method("ProcessOneEvent", static_cast<void (G4MTRunManager::*)(G4int) >(&G4MTRunManager::ProcessOneEvent));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::ConstructScoringWorlds() (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::ConstructScoringWorlds()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:88:18
  t136.method("ConstructScoringWorlds", static_cast<void (G4MTRunManager::*)() >(&G4MTRunManager::ConstructScoringWorlds));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::RunTermination() (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::RunTermination()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:89:18
  t136.method("RunTermination", static_cast<void (G4MTRunManager::*)() >(&G4MTRunManager::RunTermination));

  DEBUG_MSG("Adding wrapper for G4bool G4MTRunManager::SetUpAnEvent(G4Event *, long &, long &, long &, G4bool) (" __HERE__ ")");
  // signature to use in the veto list: G4bool G4MTRunManager::SetUpAnEvent(G4Event *, long &, long &, long &, G4bool)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:91:20
  t136.method("SetUpAnEvent", static_cast<G4bool (G4MTRunManager::*)(G4Event *, long &, long &, long &, G4bool) >(&G4MTRunManager::SetUpAnEvent));
  t136.method("SetUpAnEvent", [](G4MTRunManager& a, G4Event * arg0, long & arg1, long & arg2, long & arg3)->G4bool{ return a.SetUpAnEvent(arg0, arg1, arg2, arg3); });
  t136.method("SetUpAnEvent", [](G4MTRunManager* a, G4Event * arg0, long & arg1, long & arg2, long & arg3)->G4bool{ return a->SetUpAnEvent(arg0, arg1, arg2, arg3); });

  DEBUG_MSG("Adding wrapper for std::vector<G4String> G4MTRunManager::GetCommandStack() (" __HERE__ ")");
  // signature to use in the veto list: std::vector<G4String> G4MTRunManager::GetCommandStack()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:111:27
  t136.method("GetCommandStack", static_cast<std::vector<G4String> (G4MTRunManager::*)() >(&G4MTRunManager::GetCommandStack));

  DEBUG_MSG("Adding wrapper for size_t G4MTRunManager::GetNumberActiveThreads() (" __HERE__ ")");
  // signature to use in the veto list: size_t G4MTRunManager::GetNumberActiveThreads()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:116:20
  t136.method("GetNumberActiveThreads", static_cast<size_t (G4MTRunManager::*)()  const>(&G4MTRunManager::GetNumberActiveThreads));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::ThisWorkerReady() (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::ThisWorkerReady()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:124:18
  t136.method("ThisWorkerReady", static_cast<void (G4MTRunManager::*)() >(&G4MTRunManager::ThisWorkerReady));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::ThisWorkerEndEventLoop() (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::ThisWorkerEndEventLoop()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:129:18
  t136.method("ThisWorkerEndEventLoop", static_cast<void (G4MTRunManager::*)() >(&G4MTRunManager::ThisWorkerEndEventLoop));

  DEBUG_MSG("Adding wrapper for G4ScoringManager * G4MTRunManager::GetMasterScoringManager() (" __HERE__ ")");
  // signature to use in the veto list: G4ScoringManager * G4MTRunManager::GetMasterScoringManager()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:133:30
  t136.method("G4MTRunManager!GetMasterScoringManager", static_cast<G4ScoringManager * (*)() >(&G4MTRunManager::GetMasterScoringManager));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::addWorld(G4int, G4VPhysicalVolume *) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::addWorld(G4int, G4VPhysicalVolume *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:135:17
  t136.method("G4MTRunManager!addWorld", static_cast<void (*)(G4int, G4VPhysicalVolume *) >(&G4MTRunManager::addWorld));

  DEBUG_MSG("Adding wrapper for const CLHEP::HepRandomEngine * G4MTRunManager::getMasterRandomEngine() (" __HERE__ ")");
  // signature to use in the veto list: const CLHEP::HepRandomEngine * G4MTRunManager::getMasterRandomEngine()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:137:42
  t136.method("getMasterRandomEngine", static_cast<const CLHEP::HepRandomEngine * (G4MTRunManager::*)()  const>(&G4MTRunManager::getMasterRandomEngine));

  DEBUG_MSG("Adding wrapper for G4MTRunManager * G4MTRunManager::GetMasterRunManager() (" __HERE__ ")");
  // signature to use in the veto list: G4MTRunManager * G4MTRunManager::GetMasterRunManager()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:142:28
  t136.method("G4MTRunManager!GetMasterRunManager", static_cast<G4MTRunManager * (*)() >(&G4MTRunManager::GetMasterRunManager));

  DEBUG_MSG("Adding wrapper for G4RunManagerKernel * G4MTRunManager::GetMasterRunManagerKernel() (" __HERE__ ")");
  // signature to use in the veto list: G4RunManagerKernel * G4MTRunManager::GetMasterRunManagerKernel()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:145:32
  t136.method("G4MTRunManager!GetMasterRunManagerKernel", static_cast<G4RunManagerKernel * (*)() >(&G4MTRunManager::GetMasterRunManagerKernel));

  DEBUG_MSG("Adding wrapper for G4MTRunManagerKernel * G4MTRunManager::GetMTMasterRunManagerKernel() (" __HERE__ ")");
  // signature to use in the veto list: G4MTRunManagerKernel * G4MTRunManager::GetMTMasterRunManagerKernel()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:146:34
  t136.method("G4MTRunManager!GetMTMasterRunManagerKernel", static_cast<G4MTRunManagerKernel * (*)() >(&G4MTRunManager::GetMTMasterRunManagerKernel));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetUserInitialization(G4VUserPhysicsList *) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetUserInitialization(G4VUserPhysicsList *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:150:18
  t136.method("SetUserInitialization", static_cast<void (G4MTRunManager::*)(G4VUserPhysicsList *) >(&G4MTRunManager::SetUserInitialization));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetUserInitialization(G4VUserDetectorConstruction *) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetUserInitialization(G4VUserDetectorConstruction *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:151:18
  t136.method("SetUserInitialization", static_cast<void (G4MTRunManager::*)(G4VUserDetectorConstruction *) >(&G4MTRunManager::SetUserInitialization));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetUserInitialization(G4UserWorkerInitialization *) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetUserInitialization(G4UserWorkerInitialization *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:152:18
  t136.method("SetUserInitialization", static_cast<void (G4MTRunManager::*)(G4UserWorkerInitialization *) >(&G4MTRunManager::SetUserInitialization));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetUserInitialization(G4VUserActionInitialization *) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetUserInitialization(G4VUserActionInitialization *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:154:18
  t136.method("SetUserInitialization", static_cast<void (G4MTRunManager::*)(G4VUserActionInitialization *) >(&G4MTRunManager::SetUserInitialization));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetUserAction(G4UserRunAction *) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetUserAction(G4UserRunAction *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:155:18
  t136.method("SetUserAction", static_cast<void (G4MTRunManager::*)(G4UserRunAction *) >(&G4MTRunManager::SetUserAction));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetUserAction(G4VUserPrimaryGeneratorAction *) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetUserAction(G4VUserPrimaryGeneratorAction *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:156:18
  t136.method("SetUserAction", static_cast<void (G4MTRunManager::*)(G4VUserPrimaryGeneratorAction *) >(&G4MTRunManager::SetUserAction));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetUserAction(G4UserEventAction *) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetUserAction(G4UserEventAction *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:157:18
  t136.method("SetUserAction", static_cast<void (G4MTRunManager::*)(G4UserEventAction *) >(&G4MTRunManager::SetUserAction));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetUserAction(G4UserStackingAction *) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetUserAction(G4UserStackingAction *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:158:18
  t136.method("SetUserAction", static_cast<void (G4MTRunManager::*)(G4UserStackingAction *) >(&G4MTRunManager::SetUserAction));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetUserAction(G4UserTrackingAction *) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetUserAction(G4UserTrackingAction *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:159:18
  t136.method("SetUserAction", static_cast<void (G4MTRunManager::*)(G4UserTrackingAction *) >(&G4MTRunManager::SetUserAction));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetUserAction(G4UserSteppingAction *) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetUserAction(G4UserSteppingAction *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:160:18
  t136.method("SetUserAction", static_cast<void (G4MTRunManager::*)(G4UserSteppingAction *) >(&G4MTRunManager::SetUserAction));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::MergeScores(const G4ScoringManager *) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::MergeScores(const G4ScoringManager *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:163:10
  t136.method("MergeScores", static_cast<void (G4MTRunManager::*)(const G4ScoringManager *) >(&G4MTRunManager::MergeScores));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::MergeRun(const G4Run *) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::MergeRun(const G4Run *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:164:10
  t136.method("MergeRun", static_cast<void (G4MTRunManager::*)(const G4Run *) >(&G4MTRunManager::MergeRun));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::RequestWorkersProcessCommandsStack() (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::RequestWorkersProcessCommandsStack()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:175:18
  t136.method("RequestWorkersProcessCommandsStack", static_cast<void (G4MTRunManager::*)() >(&G4MTRunManager::RequestWorkersProcessCommandsStack));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::ThisWorkerProcessCommandsStackDone() (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::ThisWorkerProcessCommandsStackDone()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:178:18
  t136.method("ThisWorkerProcessCommandsStackDone", static_cast<void (G4MTRunManager::*)() >(&G4MTRunManager::ThisWorkerProcessCommandsStackDone));

  DEBUG_MSG("Adding wrapper for G4MTRunManager::WorkerActionRequest G4MTRunManager::ThisWorkerWaitForNextAction() (" __HERE__ ")");
  // signature to use in the veto list: G4MTRunManager::WorkerActionRequest G4MTRunManager::ThisWorkerWaitForNextAction()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:181:33
  t136.method("ThisWorkerWaitForNextAction", static_cast<G4MTRunManager::WorkerActionRequest (G4MTRunManager::*)() >(&G4MTRunManager::ThisWorkerWaitForNextAction));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetEventModulo(G4int) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetEventModulo(G4int)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:187:17
  t136.method("SetEventModulo", static_cast<void (G4MTRunManager::*)(G4int) >(&G4MTRunManager::SetEventModulo));
  t136.method("SetEventModulo", [](G4MTRunManager& a)->void{ a.SetEventModulo(); });
  t136.method("SetEventModulo", [](G4MTRunManager* a)->void{ a->SetEventModulo(); });

  DEBUG_MSG("Adding wrapper for G4int G4MTRunManager::GetEventModulo() (" __HERE__ ")");
  // signature to use in the veto list: G4int G4MTRunManager::GetEventModulo()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:188:18
  t136.method("GetEventModulo", static_cast<G4int (G4MTRunManager::*)()  const>(&G4MTRunManager::GetEventModulo));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::AbortRun(G4bool) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::AbortRun(G4bool)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:190:18
  t136.method("AbortRun", static_cast<void (G4MTRunManager::*)(G4bool) >(&G4MTRunManager::AbortRun));
  t136.method("AbortRun", [](G4MTRunManager& a)->void{ a.AbortRun(); });
  t136.method("AbortRun", [](G4MTRunManager* a)->void{ a->AbortRun(); });

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::AbortEvent() (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::AbortEvent()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:191:18
  t136.method("AbortEvent", static_cast<void (G4MTRunManager::*)() >(&G4MTRunManager::AbortEvent));

  DEBUG_MSG("Adding wrapper for G4int G4MTRunManager::SeedOncePerCommunication() (" __HERE__ ")");
  // signature to use in the veto list: G4int G4MTRunManager::SeedOncePerCommunication()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:193:18
  t136.method("G4MTRunManager!SeedOncePerCommunication", static_cast<G4int (*)() >(&G4MTRunManager::SeedOncePerCommunication));

  DEBUG_MSG("Adding wrapper for void G4MTRunManager::SetSeedOncePerCommunication(G4int) (" __HERE__ ")");
  // signature to use in the veto list: void G4MTRunManager::SetSeedOncePerCommunication(G4int)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4MTRunManager.hh:194:17
  t136.method("G4MTRunManager!SetSeedOncePerCommunication", static_cast<void (*)(G4int) >(&G4MTRunManager::SetSeedOncePerCommunication));

  /* End of G4MTRunManager class method wrappers
   **********************************************************************/

}
