// this file was auto-generated by wrapit v0.1.0-54-g4322429
#include <type_traits>
#include "jlcxx/jlcxx.hpp"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

#include "cpp/jlGeant4.h"


#ifdef VERBOSE_IMPORT
#  define DEBUG_MSG(a) std::cerr << a << "\n"
#else
#  define DEBUG_MSG(a)
#endif
#define __HERE__  __FILE__ ":" QUOTE2(__LINE__)
#define QUOTE(arg) #arg
#define QUOTE2(arg) QUOTE(arg)
void add_methods_for_G4VSolid(jlcxx::Module& types, jlcxx::TypeWrapper<G4VSolid>& t34) {


  /**********************************************************************/
  /* Wrappers for the methods of class G4VSolid
   */

  types.set_override_module(jl_base_module);

  DEBUG_MSG("Adding wrapper for G4bool G4VSolid::operator==(const G4VSolid &) (" __HERE__ ")");
  // signature to use in the veto list: G4bool G4VSolid::operator==(const G4VSolid &)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:92:19
  t34.method("==", static_cast<G4bool (G4VSolid::*)(const G4VSolid &)  const>(&G4VSolid::operator==));

  types.unset_override_module();

  DEBUG_MSG("Adding wrapper for G4String G4VSolid::GetName() (" __HERE__ ")");
  // signature to use in the veto list: G4String G4VSolid::GetName()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:95:21
  t34.method("GetName", static_cast<G4String (G4VSolid::*)()  const>(&G4VSolid::GetName));

  DEBUG_MSG("Adding wrapper for void G4VSolid::SetName(const G4String &) (" __HERE__ ")");
  // signature to use in the veto list: void G4VSolid::SetName(const G4String &)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:97:10
  t34.method("SetName", static_cast<void (G4VSolid::*)(const G4String &) >(&G4VSolid::SetName));

  DEBUG_MSG("Adding wrapper for G4double G4VSolid::GetTolerance() (" __HERE__ ")");
  // signature to use in the veto list: G4double G4VSolid::GetTolerance()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:100:21
  t34.method("GetTolerance", static_cast<G4double (G4VSolid::*)()  const>(&G4VSolid::GetTolerance));

  DEBUG_MSG("Adding wrapper for void G4VSolid::BoundingLimits(G4ThreeVector &, G4ThreeVector &) (" __HERE__ ")");
  // signature to use in the veto list: void G4VSolid::BoundingLimits(G4ThreeVector &, G4ThreeVector &)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:103:18
  t34.method("BoundingLimits", static_cast<void (G4VSolid::*)(G4ThreeVector &, G4ThreeVector &)  const>(&G4VSolid::BoundingLimits));

  DEBUG_MSG("Adding wrapper for EInside G4VSolid::Inside(const G4ThreeVector &) (" __HERE__ ")");
  // signature to use in the veto list: EInside G4VSolid::Inside(const G4ThreeVector &)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:114:21
  t34.method("Inside", static_cast<EInside (G4VSolid::*)(const G4ThreeVector &)  const>(&G4VSolid::Inside));

  DEBUG_MSG("Adding wrapper for G4ThreeVector G4VSolid::SurfaceNormal(const G4ThreeVector &) (" __HERE__ ")");
  // signature to use in the veto list: G4ThreeVector G4VSolid::SurfaceNormal(const G4ThreeVector &)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:119:27
  t34.method("SurfaceNormal", static_cast<G4ThreeVector (G4VSolid::*)(const G4ThreeVector &)  const>(&G4VSolid::SurfaceNormal));

  DEBUG_MSG("Adding wrapper for G4double G4VSolid::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &) (" __HERE__ ")");
  // signature to use in the veto list: G4double G4VSolid::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:123:22
  t34.method("DistanceToIn", static_cast<G4double (G4VSolid::*)(const G4ThreeVector &, const G4ThreeVector &)  const>(&G4VSolid::DistanceToIn));

  DEBUG_MSG("Adding wrapper for G4double G4VSolid::DistanceToIn(const G4ThreeVector &) (" __HERE__ ")");
  // signature to use in the veto list: G4double G4VSolid::DistanceToIn(const G4ThreeVector &)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:131:22
  t34.method("DistanceToIn", static_cast<G4double (G4VSolid::*)(const G4ThreeVector &)  const>(&G4VSolid::DistanceToIn));

  DEBUG_MSG("Adding wrapper for G4double G4VSolid::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *) (" __HERE__ ")");
  // signature to use in the veto list: G4double G4VSolid::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:135:22
  t34.method("DistanceToOut", static_cast<G4double (G4VSolid::*)(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *)  const>(&G4VSolid::DistanceToOut));
  t34.method("DistanceToOut", [](G4VSolid const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double{ return a.DistanceToOut(arg0, arg1); });
  t34.method("DistanceToOut", [](G4VSolid const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double{ return a.DistanceToOut(arg0, arg1, arg2); });
  t34.method("DistanceToOut", [](G4VSolid const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double{ return a.DistanceToOut(arg0, arg1, arg2, arg3); });
  t34.method("DistanceToOut", [](G4VSolid const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double{ return a->DistanceToOut(arg0, arg1); });
  t34.method("DistanceToOut", [](G4VSolid const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double{ return a->DistanceToOut(arg0, arg1, arg2); });
  t34.method("DistanceToOut", [](G4VSolid const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double{ return a->DistanceToOut(arg0, arg1, arg2, arg3); });

  DEBUG_MSG("Adding wrapper for G4double G4VSolid::DistanceToOut(const G4ThreeVector &) (" __HERE__ ")");
  // signature to use in the veto list: G4double G4VSolid::DistanceToOut(const G4ThreeVector &)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:156:22
  t34.method("DistanceToOut", static_cast<G4double (G4VSolid::*)(const G4ThreeVector &)  const>(&G4VSolid::DistanceToOut));

  DEBUG_MSG("Adding wrapper for void G4VSolid::ComputeDimensions(G4VPVParameterisation *, const G4int, const G4VPhysicalVolume *) (" __HERE__ ")");
  // signature to use in the veto list: void G4VSolid::ComputeDimensions(G4VPVParameterisation *, const G4int, const G4VPhysicalVolume *)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:161:18
  t34.method("ComputeDimensions", static_cast<void (G4VSolid::*)(G4VPVParameterisation *, const G4int, const G4VPhysicalVolume *) >(&G4VSolid::ComputeDimensions));

  DEBUG_MSG("Adding wrapper for G4double G4VSolid::GetCubicVolume() (" __HERE__ ")");
  // signature to use in the veto list: G4double G4VSolid::GetCubicVolume()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:167:22
  t34.method("GetCubicVolume", static_cast<G4double (G4VSolid::*)() >(&G4VSolid::GetCubicVolume));

  DEBUG_MSG("Adding wrapper for G4double G4VSolid::GetSurfaceArea() (" __HERE__ ")");
  // signature to use in the veto list: G4double G4VSolid::GetSurfaceArea()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:174:22
  t34.method("GetSurfaceArea", static_cast<G4double (G4VSolid::*)() >(&G4VSolid::GetSurfaceArea));

  DEBUG_MSG("Adding wrapper for G4GeometryType G4VSolid::GetEntityType() (" __HERE__ ")");
  // signature to use in the veto list: G4GeometryType G4VSolid::GetEntityType()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:181:29
  t34.method("GetEntityType", static_cast<G4GeometryType (G4VSolid::*)()  const>(&G4VSolid::GetEntityType));

  DEBUG_MSG("Adding wrapper for G4ThreeVector G4VSolid::GetPointOnSurface() (" __HERE__ ")");
  // signature to use in the veto list: G4ThreeVector G4VSolid::GetPointOnSurface()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:185:27
  t34.method("GetPointOnSurface", static_cast<G4ThreeVector (G4VSolid::*)()  const>(&G4VSolid::GetPointOnSurface));

  DEBUG_MSG("Adding wrapper for G4VSolid * G4VSolid::Clone() (" __HERE__ ")");
  // signature to use in the veto list: G4VSolid * G4VSolid::Clone()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:189:23
  t34.method("Clone", static_cast<G4VSolid * (G4VSolid::*)()  const>(&G4VSolid::Clone));

  DEBUG_MSG("Adding wrapper for void G4VSolid::DumpInfo() (" __HERE__ ")");
  // signature to use in the veto list: void G4VSolid::DumpInfo()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:196:17
  t34.method("DumpInfo", static_cast<void (G4VSolid::*)()  const>(&G4VSolid::DumpInfo));

  DEBUG_MSG("Adding wrapper for G4Polyhedron * G4VSolid::CreatePolyhedron() (" __HERE__ ")");
  // signature to use in the veto list: G4Polyhedron * G4VSolid::CreatePolyhedron()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:206:27
  t34.method("CreatePolyhedron", static_cast<G4Polyhedron * (G4VSolid::*)()  const>(&G4VSolid::CreatePolyhedron));

  DEBUG_MSG("Adding wrapper for G4Polyhedron * G4VSolid::GetPolyhedron() (" __HERE__ ")");
  // signature to use in the veto list: G4Polyhedron * G4VSolid::GetPolyhedron()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:209:27
  t34.method("GetPolyhedron", static_cast<G4Polyhedron * (G4VSolid::*)()  const>(&G4VSolid::GetPolyhedron));

  DEBUG_MSG("Adding wrapper for const G4VSolid * G4VSolid::GetConstituentSolid(G4int) (" __HERE__ ")");
  // signature to use in the veto list: const G4VSolid * G4VSolid::GetConstituentSolid(G4int)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:213:29
  t34.method("GetConstituentSolid", static_cast<const G4VSolid * (G4VSolid::*)(G4int)  const>(&G4VSolid::GetConstituentSolid));

  DEBUG_MSG("Adding wrapper for G4VSolid * G4VSolid::GetConstituentSolid(G4int) (" __HERE__ ")");
  // signature to use in the veto list: G4VSolid * G4VSolid::GetConstituentSolid(G4int)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:214:29
  t34.method("GetConstituentSolid", static_cast<G4VSolid * (G4VSolid::*)(G4int) >(&G4VSolid::GetConstituentSolid));

  DEBUG_MSG("Adding wrapper for const G4DisplacedSolid * G4VSolid::GetDisplacedSolidPtr() (" __HERE__ ")");
  // signature to use in the veto list: const G4DisplacedSolid * G4VSolid::GetDisplacedSolidPtr()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:218:37
  t34.method("GetDisplacedSolidPtr", static_cast<const G4DisplacedSolid * (G4VSolid::*)()  const>(&G4VSolid::GetDisplacedSolidPtr));

  DEBUG_MSG("Adding wrapper for G4DisplacedSolid * G4VSolid::GetDisplacedSolidPtr() (" __HERE__ ")");
  // signature to use in the veto list: G4DisplacedSolid * G4VSolid::GetDisplacedSolidPtr()
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:219:37
  t34.method("GetDisplacedSolidPtr", static_cast<G4DisplacedSolid * (G4VSolid::*)() >(&G4VSolid::GetDisplacedSolidPtr));


  DEBUG_MSG("Adding wrapper for G4VSolid & G4VSolid::operator=(const G4VSolid &) (" __HERE__ ")");
  // signature to use in the veto list: G4VSolid & G4VSolid::operator=(const G4VSolid &)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:231:15
  t34.method("assign", static_cast<G4VSolid & (G4VSolid::*)(const G4VSolid &) >(&G4VSolid::operator=));

  DEBUG_MSG("Adding wrapper for G4double G4VSolid::EstimateCubicVolume(G4int, G4double) (" __HERE__ ")");
  // signature to use in the veto list: G4double G4VSolid::EstimateCubicVolume(G4int, G4double)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:234:14
  t34.method("EstimateCubicVolume", static_cast<G4double (G4VSolid::*)(G4int, G4double)  const>(&G4VSolid::EstimateCubicVolume));

  DEBUG_MSG("Adding wrapper for G4double G4VSolid::EstimateSurfaceArea(G4int, G4double) (" __HERE__ ")");
  // signature to use in the veto list: G4double G4VSolid::EstimateSurfaceArea(G4int, G4double)
  // defined in /Users/mato/.julia/artifacts/9d4b417a98ec8f720b8871baefe87108f864656f/include/Geant4/G4VSolid.hh:239:14
  t34.method("EstimateSurfaceArea", static_cast<G4double (G4VSolid::*)(G4int, G4double)  const>(&G4VSolid::EstimateSurfaceArea));

  /* End of G4VSolid class method wrappers
   **********************************************************************/

}
