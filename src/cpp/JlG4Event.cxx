// this file was auto-generated by wrapit 5168a24-dirty
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4Event> : std::false_type { };
  template<> struct DefaultConstructible<G4Event> : std::false_type { };
}

// Class generating the wrapper for type G4Event
// signature to use in the veto file: G4Event
struct JlG4Event: public Wrapper {

  JlG4Event(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4Event (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:59:7
    jlcxx::TypeWrapper<G4Event>  t = jlModule.add_type<G4Event>("G4Event");
    jlcxx::stl::apply_stl<G4Event*>(jlModule);
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4Event>>(new jlcxx::TypeWrapper<G4Event>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);


    DEBUG_MSG("Adding wrapper for void G4Event::G4Event(G4int) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:66:14
    t.constructor<G4int>(/*finalize=*/jlcxx::finalize_policy::yes);
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for G4bool G4Event::operator==(const G4Event &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4Event::operator==(const G4Event &)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:75:12
    t.method("==", static_cast<G4bool (G4Event::*)(const G4Event &)  const>(&G4Event::operator==));

    DEBUG_MSG("Adding wrapper for G4bool G4Event::operator!=(const G4Event &) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4Event::operator!=(const G4Event &)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:76:12
    t.method("!=", static_cast<G4bool (G4Event::*)(const G4Event &)  const>(&G4Event::operator!=));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for void G4Event::Print() (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::Print()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:78:10
    t.method("Print", static_cast<void (G4Event::*)()  const>(&G4Event::Print));

    DEBUG_MSG("Adding wrapper for void G4Event::Draw() (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::Draw()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:80:10
    t.method("Draw", static_cast<void (G4Event::*)()  const>(&G4Event::Draw));

    DEBUG_MSG("Adding wrapper for void G4Event::SetEventID(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::SetEventID(G4int)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:85:17
    t.method("SetEventID", static_cast<void (G4Event::*)(G4int) >(&G4Event::SetEventID));

    DEBUG_MSG("Adding wrapper for void G4Event::SetHCofThisEvent(G4HCofThisEvent *) (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::SetHCofThisEvent(G4HCofThisEvent *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:87:17
    t.method("SetHCofThisEvent", static_cast<void (G4Event::*)(G4HCofThisEvent *) >(&G4Event::SetHCofThisEvent));

    DEBUG_MSG("Adding wrapper for void G4Event::SetDCofThisEvent(G4DCofThisEvent *) (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::SetDCofThisEvent(G4DCofThisEvent *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:89:17
    t.method("SetDCofThisEvent", static_cast<void (G4Event::*)(G4DCofThisEvent *) >(&G4Event::SetDCofThisEvent));

    DEBUG_MSG("Adding wrapper for void G4Event::SetTrajectoryContainer(G4TrajectoryContainer *) (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::SetTrajectoryContainer(G4TrajectoryContainer *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:91:17
    t.method("SetTrajectoryContainer", static_cast<void (G4Event::*)(G4TrajectoryContainer *) >(&G4Event::SetTrajectoryContainer));

    DEBUG_MSG("Adding wrapper for void G4Event::SetEventAborted() (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::SetEventAborted()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:93:17
    t.method("SetEventAborted", static_cast<void (G4Event::*)() >(&G4Event::SetEventAborted));

    DEBUG_MSG("Adding wrapper for void G4Event::SetRandomNumberStatus(G4String &) (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::SetRandomNumberStatus(G4String &)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:95:17
    t.method("SetRandomNumberStatus", static_cast<void (G4Event::*)(G4String &) >(&G4Event::SetRandomNumberStatus));

    DEBUG_MSG("Adding wrapper for void G4Event::SetRandomNumberStatusForProcessing(G4String &) (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::SetRandomNumberStatusForProcessing(G4String &)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:100:17
    t.method("SetRandomNumberStatusForProcessing", static_cast<void (G4Event::*)(G4String &) >(&G4Event::SetRandomNumberStatusForProcessing));

    DEBUG_MSG("Adding wrapper for void G4Event::KeepTheEvent(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::KeepTheEvent(G4bool)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:105:17
    t.method("KeepTheEvent", static_cast<void (G4Event::*)(G4bool) >(&G4Event::KeepTheEvent));
    t.method("KeepTheEvent", [](G4Event& a)->void { a.KeepTheEvent(); });
    t.method("KeepTheEvent", [](G4Event* a)->void { a->KeepTheEvent(); });

    DEBUG_MSG("Adding wrapper for G4bool G4Event::ToBeKept() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4Event::ToBeKept()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:107:19
    t.method("ToBeKept", static_cast<G4bool (G4Event::*)()  const>(&G4Event::ToBeKept));

    DEBUG_MSG("Adding wrapper for void G4Event::KeepForPostProcessing() (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::KeepForPostProcessing()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:109:17
    t.method("KeepForPostProcessing", static_cast<void (G4Event::*)()  const>(&G4Event::KeepForPostProcessing));

    DEBUG_MSG("Adding wrapper for void G4Event::PostProcessingFinished() (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::PostProcessingFinished()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:111:17
    t.method("PostProcessingFinished", static_cast<void (G4Event::*)()  const>(&G4Event::PostProcessingFinished));

    DEBUG_MSG("Adding wrapper for G4int G4Event::GetNumberOfGrips() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Event::GetNumberOfGrips()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:120:18
    t.method("GetNumberOfGrips", static_cast<G4int (G4Event::*)()  const>(&G4Event::GetNumberOfGrips));

    DEBUG_MSG("Adding wrapper for G4int G4Event::GetEventID() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Event::GetEventID()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:123:18
    t.method("GetEventID", static_cast<G4int (G4Event::*)()  const>(&G4Event::GetEventID));

    DEBUG_MSG("Adding wrapper for void G4Event::AddPrimaryVertex(G4PrimaryVertex *) (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::AddPrimaryVertex(G4PrimaryVertex *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:126:17
    t.method("AddPrimaryVertex", static_cast<void (G4Event::*)(G4PrimaryVertex *) >(&G4Event::AddPrimaryVertex));

    DEBUG_MSG("Adding wrapper for G4int G4Event::GetNumberOfPrimaryVertex() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Event::GetNumberOfPrimaryVertex()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:138:18
    t.method("GetNumberOfPrimaryVertex", static_cast<G4int (G4Event::*)()  const>(&G4Event::GetNumberOfPrimaryVertex));

    DEBUG_MSG("Adding wrapper for G4PrimaryVertex * G4Event::GetPrimaryVertex(G4int) (" __HERE__ ")");
    // signature to use in the veto list: G4PrimaryVertex * G4Event::GetPrimaryVertex(G4int)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:142:31
    t.method("GetPrimaryVertex", static_cast<G4PrimaryVertex * (G4Event::*)(G4int)  const>(&G4Event::GetPrimaryVertex));
    t.method("GetPrimaryVertex", [](G4Event const& a)->G4PrimaryVertex * { return a.GetPrimaryVertex(); });
    t.method("GetPrimaryVertex", [](G4Event const* a)->G4PrimaryVertex * { return a->GetPrimaryVertex(); });

    DEBUG_MSG("Adding wrapper for G4HCofThisEvent * G4Event::GetHCofThisEvent() (" __HERE__ ")");
    // signature to use in the veto list: G4HCofThisEvent * G4Event::GetHCofThisEvent()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:161:29
    t.method("GetHCofThisEvent", static_cast<G4HCofThisEvent * (G4Event::*)()  const>(&G4Event::GetHCofThisEvent));

    DEBUG_MSG("Adding wrapper for G4DCofThisEvent * G4Event::GetDCofThisEvent() (" __HERE__ ")");
    // signature to use in the veto list: G4DCofThisEvent * G4Event::GetDCofThisEvent()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:163:29
    t.method("GetDCofThisEvent", static_cast<G4DCofThisEvent * (G4Event::*)()  const>(&G4Event::GetDCofThisEvent));

    DEBUG_MSG("Adding wrapper for G4TrajectoryContainer * G4Event::GetTrajectoryContainer() (" __HERE__ ")");
    // signature to use in the veto list: G4TrajectoryContainer * G4Event::GetTrajectoryContainer()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:165:35
    t.method("GetTrajectoryContainer", static_cast<G4TrajectoryContainer * (G4Event::*)()  const>(&G4Event::GetTrajectoryContainer));

    DEBUG_MSG("Adding wrapper for G4bool G4Event::IsAborted() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4Event::IsAborted()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:172:19
    t.method("IsAborted", static_cast<G4bool (G4Event::*)()  const>(&G4Event::IsAborted));

    DEBUG_MSG("Adding wrapper for void G4Event::SetUserInformation(G4VUserEventInformation *) (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::SetUserInformation(G4VUserEventInformation *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:176:17
    t.method("SetUserInformation", static_cast<void (G4Event::*)(G4VUserEventInformation *) >(&G4Event::SetUserInformation));

    DEBUG_MSG("Adding wrapper for G4VUserEventInformation * G4Event::GetUserInformation() (" __HERE__ ")");
    // signature to use in the veto list: G4VUserEventInformation * G4Event::GetUserInformation()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:178:37
    t.method("GetUserInformation", static_cast<G4VUserEventInformation * (G4Event::*)()  const>(&G4Event::GetUserInformation));

    DEBUG_MSG("Adding wrapper for const G4String & G4Event::GetRandomNumberStatus() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4Event::GetRandomNumberStatus()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:182:28
    t.method("GetRandomNumberStatus", static_cast<const G4String & (G4Event::*)()  const>(&G4Event::GetRandomNumberStatus));

    DEBUG_MSG("Adding wrapper for const G4String & G4Event::GetRandomNumberStatusForProcessing() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4Event::GetRandomNumberStatusForProcessing()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:190:28
    t.method("GetRandomNumberStatusForProcessing", static_cast<const G4String & (G4Event::*)()  const>(&G4Event::GetRandomNumberStatusForProcessing));

    DEBUG_MSG("Adding wrapper for G4SubEvent * G4Event::PopSubEvent(G4int) (" __HERE__ ")");
    // signature to use in the veto list: G4SubEvent * G4Event::PopSubEvent(G4int)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:241:17
    t.method("PopSubEvent", static_cast<G4SubEvent * (G4Event::*)(G4int) >(&G4Event::PopSubEvent));

    DEBUG_MSG("Adding wrapper for G4int G4Event::TerminateSubEvent(G4SubEvent *) (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Event::TerminateSubEvent(G4SubEvent *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:244:11
    t.method("TerminateSubEvent", static_cast<G4int (G4Event::*)(G4SubEvent *) >(&G4Event::TerminateSubEvent));

    DEBUG_MSG("Adding wrapper for G4int G4Event::StoreSubEvent(G4int, G4SubEvent *) (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Event::StoreSubEvent(G4int, G4SubEvent *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:248:11
    t.method("StoreSubEvent", static_cast<G4int (G4Event::*)(G4int, G4SubEvent *) >(&G4Event::StoreSubEvent));

    DEBUG_MSG("Adding wrapper for G4int G4Event::SpawnSubEvent(G4SubEvent *) (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Event::SpawnSubEvent(G4SubEvent *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:252:11
    t.method("SpawnSubEvent", static_cast<G4int (G4Event::*)(G4SubEvent *) >(&G4Event::SpawnSubEvent));

    DEBUG_MSG("Adding wrapper for G4int G4Event::GetNumberOfRemainingSubEvents() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Event::GetNumberOfRemainingSubEvents()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:254:18
    t.method("GetNumberOfRemainingSubEvents", static_cast<G4int (G4Event::*)()  const>(&G4Event::GetNumberOfRemainingSubEvents));

    DEBUG_MSG("Adding wrapper for void G4Event::MergeSubEventResults(const G4Event *) (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::MergeSubEventResults(const G4Event *)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:264:10
    t.method("MergeSubEventResults", static_cast<void (G4Event::*)(const G4Event *) >(&G4Event::MergeSubEventResults));

    DEBUG_MSG("Adding wrapper for void G4Event::FlagAsSubEvent(G4Event *, G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4Event::FlagAsSubEvent(G4Event *, G4int)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:279:10
    t.method("FlagAsSubEvent", static_cast<void (G4Event::*)(G4Event *, G4int) >(&G4Event::FlagAsSubEvent));

    DEBUG_MSG("Adding wrapper for G4Event * G4Event::GetMotherEvent() (" __HERE__ ")");
    // signature to use in the veto list: G4Event * G4Event::GetMotherEvent()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:284:14
    t.method("GetMotherEvent", static_cast<G4Event * (G4Event::*)()  const>(&G4Event::GetMotherEvent));

    DEBUG_MSG("Adding wrapper for G4int G4Event::GetSubEventType() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Event::GetSubEventType()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Event.hh:286:11
    t.method("GetSubEventType", static_cast<G4int (G4Event::*)()  const>(&G4Event::GetSubEventType));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4Event>> type_;
};
std::shared_ptr<Wrapper> newJlG4Event(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4Event(module));
}
