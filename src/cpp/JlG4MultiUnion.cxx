// this file was auto-generated by wrapit 
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4MultiUnion> : std::false_type { };
  template<> struct DefaultConstructible<G4MultiUnion> : std::false_type { };
template<> struct SuperType<G4MultiUnion> { typedef G4VSolid type; };
}

// Class generating the wrapper for type G4MultiUnion
// signature to use in the veto file: G4MultiUnion
struct JlG4MultiUnion: public Wrapper {

  JlG4MultiUnion(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4MultiUnion (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:53:7
    jlcxx::TypeWrapper<G4MultiUnion>  t = jlModule.add_type<G4MultiUnion>("G4MultiUnion",
      jlcxx::julia_base_type<G4VSolid>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4MultiUnion>>(new jlcxx::TypeWrapper<G4MultiUnion>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/true);


    DEBUG_MSG("Adding wrapper for void G4MultiUnion::G4MultiUnion(const G4String &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:60:5
    t.constructor<const G4String &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for void G4MultiUnion::AddNode(G4VSolid &, const G4Transform3D &) (" __HERE__ ")");
    // signature to use in the veto list: void G4MultiUnion::AddNode(G4VSolid &, const G4Transform3D &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:64:10
    t.method("AddNode", static_cast<void (G4MultiUnion::*)(G4VSolid &, const G4Transform3D &) >(&G4MultiUnion::AddNode));

    DEBUG_MSG("Adding wrapper for void G4MultiUnion::AddNode(G4VSolid *, const G4Transform3D &) (" __HERE__ ")");
    // signature to use in the veto list: void G4MultiUnion::AddNode(G4VSolid *, const G4Transform3D &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:65:10
    t.method("AddNode", static_cast<void (G4MultiUnion::*)(G4VSolid *, const G4Transform3D &) >(&G4MultiUnion::AddNode));


    DEBUG_MSG("Adding wrapper for void G4MultiUnion::G4MultiUnion(const G4MultiUnion &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:67:5
    t.constructor<const G4MultiUnion &>(/*finalize=*/true);

    DEBUG_MSG("Adding wrapper for G4MultiUnion & G4MultiUnion::operator=(const G4MultiUnion &) (" __HERE__ ")");
    // signature to use in the veto list: G4MultiUnion & G4MultiUnion::operator=(const G4MultiUnion &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:68:19
    t.method("assign", static_cast<G4MultiUnion & (G4MultiUnion::*)(const G4MultiUnion &) >(&G4MultiUnion::operator=));

    DEBUG_MSG("Adding wrapper for const G4Transform3D & G4MultiUnion::GetTransformation(G4int) (" __HERE__ ")");
    // signature to use in the veto list: const G4Transform3D & G4MultiUnion::GetTransformation(G4int)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:71:33
    t.method("GetTransformation", static_cast<const G4Transform3D & (G4MultiUnion::*)(G4int)  const>(&G4MultiUnion::GetTransformation));

    DEBUG_MSG("Adding wrapper for G4VSolid * G4MultiUnion::GetSolid(G4int) (" __HERE__ ")");
    // signature to use in the veto list: G4VSolid * G4MultiUnion::GetSolid(G4int)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:72:22
    t.method("GetSolid", static_cast<G4VSolid * (G4MultiUnion::*)(G4int)  const>(&G4MultiUnion::GetSolid));

    DEBUG_MSG("Adding wrapper for G4int G4MultiUnion::GetNumberOfSolids() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4MultiUnion::GetNumberOfSolids()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:73:18
    t.method("GetNumberOfSolids", static_cast<G4int (G4MultiUnion::*)()  const>(&G4MultiUnion::GetNumberOfSolids));

    DEBUG_MSG("Adding wrapper for EInside G4MultiUnion::Inside(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: EInside G4MultiUnion::Inside(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:76:13
    t.method("Inside", static_cast<EInside (G4MultiUnion::*)(const G4ThreeVector &)  const>(&G4MultiUnion::Inside));

    DEBUG_MSG("Adding wrapper for G4double G4MultiUnion::DistanceToIn(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4MultiUnion::DistanceToIn(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:81:14
    t.method("DistanceToIn", static_cast<G4double (G4MultiUnion::*)(const G4ThreeVector &)  const>(&G4MultiUnion::DistanceToIn));

    DEBUG_MSG("Adding wrapper for G4double G4MultiUnion::DistanceToOut(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4MultiUnion::DistanceToOut(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:82:14
    t.method("DistanceToOut", static_cast<G4double (G4MultiUnion::*)(const G4ThreeVector &)  const>(&G4MultiUnion::DistanceToOut));

    DEBUG_MSG("Adding wrapper for void G4MultiUnion::SetAccurateSafety(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4MultiUnion::SetAccurateSafety(G4bool)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:83:17
    t.method("SetAccurateSafety", static_cast<void (G4MultiUnion::*)(G4bool) >(&G4MultiUnion::SetAccurateSafety));

    DEBUG_MSG("Adding wrapper for G4double G4MultiUnion::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4MultiUnion::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:86:14
    t.method("DistanceToIn", static_cast<G4double (G4MultiUnion::*)(const G4ThreeVector &, const G4ThreeVector &)  const>(&G4MultiUnion::DistanceToIn));

    DEBUG_MSG("Adding wrapper for G4double G4MultiUnion::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4MultiUnion::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:88:14
    t.method("DistanceToOut", static_cast<G4double (G4MultiUnion::*)(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *)  const>(&G4MultiUnion::DistanceToOut));
    t.method("DistanceToOut", [](G4MultiUnion const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a.DistanceToOut(arg0, arg1); });
    t.method("DistanceToOut", [](G4MultiUnion const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double { return a.DistanceToOut(arg0, arg1, arg2); });
    t.method("DistanceToOut", [](G4MultiUnion const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double { return a.DistanceToOut(arg0, arg1, arg2, arg3); });
    t.method("DistanceToOut", [](G4MultiUnion const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a->DistanceToOut(arg0, arg1); });
    t.method("DistanceToOut", [](G4MultiUnion const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double { return a->DistanceToOut(arg0, arg1, arg2); });
    t.method("DistanceToOut", [](G4MultiUnion const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double { return a->DistanceToOut(arg0, arg1, arg2, arg3); });

    DEBUG_MSG("Adding wrapper for G4double G4MultiUnion::DistanceToInNoVoxels(const G4ThreeVector &, const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4MultiUnion::DistanceToInNoVoxels(const G4ThreeVector &, const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:94:14
    t.method("DistanceToInNoVoxels", static_cast<G4double (G4MultiUnion::*)(const G4ThreeVector &, const G4ThreeVector &)  const>(&G4MultiUnion::DistanceToInNoVoxels));

    DEBUG_MSG("Adding wrapper for G4double G4MultiUnion::DistanceToOutVoxels(const G4ThreeVector &, const G4ThreeVector &, G4ThreeVector *) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4MultiUnion::DistanceToOutVoxels(const G4ThreeVector &, const G4ThreeVector &, G4ThreeVector *)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:96:14
    t.method("DistanceToOutVoxels", static_cast<G4double (G4MultiUnion::*)(const G4ThreeVector &, const G4ThreeVector &, G4ThreeVector *)  const>(&G4MultiUnion::DistanceToOutVoxels));

    DEBUG_MSG("Adding wrapper for G4double G4MultiUnion::DistanceToOutNoVoxels(const G4ThreeVector &, const G4ThreeVector &, G4ThreeVector *) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4MultiUnion::DistanceToOutNoVoxels(const G4ThreeVector &, const G4ThreeVector &, G4ThreeVector *)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:104:14
    t.method("DistanceToOutNoVoxels", static_cast<G4double (G4MultiUnion::*)(const G4ThreeVector &, const G4ThreeVector &, G4ThreeVector *)  const>(&G4MultiUnion::DistanceToOutNoVoxels));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4MultiUnion::SurfaceNormal(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4MultiUnion::SurfaceNormal(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:108:19
    t.method("SurfaceNormal", static_cast<G4ThreeVector (G4MultiUnion::*)(const G4ThreeVector &)  const>(&G4MultiUnion::SurfaceNormal));

    DEBUG_MSG("Adding wrapper for void G4MultiUnion::Extent(EAxis, G4double &, G4double &) (" __HERE__ ")");
    // signature to use in the veto list: void G4MultiUnion::Extent(EAxis, G4double &, G4double &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:110:10
    t.method("Extent", static_cast<void (G4MultiUnion::*)(EAxis, G4double &, G4double &)  const>(&G4MultiUnion::Extent));

    DEBUG_MSG("Adding wrapper for void G4MultiUnion::BoundingLimits(G4ThreeVector &, G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: void G4MultiUnion::BoundingLimits(G4ThreeVector &, G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:111:10
    t.method("BoundingLimits", static_cast<void (G4MultiUnion::*)(G4ThreeVector &, G4ThreeVector &)  const>(&G4MultiUnion::BoundingLimits));

    DEBUG_MSG("Adding wrapper for G4double G4MultiUnion::GetCubicVolume() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4MultiUnion::GetCubicVolume()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:116:14
    t.method("GetCubicVolume", static_cast<G4double (G4MultiUnion::*)() >(&G4MultiUnion::GetCubicVolume));

    DEBUG_MSG("Adding wrapper for G4double G4MultiUnion::GetSurfaceArea() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4MultiUnion::GetSurfaceArea()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:117:14
    t.method("GetSurfaceArea", static_cast<G4double (G4MultiUnion::*)() >(&G4MultiUnion::GetSurfaceArea));

    DEBUG_MSG("Adding wrapper for G4VSolid * G4MultiUnion::Clone() (" __HERE__ ")");
    // signature to use in the veto list: G4VSolid * G4MultiUnion::Clone()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:119:15
    t.method("Clone", static_cast<G4VSolid * (G4MultiUnion::*)()  const>(&G4MultiUnion::Clone));

    DEBUG_MSG("Adding wrapper for G4GeometryType G4MultiUnion::GetEntityType() (" __HERE__ ")");
    // signature to use in the veto list: G4GeometryType G4MultiUnion::GetEntityType()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:121:20
    t.method("GetEntityType", static_cast<G4GeometryType (G4MultiUnion::*)()  const>(&G4MultiUnion::GetEntityType));

    DEBUG_MSG("Adding wrapper for void G4MultiUnion::Voxelize() (" __HERE__ ")");
    // signature to use in the veto list: void G4MultiUnion::Voxelize()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:123:10
    t.method("Voxelize", static_cast<void (G4MultiUnion::*)() >(&G4MultiUnion::Voxelize));

    DEBUG_MSG("Adding wrapper for EInside G4MultiUnion::InsideNoVoxels(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: EInside G4MultiUnion::InsideNoVoxels(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:127:13
    t.method("InsideNoVoxels", static_cast<EInside (G4MultiUnion::*)(const G4ThreeVector &)  const>(&G4MultiUnion::InsideNoVoxels));

    DEBUG_MSG("Adding wrapper for G4Voxelizer & G4MultiUnion::GetVoxels() (" __HERE__ ")");
    // signature to use in the veto list: G4Voxelizer & G4MultiUnion::GetVoxels()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:128:25
    t.method("GetVoxels", static_cast<G4Voxelizer & (G4MultiUnion::*)()  const>(&G4MultiUnion::GetVoxels));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4MultiUnion::GetPointOnSurface() (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4MultiUnion::GetPointOnSurface()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:132:19
    t.method("GetPointOnSurface", static_cast<G4ThreeVector (G4MultiUnion::*)()  const>(&G4MultiUnion::GetPointOnSurface));

    DEBUG_MSG("Adding wrapper for G4Polyhedron * G4MultiUnion::CreatePolyhedron() (" __HERE__ ")");
    // signature to use in the veto list: G4Polyhedron * G4MultiUnion::CreatePolyhedron()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:135:19
    t.method("CreatePolyhedron", static_cast<G4Polyhedron * (G4MultiUnion::*)()  const>(&G4MultiUnion::CreatePolyhedron));

    DEBUG_MSG("Adding wrapper for G4Polyhedron * G4MultiUnion::GetPolyhedron() (" __HERE__ ")");
    // signature to use in the veto list: G4Polyhedron * G4MultiUnion::GetPolyhedron()
    // defined in /Users/mato/.julia/artifacts/4afb5743b029965f72ec5a970d92d5344ce830d2/include/Geant4/G4MultiUnion.hh:136:19
    t.method("GetPolyhedron", static_cast<G4Polyhedron * (G4MultiUnion::*)()  const>(&G4MultiUnion::GetPolyhedron));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4MultiUnion>> type_;
};
std::shared_ptr<Wrapper> newJlG4MultiUnion(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4MultiUnion(module));
}
