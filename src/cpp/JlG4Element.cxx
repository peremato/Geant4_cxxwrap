// this file was auto-generated by wrapit 5168a24-dirty
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4Element> : std::false_type { };
  template<> struct DefaultConstructible<G4Element> : std::false_type { };
}

// Class generating the wrapper for type G4Element
// signature to use in the veto file: G4Element
struct JlG4Element: public Wrapper {

  JlG4Element(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4Element (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:90:7
    jlcxx::TypeWrapper<G4Element>  t = jlModule.add_type<G4Element>("G4Element");
    jlcxx::stl::apply_stl<G4Element*>(jlModule);
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4Element>>(new jlcxx::TypeWrapper<G4Element>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void G4Element::G4Element(const G4String &, const G4String &, G4double, G4double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:94:3
    t.constructor<const G4String &, const G4String &, G4double, G4double>(/*finalize=*/jlcxx::finalize_policy::no);


    DEBUG_MSG("Adding wrapper for void G4Element::G4Element(const G4String &, const G4String &, G4int) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:100:3
    t.constructor<const G4String &, const G4String &, G4int>(/*finalize=*/jlcxx::finalize_policy::no);

    DEBUG_MSG("Adding wrapper for void G4Element::AddIsotope(G4Isotope *, G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Element::AddIsotope(G4Isotope *, G4double)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:110:8
    t.method("AddIsotope", static_cast<void (G4Element::*)(G4Isotope *, G4double) >(&G4Element::AddIsotope));

    DEBUG_MSG("Adding wrapper for const G4String & G4Element::GetName() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4Element::GetName()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:115:26
    t.method("GetName", static_cast<const G4String & (G4Element::*)()  const>(&G4Element::GetName));

    DEBUG_MSG("Adding wrapper for const G4String & G4Element::GetSymbol() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4Element::GetSymbol()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:116:26
    t.method("GetSymbol", static_cast<const G4String & (G4Element::*)()  const>(&G4Element::GetSymbol));

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetZ() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetZ()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:119:19
    t.method("GetZ", static_cast<G4double (G4Element::*)()  const>(&G4Element::GetZ));

    DEBUG_MSG("Adding wrapper for G4int G4Element::GetZasInt() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Element::GetZasInt()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:120:16
    t.method("GetZasInt", static_cast<G4int (G4Element::*)()  const>(&G4Element::GetZasInt));

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetN() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetN()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:123:19
    t.method("GetN", static_cast<G4double (G4Element::*)()  const>(&G4Element::GetN));

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetAtomicMassAmu() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetAtomicMassAmu()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:124:19
    t.method("GetAtomicMassAmu", static_cast<G4double (G4Element::*)()  const>(&G4Element::GetAtomicMassAmu));

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetA() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetA()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:127:19
    t.method("GetA", static_cast<G4double (G4Element::*)()  const>(&G4Element::GetA));

    DEBUG_MSG("Adding wrapper for G4bool G4Element::GetNaturalAbundanceFlag() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4Element::GetNaturalAbundanceFlag()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:129:17
    t.method("GetNaturalAbundanceFlag", static_cast<G4bool (G4Element::*)()  const>(&G4Element::GetNaturalAbundanceFlag));

    DEBUG_MSG("Adding wrapper for void G4Element::SetNaturalAbundanceFlag(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4Element::SetNaturalAbundanceFlag(G4bool)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:131:15
    t.method("SetNaturalAbundanceFlag", static_cast<void (G4Element::*)(G4bool) >(&G4Element::SetNaturalAbundanceFlag));

    DEBUG_MSG("Adding wrapper for G4int G4Element::GetNbOfAtomicShells() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Element::GetNbOfAtomicShells()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:134:16
    t.method("GetNbOfAtomicShells", static_cast<G4int (G4Element::*)()  const>(&G4Element::GetNbOfAtomicShells));

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetAtomicShell(G4int) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetAtomicShell(G4int)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:137:12
    t.method("GetAtomicShell", static_cast<G4double (G4Element::*)(G4int)  const>(&G4Element::GetAtomicShell));

    DEBUG_MSG("Adding wrapper for G4int G4Element::GetNbOfShellElectrons(G4int) (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Element::GetNbOfShellElectrons(G4int)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:140:9
    t.method("GetNbOfShellElectrons", static_cast<G4int (G4Element::*)(G4int)  const>(&G4Element::GetNbOfShellElectrons));

    DEBUG_MSG("Adding wrapper for size_t G4Element::GetNumberOfIsotopes() (" __HERE__ ")");
    // signature to use in the veto list: size_t G4Element::GetNumberOfIsotopes()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:143:17
    t.method("GetNumberOfIsotopes", static_cast<size_t (G4Element::*)()  const>(&G4Element::GetNumberOfIsotopes));

    DEBUG_MSG("Adding wrapper for G4IsotopeVector * G4Element::GetIsotopeVector() (" __HERE__ ")");
    // signature to use in the veto list: G4IsotopeVector * G4Element::GetIsotopeVector()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:146:27
    t.method("GetIsotopeVector", static_cast<G4IsotopeVector * (G4Element::*)()  const>(&G4Element::GetIsotopeVector));

    DEBUG_MSG("Adding wrapper for G4double * G4Element::GetRelativeAbundanceVector() (" __HERE__ ")");
    // signature to use in the veto list: G4double * G4Element::GetRelativeAbundanceVector()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:149:20
    t.method("GetRelativeAbundanceVector", static_cast<G4double * (G4Element::*)()  const>(&G4Element::GetRelativeAbundanceVector));

    DEBUG_MSG("Adding wrapper for const G4Isotope * G4Element::GetIsotope(G4int) (" __HERE__ ")");
    // signature to use in the veto list: const G4Isotope * G4Element::GetIsotope(G4int)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:151:27
    t.method("GetIsotope", static_cast<const G4Isotope * (G4Element::*)(G4int)  const>(&G4Element::GetIsotope));

    DEBUG_MSG("Adding wrapper for G4ElementTable * G4Element::GetElementTable() (" __HERE__ ")");
    // signature to use in the veto list: G4ElementTable * G4Element::GetElementTable()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:154:26
    module_.method("G4Element!GetElementTable", static_cast<G4ElementTable * (*)() >(&G4Element::GetElementTable));

    DEBUG_MSG("Adding wrapper for size_t G4Element::GetNumberOfElements() (" __HERE__ ")");
    // signature to use in the veto list: size_t G4Element::GetNumberOfElements()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:156:17
    module_.method("G4Element!GetNumberOfElements", static_cast<size_t (*)() >(&G4Element::GetNumberOfElements));

    DEBUG_MSG("Adding wrapper for size_t G4Element::GetIndex() (" __HERE__ ")");
    // signature to use in the veto list: size_t G4Element::GetIndex()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:159:17
    t.method("GetIndex", static_cast<size_t (G4Element::*)()  const>(&G4Element::GetIndex));

    DEBUG_MSG("Adding wrapper for G4Element * G4Element::GetElement(const G4String &, G4bool) (" __HERE__ ")");
    // signature to use in the veto list: G4Element * G4Element::GetElement(const G4String &, G4bool)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:162:21
    module_.method("G4Element!GetElement", static_cast<G4Element * (*)(const G4String &, G4bool) >(&G4Element::GetElement));
    module_.method("G4Element!GetElement", [](const G4String & arg0)->G4Element * { return G4Element::GetElement(arg0); });

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetfCoulomb() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetfCoulomb()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:165:19
    t.method("GetfCoulomb", static_cast<G4double (G4Element::*)()  const>(&G4Element::GetfCoulomb));

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetfRadTsai() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetfRadTsai()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:168:19
    t.method("GetfRadTsai", static_cast<G4double (G4Element::*)()  const>(&G4Element::GetfRadTsai));

    DEBUG_MSG("Adding wrapper for G4IonisParamElm * G4Element::GetIonisation() (" __HERE__ ")");
    // signature to use in the veto list: G4IonisParamElm * G4Element::GetIonisation()
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:171:27
    t.method("GetIonisation", static_cast<G4IonisParamElm * (G4Element::*)()  const>(&G4Element::GetIonisation));

    DEBUG_MSG("Adding wrapper for void G4Element::SetName(const G4String &) (" __HERE__ ")");
    // signature to use in the veto list: void G4Element::SetName(const G4String &)
    // defined in /Users/mato/.julia/artifacts/04a1f392c53fa9913a6e32dc79e45dcf6f1dd250/include/Geant4/G4Element.hh:179:15
    t.method("SetName", static_cast<void (G4Element::*)(const G4String &) >(&G4Element::SetName));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4Element>> type_;
};
std::shared_ptr<Wrapper> newJlG4Element(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4Element(module));
}
