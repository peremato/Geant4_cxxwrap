// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4Element> : std::false_type { };
  template<> struct DefaultConstructible<G4Element> : std::false_type { };
}

// Class generating the wrapper for type G4Element
// signature to use in the veto file: G4Element
struct JlG4Element: public Wrapper {

  JlG4Element(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4Element (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:90:7
    jlcxx::TypeWrapper<G4Element>  t = jlModule.add_type<G4Element>("G4Element");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4Element>>(new jlcxx::TypeWrapper<G4Element>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void G4Element::G4Element(const G4String &, const G4String &, G4double, G4double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:94:3
    t.constructor<const G4String &, const G4String &, G4double, G4double>(/*finalize=*/jlcxx::finalize_policy::no, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("symbol"), jlcxx::arg("Zeff"), jlcxx::arg("Aeff")    );


    DEBUG_MSG("Adding wrapper for void G4Element::G4Element(const G4String &, const G4String &, G4int) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:100:3
    t.constructor<const G4String &, const G4String &, G4int>(/*finalize=*/jlcxx::finalize_policy::no, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("symbol"), jlcxx::arg("nbIsotopes")    );

    DEBUG_MSG("Adding wrapper for void G4Element::AddIsotope(G4Isotope *, G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Element::AddIsotope(G4Isotope *, G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:110:8
    t.method("AddIsotope", [](G4Element& a, G4Isotope * arg0, G4double arg1)->void { a.AddIsotope(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("isotope"), jlcxx::arg("RelativeAbundance"));
    t.method("AddIsotope", [](G4Element* a, G4Isotope * arg0, G4double arg1)->void { a->AddIsotope(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("isotope"), jlcxx::arg("RelativeAbundance"));

    DEBUG_MSG("Adding wrapper for const G4String & G4Element::GetName() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4Element::GetName()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:115:26
    t.method("GetName", [](G4Element const& a)->const G4String & { return a.GetName(); }, jlcxx::arg("this"));
    t.method("GetName", [](G4Element const* a)->const G4String & { return a->GetName(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const G4String & G4Element::GetSymbol() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4Element::GetSymbol()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:116:26
    t.method("GetSymbol", [](G4Element const& a)->const G4String & { return a.GetSymbol(); }, jlcxx::arg("this"));
    t.method("GetSymbol", [](G4Element const* a)->const G4String & { return a->GetSymbol(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetZ() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetZ()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:119:19
    t.method("GetZ", [](G4Element const& a)->G4double { return a.GetZ(); }, jlcxx::arg("this"));
    t.method("GetZ", [](G4Element const* a)->G4double { return a->GetZ(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4int G4Element::GetZasInt() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Element::GetZasInt()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:120:16
    t.method("GetZasInt", [](G4Element const& a)->G4int { return a.GetZasInt(); }, jlcxx::arg("this"));
    t.method("GetZasInt", [](G4Element const* a)->G4int { return a->GetZasInt(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetN() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetN()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:123:19
    t.method("GetN", [](G4Element const& a)->G4double { return a.GetN(); }, jlcxx::arg("this"));
    t.method("GetN", [](G4Element const* a)->G4double { return a->GetN(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetAtomicMassAmu() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetAtomicMassAmu()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:124:19
    t.method("GetAtomicMassAmu", [](G4Element const& a)->G4double { return a.GetAtomicMassAmu(); }, jlcxx::arg("this"));
    t.method("GetAtomicMassAmu", [](G4Element const* a)->G4double { return a->GetAtomicMassAmu(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetA() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetA()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:127:19
    t.method("GetA", [](G4Element const& a)->G4double { return a.GetA(); }, jlcxx::arg("this"));
    t.method("GetA", [](G4Element const* a)->G4double { return a->GetA(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4bool G4Element::GetNaturalAbundanceFlag() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4Element::GetNaturalAbundanceFlag()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:129:17
    t.method("GetNaturalAbundanceFlag", [](G4Element const& a)->G4bool { return a.GetNaturalAbundanceFlag(); }, jlcxx::arg("this"));
    t.method("GetNaturalAbundanceFlag", [](G4Element const* a)->G4bool { return a->GetNaturalAbundanceFlag(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4Element::SetNaturalAbundanceFlag(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4Element::SetNaturalAbundanceFlag(G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:131:15
    t.method("SetNaturalAbundanceFlag", [](G4Element& a, G4bool arg0)->void { a.SetNaturalAbundanceFlag(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("SetNaturalAbundanceFlag", [](G4Element* a, G4bool arg0)->void { a->SetNaturalAbundanceFlag(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for G4int G4Element::GetNbOfAtomicShells() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Element::GetNbOfAtomicShells()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:134:16
    t.method("GetNbOfAtomicShells", [](G4Element const& a)->G4int { return a.GetNbOfAtomicShells(); }, jlcxx::arg("this"));
    t.method("GetNbOfAtomicShells", [](G4Element const* a)->G4int { return a->GetNbOfAtomicShells(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetAtomicShell(G4int) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetAtomicShell(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:137:12
    t.method("GetAtomicShell", [](G4Element const& a, G4int arg0)->G4double { return a.GetAtomicShell(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));
    t.method("GetAtomicShell", [](G4Element const* a, G4int arg0)->G4double { return a->GetAtomicShell(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));

    DEBUG_MSG("Adding wrapper for G4int G4Element::GetNbOfShellElectrons(G4int) (" __HERE__ ")");
    // signature to use in the veto list: G4int G4Element::GetNbOfShellElectrons(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:140:9
    t.method("GetNbOfShellElectrons", [](G4Element const& a, G4int arg0)->G4int { return a.GetNbOfShellElectrons(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));
    t.method("GetNbOfShellElectrons", [](G4Element const* a, G4int arg0)->G4int { return a->GetNbOfShellElectrons(arg0); }, jlcxx::arg("this"), jlcxx::arg("index"));

    DEBUG_MSG("Adding wrapper for size_t G4Element::GetNumberOfIsotopes() (" __HERE__ ")");
    // signature to use in the veto list: size_t G4Element::GetNumberOfIsotopes()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:143:22
    t.method("GetNumberOfIsotopes", [](G4Element const& a)->size_t { return a.GetNumberOfIsotopes(); }, jlcxx::arg("this"));
    t.method("GetNumberOfIsotopes", [](G4Element const* a)->size_t { return a->GetNumberOfIsotopes(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4IsotopeVector * G4Element::GetIsotopeVector() (" __HERE__ ")");
    // signature to use in the veto list: G4IsotopeVector * G4Element::GetIsotopeVector()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:146:27
    t.method("GetIsotopeVector", [](G4Element const& a)->G4IsotopeVector * { return a.GetIsotopeVector(); }, jlcxx::arg("this"));
    t.method("GetIsotopeVector", [](G4Element const* a)->G4IsotopeVector * { return a->GetIsotopeVector(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double * G4Element::GetRelativeAbundanceVector() (" __HERE__ ")");
    // signature to use in the veto list: G4double * G4Element::GetRelativeAbundanceVector()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:149:20
    t.method("GetRelativeAbundanceVector", [](G4Element const& a)->G4double * { return a.GetRelativeAbundanceVector(); }, jlcxx::arg("this"));
    t.method("GetRelativeAbundanceVector", [](G4Element const* a)->G4double * { return a->GetRelativeAbundanceVector(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for const G4Isotope * G4Element::GetIsotope(G4int) (" __HERE__ ")");
    // signature to use in the veto list: const G4Isotope * G4Element::GetIsotope(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:151:27
    t.method("GetIsotope", [](G4Element const& a, G4int arg0)->const G4Isotope * { return a.GetIsotope(arg0); }, jlcxx::arg("this"), jlcxx::arg("iso"));
    t.method("GetIsotope", [](G4Element const* a, G4int arg0)->const G4Isotope * { return a->GetIsotope(arg0); }, jlcxx::arg("this"), jlcxx::arg("iso"));

    DEBUG_MSG("Adding wrapper for const G4ElementTable * G4Element::GetElementTable() (" __HERE__ ")");
    // signature to use in the veto list: const G4ElementTable * G4Element::GetElementTable()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:154:32
    module_.method("G4Element!GetElementTable", []()->const G4ElementTable * { return G4Element::GetElementTable(); });

    DEBUG_MSG("Adding wrapper for size_t G4Element::GetNumberOfElements() (" __HERE__ ")");
    // signature to use in the veto list: size_t G4Element::GetNumberOfElements()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:156:22
    module_.method("G4Element!GetNumberOfElements", []()->size_t { return G4Element::GetNumberOfElements(); });

    DEBUG_MSG("Adding wrapper for size_t G4Element::GetIndex() (" __HERE__ ")");
    // signature to use in the veto list: size_t G4Element::GetIndex()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:159:22
    t.method("GetIndex", [](G4Element const& a)->size_t { return a.GetIndex(); }, jlcxx::arg("this"));
    t.method("GetIndex", [](G4Element const* a)->size_t { return a->GetIndex(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4Element * G4Element::GetElement(const G4String &, G4bool) (" __HERE__ ")");
    // signature to use in the veto list: G4Element * G4Element::GetElement(const G4String &, G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:162:21
    module_.method("G4Element!GetElement", [](const G4String & arg0)->G4Element * { return G4Element::GetElement(arg0); }, jlcxx::arg("name"));
    module_.method("G4Element!GetElement", [](const G4String & arg0, G4bool arg1)->G4Element * { return G4Element::GetElement(arg0, arg1); }, jlcxx::arg("name"), jlcxx::arg("warning"));

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetfCoulomb() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetfCoulomb()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:165:19
    t.method("GetfCoulomb", [](G4Element const& a)->G4double { return a.GetfCoulomb(); }, jlcxx::arg("this"));
    t.method("GetfCoulomb", [](G4Element const* a)->G4double { return a->GetfCoulomb(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Element::GetfRadTsai() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Element::GetfRadTsai()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:168:19
    t.method("GetfRadTsai", [](G4Element const& a)->G4double { return a.GetfRadTsai(); }, jlcxx::arg("this"));
    t.method("GetfRadTsai", [](G4Element const* a)->G4double { return a->GetfRadTsai(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4IonisParamElm * G4Element::GetIonisation() (" __HERE__ ")");
    // signature to use in the veto list: G4IonisParamElm * G4Element::GetIonisation()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:171:27
    t.method("GetIonisation", [](G4Element const& a)->G4IonisParamElm * { return a.GetIonisation(); }, jlcxx::arg("this"));
    t.method("GetIonisation", [](G4Element const* a)->G4IonisParamElm * { return a->GetIonisation(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4Element::SetName(const G4String &) (" __HERE__ ")");
    // signature to use in the veto list: void G4Element::SetName(const G4String &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Element.hh:179:15
    t.method("SetName", [](G4Element& a, const G4String & arg0)->void { a.SetName(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
    t.method("SetName", [](G4Element* a, const G4String & arg0)->void { a->SetName(arg0); }, jlcxx::arg("this"), jlcxx::arg("name"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4Element>> type_;
};
std::shared_ptr<Wrapper> newJlG4Element(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4Element(module));
}
