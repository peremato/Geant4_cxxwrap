// this file was auto-generated by wrapit v1.3.1-15-g5168a24
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4RunManager> : std::false_type { };
  template<> struct DefaultConstructible<G4RunManager> : std::false_type { };
}

// Class generating the wrapper for type G4RunManager
// signature to use in the veto file: G4RunManager
struct JlG4RunManager: public Wrapper {

  JlG4RunManager(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4RunManager (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:137:7
    jlcxx::TypeWrapper<G4RunManager>  t = jlModule.add_type<G4RunManager>("G4RunManager");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4RunManager>>(new jlcxx::TypeWrapper<G4RunManager>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes);

    DEBUG_MSG("Adding wrapper for G4RunManager * G4RunManager::GetRunManager() (" __HERE__ ")");
    // signature to use in the veto list: G4RunManager * G4RunManager::GetRunManager()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:146:26
    module_.method("G4RunManager!GetRunManager", static_cast<G4RunManager * (*)() >(&G4RunManager::GetRunManager));

    DEBUG_MSG("Adding wrapper for void G4RunManager::BeamOn(G4int, const char *, G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::BeamOn(G4int, const char *, G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:167:18
    t.method("BeamOn", static_cast<void (G4RunManager::*)(G4int, const char *, G4int) >(&G4RunManager::BeamOn));
    t.method("BeamOn", [](G4RunManager& a, G4int arg0)->void { a.BeamOn(arg0); });
    t.method("BeamOn", [](G4RunManager& a, G4int arg0, const char * arg1)->void { a.BeamOn(arg0, arg1); });
    t.method("BeamOn", [](G4RunManager* a, G4int arg0)->void { a->BeamOn(arg0); });
    t.method("BeamOn", [](G4RunManager* a, G4int arg0, const char * arg1)->void { a->BeamOn(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void G4RunManager::Initialize() (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::Initialize()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:180:18
    t.method("Initialize", static_cast<void (G4RunManager::*)() >(&G4RunManager::Initialize));

    DEBUG_MSG("Adding wrapper for void G4RunManager::DefineWorldVolume(G4VPhysicalVolume *, G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::DefineWorldVolume(G4VPhysicalVolume *, G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:188:18
    t.method("DefineWorldVolume", static_cast<void (G4RunManager::*)(G4VPhysicalVolume *, G4bool) >(&G4RunManager::DefineWorldVolume));
    t.method("DefineWorldVolume", [](G4RunManager& a, G4VPhysicalVolume * arg0)->void { a.DefineWorldVolume(arg0); });
    t.method("DefineWorldVolume", [](G4RunManager* a, G4VPhysicalVolume * arg0)->void { a->DefineWorldVolume(arg0); });

    DEBUG_MSG("Adding wrapper for void G4RunManager::AbortRun(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::AbortRun(G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:197:18
    t.method("AbortRun", static_cast<void (G4RunManager::*)(G4bool) >(&G4RunManager::AbortRun));
    t.method("AbortRun", [](G4RunManager& a)->void { a.AbortRun(); });
    t.method("AbortRun", [](G4RunManager* a)->void { a->AbortRun(); });

    DEBUG_MSG("Adding wrapper for void G4RunManager::AbortEvent() (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::AbortEvent()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:202:18
    t.method("AbortEvent", static_cast<void (G4RunManager::*)() >(&G4RunManager::AbortEvent));

    DEBUG_MSG("Adding wrapper for void G4RunManager::InitializeGeometry() (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::InitializeGeometry()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:209:18
    t.method("InitializeGeometry", static_cast<void (G4RunManager::*)() >(&G4RunManager::InitializeGeometry));

    DEBUG_MSG("Adding wrapper for void G4RunManager::InitializePhysics() (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::InitializePhysics()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:210:18
    t.method("InitializePhysics", static_cast<void (G4RunManager::*)() >(&G4RunManager::InitializePhysics));

    DEBUG_MSG("Adding wrapper for G4bool G4RunManager::ConfirmBeamOnCondition() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4RunManager::ConfirmBeamOnCondition()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:227:20
    t.method("ConfirmBeamOnCondition", static_cast<G4bool (G4RunManager::*)() >(&G4RunManager::ConfirmBeamOnCondition));

    DEBUG_MSG("Adding wrapper for void G4RunManager::RunInitialization() (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::RunInitialization()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:228:18
    t.method("RunInitialization", static_cast<void (G4RunManager::*)() >(&G4RunManager::RunInitialization));

    DEBUG_MSG("Adding wrapper for void G4RunManager::DoEventLoop(G4int, const char *, G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::DoEventLoop(G4int, const char *, G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:229:18
    t.method("DoEventLoop", static_cast<void (G4RunManager::*)(G4int, const char *, G4int) >(&G4RunManager::DoEventLoop));
    t.method("DoEventLoop", [](G4RunManager& a, G4int arg0)->void { a.DoEventLoop(arg0); });
    t.method("DoEventLoop", [](G4RunManager& a, G4int arg0, const char * arg1)->void { a.DoEventLoop(arg0, arg1); });
    t.method("DoEventLoop", [](G4RunManager* a, G4int arg0)->void { a->DoEventLoop(arg0); });
    t.method("DoEventLoop", [](G4RunManager* a, G4int arg0, const char * arg1)->void { a->DoEventLoop(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void G4RunManager::RunTermination() (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::RunTermination()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:230:18
    t.method("RunTermination", static_cast<void (G4RunManager::*)() >(&G4RunManager::RunTermination));

    DEBUG_MSG("Adding wrapper for void G4RunManager::InitializeEventLoop(G4int, const char *, G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::InitializeEventLoop(G4int, const char *, G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:233:18
    t.method("InitializeEventLoop", static_cast<void (G4RunManager::*)(G4int, const char *, G4int) >(&G4RunManager::InitializeEventLoop));
    t.method("InitializeEventLoop", [](G4RunManager& a, G4int arg0)->void { a.InitializeEventLoop(arg0); });
    t.method("InitializeEventLoop", [](G4RunManager& a, G4int arg0, const char * arg1)->void { a.InitializeEventLoop(arg0, arg1); });
    t.method("InitializeEventLoop", [](G4RunManager* a, G4int arg0)->void { a->InitializeEventLoop(arg0); });
    t.method("InitializeEventLoop", [](G4RunManager* a, G4int arg0, const char * arg1)->void { a->InitializeEventLoop(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void G4RunManager::ProcessOneEvent(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::ProcessOneEvent(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:235:18
    t.method("ProcessOneEvent", static_cast<void (G4RunManager::*)(G4int) >(&G4RunManager::ProcessOneEvent));

    DEBUG_MSG("Adding wrapper for void G4RunManager::TerminateOneEvent() (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::TerminateOneEvent()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:236:18
    t.method("TerminateOneEvent", static_cast<void (G4RunManager::*)() >(&G4RunManager::TerminateOneEvent));

    DEBUG_MSG("Adding wrapper for void G4RunManager::TerminateEventLoop() (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::TerminateEventLoop()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:237:18
    t.method("TerminateEventLoop", static_cast<void (G4RunManager::*)() >(&G4RunManager::TerminateEventLoop));

    DEBUG_MSG("Adding wrapper for G4Event * G4RunManager::GenerateEvent(G4int) (" __HERE__ ")");
    // signature to use in the veto list: G4Event * G4RunManager::GenerateEvent(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:247:22
    t.method("GenerateEvent", static_cast<G4Event * (G4RunManager::*)(G4int) >(&G4RunManager::GenerateEvent));

    DEBUG_MSG("Adding wrapper for void G4RunManager::AnalyzeEvent(G4Event *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::AnalyzeEvent(G4Event *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:248:18
    t.method("AnalyzeEvent", static_cast<void (G4RunManager::*)(G4Event *) >(&G4RunManager::AnalyzeEvent));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetNumberOfThreads(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetNumberOfThreads(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:252:18
    t.method("SetNumberOfThreads", static_cast<void (G4RunManager::*)(G4int) >(&G4RunManager::SetNumberOfThreads));

    DEBUG_MSG("Adding wrapper for G4int G4RunManager::GetNumberOfThreads() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4RunManager::GetNumberOfThreads()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:253:19
    t.method("GetNumberOfThreads", static_cast<G4int (G4RunManager::*)()  const>(&G4RunManager::GetNumberOfThreads));

    DEBUG_MSG("Adding wrapper for void G4RunManager::DumpRegion(const G4String &) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::DumpRegion(const G4String &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:256:10
    t.method("DumpRegion", static_cast<void (G4RunManager::*)(const G4String &)  const>(&G4RunManager::DumpRegion));

    DEBUG_MSG("Adding wrapper for void G4RunManager::DumpRegion(G4Region *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::DumpRegion(G4Region *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:260:10
    t.method("DumpRegion", static_cast<void (G4RunManager::*)(G4Region *)  const>(&G4RunManager::DumpRegion));
    t.method("DumpRegion", [](G4RunManager const& a)->void { a.DumpRegion(); });
    t.method("DumpRegion", [](G4RunManager const* a)->void { a->DumpRegion(); });

    DEBUG_MSG("Adding wrapper for void G4RunManager::GeometryHasBeenModified(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::GeometryHasBeenModified(G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:268:10
    t.method("GeometryHasBeenModified", static_cast<void (G4RunManager::*)(G4bool) >(&G4RunManager::GeometryHasBeenModified));
    t.method("GeometryHasBeenModified", [](G4RunManager& a)->void { a.GeometryHasBeenModified(); });
    t.method("GeometryHasBeenModified", [](G4RunManager* a)->void { a->GeometryHasBeenModified(); });

    DEBUG_MSG("Adding wrapper for void G4RunManager::ReinitializeGeometry(G4bool, G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::ReinitializeGeometry(G4bool, G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:279:10
    t.method("ReinitializeGeometry", static_cast<void (G4RunManager::*)(G4bool, G4bool) >(&G4RunManager::ReinitializeGeometry));
    t.method("ReinitializeGeometry", [](G4RunManager& a)->void { a.ReinitializeGeometry(); });
    t.method("ReinitializeGeometry", [](G4RunManager& a, G4bool arg0)->void { a.ReinitializeGeometry(arg0); });
    t.method("ReinitializeGeometry", [](G4RunManager* a)->void { a->ReinitializeGeometry(); });
    t.method("ReinitializeGeometry", [](G4RunManager* a, G4bool arg0)->void { a->ReinitializeGeometry(arg0); });

    DEBUG_MSG("Adding wrapper for void G4RunManager::PhysicsHasBeenModified() (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::PhysicsHasBeenModified()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:286:17
    t.method("PhysicsHasBeenModified", static_cast<void (G4RunManager::*)() >(&G4RunManager::PhysicsHasBeenModified));

    DEBUG_MSG("Adding wrapper for void G4RunManager::CutOffHasBeenModified() (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::CutOffHasBeenModified()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:288:17
    t.method("CutOffHasBeenModified", static_cast<void (G4RunManager::*)() >(&G4RunManager::CutOffHasBeenModified));

    DEBUG_MSG("Adding wrapper for void G4RunManager::ReOptimizeMotherOf(G4VPhysicalVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::ReOptimizeMotherOf(G4VPhysicalVolume *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:299:10
    t.method("ReOptimizeMotherOf", static_cast<void (G4RunManager::*)(G4VPhysicalVolume *) >(&G4RunManager::ReOptimizeMotherOf));

    DEBUG_MSG("Adding wrapper for void G4RunManager::ReOptimize(G4LogicalVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::ReOptimize(G4LogicalVolume *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:302:10
    t.method("ReOptimize", static_cast<void (G4RunManager::*)(G4LogicalVolume *) >(&G4RunManager::ReOptimize));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetGeometryToBeOptimized(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetGeometryToBeOptimized(G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:304:17
    t.method("SetGeometryToBeOptimized", static_cast<void (G4RunManager::*)(G4bool) >(&G4RunManager::SetGeometryToBeOptimized));

    DEBUG_MSG("Adding wrapper for G4bool G4RunManager::GetGeometryToBeOptimized() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4RunManager::GetGeometryToBeOptimized()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:312:19
    t.method("GetGeometryToBeOptimized", static_cast<G4bool (G4RunManager::*)() >(&G4RunManager::GetGeometryToBeOptimized));

    DEBUG_MSG("Adding wrapper for void G4RunManager::GeometryDirectlyUpdated(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::GeometryDirectlyUpdated(G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:314:10
    t.method("GeometryDirectlyUpdated", static_cast<void (G4RunManager::*)(G4bool) >(&G4RunManager::GeometryDirectlyUpdated));
    t.method("GeometryDirectlyUpdated", [](G4RunManager& a)->void { a.GeometryDirectlyUpdated(); });
    t.method("GeometryDirectlyUpdated", [](G4RunManager* a)->void { a->GeometryDirectlyUpdated(); });

    DEBUG_MSG("Adding wrapper for G4bool G4RunManager::IfGeometryHasBeenDestroyed() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4RunManager::IfGeometryHasBeenDestroyed()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:319:19
    module_.method("G4RunManager!IfGeometryHasBeenDestroyed", static_cast<G4bool (*)() >(&G4RunManager::IfGeometryHasBeenDestroyed));

    DEBUG_MSG("Adding wrapper for void G4RunManager::ConstructScoringWorlds() (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::ConstructScoringWorlds()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:321:18
    t.method("ConstructScoringWorlds", static_cast<void (G4RunManager::*)() >(&G4RunManager::ConstructScoringWorlds));

    DEBUG_MSG("Adding wrapper for void G4RunManager::rndmSaveThisRun() (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::rndmSaveThisRun()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:323:18
    t.method("rndmSaveThisRun", static_cast<void (G4RunManager::*)() >(&G4RunManager::rndmSaveThisRun));

    DEBUG_MSG("Adding wrapper for void G4RunManager::rndmSaveThisEvent() (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::rndmSaveThisEvent()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:324:18
    t.method("rndmSaveThisEvent", static_cast<void (G4RunManager::*)() >(&G4RunManager::rndmSaveThisEvent));

    DEBUG_MSG("Adding wrapper for void G4RunManager::RestoreRandomNumberStatus(const G4String &) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::RestoreRandomNumberStatus(const G4String &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:325:18
    t.method("RestoreRandomNumberStatus", static_cast<void (G4RunManager::*)(const G4String &) >(&G4RunManager::RestoreRandomNumberStatus));

    DEBUG_MSG("Adding wrapper for void G4RunManager::RestoreRndmEachEvent(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::RestoreRndmEachEvent(G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:326:18
    t.method("RestoreRndmEachEvent", static_cast<void (G4RunManager::*)(G4bool) >(&G4RunManager::RestoreRndmEachEvent));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetUserInitialization(G4VUserDetectorConstruction *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetUserInitialization(G4VUserDetectorConstruction *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:342:18
    t.method("SetUserInitialization", static_cast<void (G4RunManager::*)(G4VUserDetectorConstruction *) >(&G4RunManager::SetUserInitialization));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetUserInitialization(G4VUserPhysicsList *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetUserInitialization(G4VUserPhysicsList *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:343:18
    t.method("SetUserInitialization", static_cast<void (G4RunManager::*)(G4VUserPhysicsList *) >(&G4RunManager::SetUserInitialization));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetUserInitialization(G4VUserActionInitialization *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetUserInitialization(G4VUserActionInitialization *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:344:18
    t.method("SetUserInitialization", static_cast<void (G4RunManager::*)(G4VUserActionInitialization *) >(&G4RunManager::SetUserInitialization));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetUserInitialization(G4UserWorkerInitialization *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetUserInitialization(G4UserWorkerInitialization *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:345:18
    t.method("SetUserInitialization", static_cast<void (G4RunManager::*)(G4UserWorkerInitialization *) >(&G4RunManager::SetUserInitialization));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetUserAction(G4UserRunAction *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetUserAction(G4UserRunAction *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:347:18
    t.method("SetUserAction", static_cast<void (G4RunManager::*)(G4UserRunAction *) >(&G4RunManager::SetUserAction));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetUserAction(G4VUserPrimaryGeneratorAction *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetUserAction(G4VUserPrimaryGeneratorAction *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:348:18
    t.method("SetUserAction", static_cast<void (G4RunManager::*)(G4VUserPrimaryGeneratorAction *) >(&G4RunManager::SetUserAction));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetUserAction(G4UserEventAction *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetUserAction(G4UserEventAction *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:349:18
    t.method("SetUserAction", static_cast<void (G4RunManager::*)(G4UserEventAction *) >(&G4RunManager::SetUserAction));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetUserAction(G4UserStackingAction *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetUserAction(G4UserStackingAction *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:350:18
    t.method("SetUserAction", static_cast<void (G4RunManager::*)(G4UserStackingAction *) >(&G4RunManager::SetUserAction));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetUserAction(G4UserTrackingAction *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetUserAction(G4UserTrackingAction *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:351:18
    t.method("SetUserAction", static_cast<void (G4RunManager::*)(G4UserTrackingAction *) >(&G4RunManager::SetUserAction));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetUserAction(G4UserSteppingAction *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetUserAction(G4UserSteppingAction *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:352:18
    t.method("SetUserAction", static_cast<void (G4RunManager::*)(G4UserSteppingAction *) >(&G4RunManager::SetUserAction));

    DEBUG_MSG("Adding wrapper for const G4VUserDetectorConstruction * G4RunManager::GetUserDetectorConstruction() (" __HERE__ ")");
    // signature to use in the veto list: const G4VUserDetectorConstruction * G4RunManager::GetUserDetectorConstruction()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:355:47
    t.method("GetUserDetectorConstruction", static_cast<const G4VUserDetectorConstruction * (G4RunManager::*)()  const>(&G4RunManager::GetUserDetectorConstruction));

    DEBUG_MSG("Adding wrapper for const G4VUserPhysicsList * G4RunManager::GetUserPhysicsList() (" __HERE__ ")");
    // signature to use in the veto list: const G4VUserPhysicsList * G4RunManager::GetUserPhysicsList()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:359:38
    t.method("GetUserPhysicsList", static_cast<const G4VUserPhysicsList * (G4RunManager::*)()  const>(&G4RunManager::GetUserPhysicsList));

    DEBUG_MSG("Adding wrapper for const G4VUserActionInitialization * G4RunManager::GetUserActionInitialization() (" __HERE__ ")");
    // signature to use in the veto list: const G4VUserActionInitialization * G4RunManager::GetUserActionInitialization()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:360:47
    t.method("GetUserActionInitialization", static_cast<const G4VUserActionInitialization * (G4RunManager::*)()  const>(&G4RunManager::GetUserActionInitialization));

    DEBUG_MSG("Adding wrapper for G4VUserActionInitialization * G4RunManager::GetNonConstUserActionInitialization() (" __HERE__ ")");
    // signature to use in the veto list: G4VUserActionInitialization * G4RunManager::GetNonConstUserActionInitialization()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:364:41
    t.method("GetNonConstUserActionInitialization", static_cast<G4VUserActionInitialization * (G4RunManager::*)()  const>(&G4RunManager::GetNonConstUserActionInitialization));

    DEBUG_MSG("Adding wrapper for const G4UserWorkerInitialization * G4RunManager::GetUserWorkerInitialization() (" __HERE__ ")");
    // signature to use in the veto list: const G4UserWorkerInitialization * G4RunManager::GetUserWorkerInitialization()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:368:46
    t.method("GetUserWorkerInitialization", static_cast<const G4UserWorkerInitialization * (G4RunManager::*)()  const>(&G4RunManager::GetUserWorkerInitialization));

    DEBUG_MSG("Adding wrapper for const G4UserRunAction * G4RunManager::GetUserRunAction() (" __HERE__ ")");
    // signature to use in the veto list: const G4UserRunAction * G4RunManager::GetUserRunAction()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:376:35
    t.method("GetUserRunAction", static_cast<const G4UserRunAction * (G4RunManager::*)()  const>(&G4RunManager::GetUserRunAction));

    DEBUG_MSG("Adding wrapper for const G4VUserPrimaryGeneratorAction * G4RunManager::GetUserPrimaryGeneratorAction() (" __HERE__ ")");
    // signature to use in the veto list: const G4VUserPrimaryGeneratorAction * G4RunManager::GetUserPrimaryGeneratorAction()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:377:49
    t.method("GetUserPrimaryGeneratorAction", static_cast<const G4VUserPrimaryGeneratorAction * (G4RunManager::*)()  const>(&G4RunManager::GetUserPrimaryGeneratorAction));

    DEBUG_MSG("Adding wrapper for const G4UserEventAction * G4RunManager::GetUserEventAction() (" __HERE__ ")");
    // signature to use in the veto list: const G4UserEventAction * G4RunManager::GetUserEventAction()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:381:37
    t.method("GetUserEventAction", static_cast<const G4UserEventAction * (G4RunManager::*)()  const>(&G4RunManager::GetUserEventAction));

    DEBUG_MSG("Adding wrapper for const G4UserStackingAction * G4RunManager::GetUserStackingAction() (" __HERE__ ")");
    // signature to use in the veto list: const G4UserStackingAction * G4RunManager::GetUserStackingAction()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:382:40
    t.method("GetUserStackingAction", static_cast<const G4UserStackingAction * (G4RunManager::*)()  const>(&G4RunManager::GetUserStackingAction));

    DEBUG_MSG("Adding wrapper for const G4UserTrackingAction * G4RunManager::GetUserTrackingAction() (" __HERE__ ")");
    // signature to use in the veto list: const G4UserTrackingAction * G4RunManager::GetUserTrackingAction()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:383:40
    t.method("GetUserTrackingAction", static_cast<const G4UserTrackingAction * (G4RunManager::*)()  const>(&G4RunManager::GetUserTrackingAction));

    DEBUG_MSG("Adding wrapper for const G4UserSteppingAction * G4RunManager::GetUserSteppingAction() (" __HERE__ ")");
    // signature to use in the veto list: const G4UserSteppingAction * G4RunManager::GetUserSteppingAction()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:384:40
    t.method("GetUserSteppingAction", static_cast<const G4UserSteppingAction * (G4RunManager::*)()  const>(&G4RunManager::GetUserSteppingAction));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetNumberOfAdditionalWaitingStacks(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetNumberOfAdditionalWaitingStacks(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:390:17
    t.method("SetNumberOfAdditionalWaitingStacks", static_cast<void (G4RunManager::*)(G4int) >(&G4RunManager::SetNumberOfAdditionalWaitingStacks));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetDefaultClassification(G4TrackStatus, G4ClassificationOfNewTrack, G4ExceptionSeverity) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetDefaultClassification(G4TrackStatus, G4ClassificationOfNewTrack, G4ExceptionSeverity)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:399:17
    t.method("SetDefaultClassification", static_cast<void (G4RunManager::*)(G4TrackStatus, G4ClassificationOfNewTrack, G4ExceptionSeverity) >(&G4RunManager::SetDefaultClassification));
    t.method("SetDefaultClassification", [](G4RunManager& a, G4TrackStatus arg0, G4ClassificationOfNewTrack arg1)->void { a.SetDefaultClassification(arg0, arg1); });
    t.method("SetDefaultClassification", [](G4RunManager* a, G4TrackStatus arg0, G4ClassificationOfNewTrack arg1)->void { a->SetDefaultClassification(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetDefaultClassification(const G4ParticleDefinition *, G4ClassificationOfNewTrack, G4ExceptionSeverity) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetDefaultClassification(const G4ParticleDefinition *, G4ClassificationOfNewTrack, G4ExceptionSeverity)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:403:17
    t.method("SetDefaultClassification", static_cast<void (G4RunManager::*)(const G4ParticleDefinition *, G4ClassificationOfNewTrack, G4ExceptionSeverity) >(&G4RunManager::SetDefaultClassification));
    t.method("SetDefaultClassification", [](G4RunManager& a, const G4ParticleDefinition * arg0, G4ClassificationOfNewTrack arg1)->void { a.SetDefaultClassification(arg0, arg1); });
    t.method("SetDefaultClassification", [](G4RunManager* a, const G4ParticleDefinition * arg0, G4ClassificationOfNewTrack arg1)->void { a->SetDefaultClassification(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for const G4String & G4RunManager::GetVersionString() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4RunManager::GetVersionString()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:409:28
    t.method("GetVersionString", static_cast<const G4String & (G4RunManager::*)()  const>(&G4RunManager::GetVersionString));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetPrimaryTransformer(G4PrimaryTransformer *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetPrimaryTransformer(G4PrimaryTransformer *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:411:17
    t.method("SetPrimaryTransformer", static_cast<void (G4RunManager::*)(G4PrimaryTransformer *) >(&G4RunManager::SetPrimaryTransformer));

    DEBUG_MSG("Adding wrapper for void G4RunManager::StoreRandomNumberStatusToG4Event(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::StoreRandomNumberStatusToG4Event(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:421:17
    t.method("StoreRandomNumberStatusToG4Event", static_cast<void (G4RunManager::*)(G4int) >(&G4RunManager::StoreRandomNumberStatusToG4Event));

    DEBUG_MSG("Adding wrapper for G4int G4RunManager::GetFlagRandomNumberStatusToG4Event() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4RunManager::GetFlagRandomNumberStatusToG4Event()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:427:18
    t.method("GetFlagRandomNumberStatusToG4Event", static_cast<G4int (G4RunManager::*)()  const>(&G4RunManager::GetFlagRandomNumberStatusToG4Event));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetRandomNumberStore(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetRandomNumberStore(G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:432:17
    t.method("SetRandomNumberStore", static_cast<void (G4RunManager::*)(G4bool) >(&G4RunManager::SetRandomNumberStore));

    DEBUG_MSG("Adding wrapper for G4bool G4RunManager::GetRandomNumberStore() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4RunManager::GetRandomNumberStore()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:433:19
    t.method("GetRandomNumberStore", static_cast<G4bool (G4RunManager::*)()  const>(&G4RunManager::GetRandomNumberStore));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetRandomNumberStoreDir(const G4String &) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetRandomNumberStoreDir(const G4String &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:434:17
    t.method("SetRandomNumberStoreDir", static_cast<void (G4RunManager::*)(const G4String &) >(&G4RunManager::SetRandomNumberStoreDir));

    DEBUG_MSG("Adding wrapper for const G4String & G4RunManager::GetRandomNumberStoreDir() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4RunManager::GetRandomNumberStoreDir()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:453:28
    t.method("GetRandomNumberStoreDir", static_cast<const G4String & (G4RunManager::*)()  const>(&G4RunManager::GetRandomNumberStoreDir));

    DEBUG_MSG("Adding wrapper for const G4String & G4RunManager::GetRandomNumberStatusForThisRun() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4RunManager::GetRandomNumberStatusForThisRun()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:454:28
    t.method("GetRandomNumberStatusForThisRun", static_cast<const G4String & (G4RunManager::*)()  const>(&G4RunManager::GetRandomNumberStatusForThisRun));

    DEBUG_MSG("Adding wrapper for const G4String & G4RunManager::GetRandomNumberStatusForThisEvent() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4RunManager::GetRandomNumberStatusForThisEvent()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:458:28
    t.method("GetRandomNumberStatusForThisEvent", static_cast<const G4String & (G4RunManager::*)()  const>(&G4RunManager::GetRandomNumberStatusForThisEvent));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetRandomNumberStorePerEvent(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetRandomNumberStorePerEvent(G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:466:17
    t.method("SetRandomNumberStorePerEvent", static_cast<void (G4RunManager::*)(G4bool) >(&G4RunManager::SetRandomNumberStorePerEvent));

    DEBUG_MSG("Adding wrapper for G4bool G4RunManager::GetRandomNumberStorePerEvent() (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4RunManager::GetRandomNumberStorePerEvent()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:467:19
    t.method("GetRandomNumberStorePerEvent", static_cast<G4bool (G4RunManager::*)()  const>(&G4RunManager::GetRandomNumberStorePerEvent));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetVerboseLevel(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetVerboseLevel(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:469:17
    t.method("SetVerboseLevel", static_cast<void (G4RunManager::*)(G4int) >(&G4RunManager::SetVerboseLevel));

    DEBUG_MSG("Adding wrapper for G4int G4RunManager::GetVerboseLevel() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4RunManager::GetVerboseLevel()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:474:18
    t.method("GetVerboseLevel", static_cast<G4int (G4RunManager::*)()  const>(&G4RunManager::GetVerboseLevel));

    DEBUG_MSG("Adding wrapper for G4int G4RunManager::GetPrintProgress() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4RunManager::GetPrintProgress()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:475:18
    t.method("GetPrintProgress", static_cast<G4int (G4RunManager::*)() >(&G4RunManager::GetPrintProgress));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetPrintProgress(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetPrintProgress(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:476:17
    t.method("SetPrintProgress", static_cast<void (G4RunManager::*)(G4int) >(&G4RunManager::SetPrintProgress));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetNumberOfEventsToBeStored(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetNumberOfEventsToBeStored(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:482:17
    t.method("SetNumberOfEventsToBeStored", static_cast<void (G4RunManager::*)(G4int) >(&G4RunManager::SetNumberOfEventsToBeStored));

    DEBUG_MSG("Adding wrapper for const G4Run * G4RunManager::GetCurrentRun() (" __HERE__ ")");
    // signature to use in the veto list: const G4Run * G4RunManager::GetCurrentRun()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:486:25
    t.method("GetCurrentRun", static_cast<const G4Run * (G4RunManager::*)()  const>(&G4RunManager::GetCurrentRun));

    DEBUG_MSG("Adding wrapper for G4Run * G4RunManager::GetNonConstCurrentRun() (" __HERE__ ")");
    // signature to use in the veto list: G4Run * G4RunManager::GetNonConstCurrentRun()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:487:19
    t.method("GetNonConstCurrentRun", static_cast<G4Run * (G4RunManager::*)()  const>(&G4RunManager::GetNonConstCurrentRun));

    DEBUG_MSG("Adding wrapper for const G4Event * G4RunManager::GetCurrentEvent() (" __HERE__ ")");
    // signature to use in the veto list: const G4Event * G4RunManager::GetCurrentEvent()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:491:27
    t.method("GetCurrentEvent", static_cast<const G4Event * (G4RunManager::*)()  const>(&G4RunManager::GetCurrentEvent));

    DEBUG_MSG("Adding wrapper for const G4Event * G4RunManager::GetPreviousEvent(G4int) (" __HERE__ ")");
    // signature to use in the veto list: const G4Event * G4RunManager::GetPreviousEvent(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:498:27
    t.method("GetPreviousEvent", static_cast<const G4Event * (G4RunManager::*)(G4int)  const>(&G4RunManager::GetPreviousEvent));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetRunIDCounter(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetRunIDCounter(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:512:17
    t.method("SetRunIDCounter", static_cast<void (G4RunManager::*)(G4int) >(&G4RunManager::SetRunIDCounter));

    DEBUG_MSG("Adding wrapper for G4int G4RunManager::GetNumberOfParallelWorld() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4RunManager::GetNumberOfParallelWorld()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:514:18
    t.method("GetNumberOfParallelWorld", static_cast<G4int (G4RunManager::*)()  const>(&G4RunManager::GetNumberOfParallelWorld));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetNumberOfEventsToBeProcessed(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetNumberOfEventsToBeProcessed(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:515:17
    t.method("SetNumberOfEventsToBeProcessed", static_cast<void (G4RunManager::*)(G4int) >(&G4RunManager::SetNumberOfEventsToBeProcessed));

    DEBUG_MSG("Adding wrapper for G4int G4RunManager::GetNumberOfEventsToBeProcessed() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4RunManager::GetNumberOfEventsToBeProcessed()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:516:18
    t.method("GetNumberOfEventsToBeProcessed", static_cast<G4int (G4RunManager::*)()  const>(&G4RunManager::GetNumberOfEventsToBeProcessed));

    DEBUG_MSG("Adding wrapper for G4int G4RunManager::GetNumberOfSelectEvents() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4RunManager::GetNumberOfSelectEvents()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:517:18
    t.method("GetNumberOfSelectEvents", static_cast<G4int (G4RunManager::*)()  const>(&G4RunManager::GetNumberOfSelectEvents));

    DEBUG_MSG("Adding wrapper for const G4String & G4RunManager::GetSelectMacro() (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4RunManager::GetSelectMacro()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:518:28
    t.method("GetSelectMacro", static_cast<const G4String & (G4RunManager::*)()  const>(&G4RunManager::GetSelectMacro));

    DEBUG_MSG("Adding wrapper for G4RunManager::RMType G4RunManager::GetRunManagerType() (" __HERE__ ")");
    // signature to use in the veto list: G4RunManager::RMType G4RunManager::GetRunManagerType()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:530:19
    t.method("GetRunManagerType", static_cast<G4RunManager::RMType (G4RunManager::*)()  const>(&G4RunManager::GetRunManagerType));

    DEBUG_MSG("Adding wrapper for void G4RunManager::RegisterSubEventType(G4int, G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::RegisterSubEventType(G4int, G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:534:18
    t.method("RegisterSubEventType", static_cast<void (G4RunManager::*)(G4int, G4int) >(&G4RunManager::RegisterSubEventType));

    DEBUG_MSG("Adding wrapper for void G4RunManager::MergeTrajectories(const G4SubEvent *, const G4Event *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::MergeTrajectories(const G4SubEvent *, const G4Event *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:539:18
    t.method("MergeTrajectories", static_cast<void (G4RunManager::*)(const G4SubEvent *, const G4Event *) >(&G4RunManager::MergeTrajectories));

    DEBUG_MSG("Adding wrapper for void G4RunManager::UpdateScoringForSubEvent(const G4SubEvent *, const G4Event *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::UpdateScoringForSubEvent(const G4SubEvent *, const G4Event *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:544:18
    t.method("UpdateScoringForSubEvent", static_cast<void (G4RunManager::*)(const G4SubEvent *, const G4Event *) >(&G4RunManager::UpdateScoringForSubEvent));

    DEBUG_MSG("Adding wrapper for const G4SubEvent * G4RunManager::GetSubEvent(G4int, G4bool &, G4long &, G4long &, G4long &, G4bool) (" __HERE__ ")");
    // signature to use in the veto list: const G4SubEvent * G4RunManager::GetSubEvent(G4int, G4bool &, G4long &, G4long &, G4long &, G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:549:31
    t.method("GetSubEvent", static_cast<const G4SubEvent * (G4RunManager::*)(G4int, G4bool &, G4long &, G4long &, G4long &, G4bool) >(&G4RunManager::GetSubEvent));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SubEventFinished(const G4SubEvent *, const G4Event *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SubEventFinished(const G4SubEvent *, const G4Event *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:556:18
    t.method("SubEventFinished", static_cast<void (G4RunManager::*)(const G4SubEvent *, const G4Event *) >(&G4RunManager::SubEventFinished));

    DEBUG_MSG("Adding wrapper for G4int G4RunManager::GetSubEventType() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4RunManager::GetSubEventType()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:561:19
    t.method("GetSubEventType", static_cast<G4int (G4RunManager::*)()  const>(&G4RunManager::GetSubEventType));

    DEBUG_MSG("Adding wrapper for void G4RunManager::SetSubEventType(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::SetSubEventType(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:567:18
    t.method("SetSubEventType", static_cast<void (G4RunManager::*)(G4int) >(&G4RunManager::SetSubEventType));

    DEBUG_MSG("Adding wrapper for void G4RunManager::TrajectoriesToBeMerged(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::TrajectoriesToBeMerged(G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:574:18
    t.method("TrajectoriesToBeMerged", static_cast<void (G4RunManager::*)(G4bool) >(&G4RunManager::TrajectoriesToBeMerged));

    DEBUG_MSG("Adding wrapper for void G4RunManager::ReportEventDeletion(const G4Event *) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::ReportEventDeletion(const G4Event *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:580:18
    t.method("ReportEventDeletion", static_cast<void (G4RunManager::*)(const G4Event *) >(&G4RunManager::ReportEventDeletion));

    DEBUG_MSG("Adding wrapper for void G4RunManager::ResetNavigatorAtInitialization(G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4RunManager::ResetNavigatorAtInitialization(G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4RunManager.hh:585:17
    t.method("ResetNavigatorAtInitialization", static_cast<void (G4RunManager::*)(G4bool) >(&G4RunManager::ResetNavigatorAtInitialization));
    t.method("ResetNavigatorAtInitialization", [](G4RunManager& a)->void { a.ResetNavigatorAtInitialization(); });
    t.method("ResetNavigatorAtInitialization", [](G4RunManager* a)->void { a->ResetNavigatorAtInitialization(); });
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4RunManager>> type_;
};
std::shared_ptr<Wrapper> newJlG4RunManager(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4RunManager(module));
}
