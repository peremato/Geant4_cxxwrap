// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<CLHEP::HepLorentzRotation> : std::false_type { };
  template<> struct DefaultConstructible<CLHEP::HepLorentzRotation> : std::false_type { };
}

// Class generating the wrapper for type CLHEP::HepLorentzRotation
// signature to use in the veto file: CLHEP::HepLorentzRotation
struct JlCLHEP_HepLorentzRotation: public Wrapper {

  JlCLHEP_HepLorentzRotation(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type CLHEP::HepLorentzRotation (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:48:7
    jlcxx::TypeWrapper<CLHEP::HepLorentzRotation>  t = jlModule.add_type<CLHEP::HepLorentzRotation>("CLHEP!HepLorentzRotation");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<CLHEP::HepLorentzRotation>>(new jlcxx::TypeWrapper<CLHEP::HepLorentzRotation>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;
    t.template constructor<>(/*finalize=*/jlcxx::finalize_policy::yes    );


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:60:11
    t.constructor<const CLHEP::HepLorentzRotation &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("r")    );



    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::HepRotation &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:64:20
    t.constructor<const CLHEP::HepRotation &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("r")    );


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::HepRotationX &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:65:20
    t.constructor<const CLHEP::HepRotationX &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("r")    );


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::HepRotationY &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:66:20
    t.constructor<const CLHEP::HepRotationY &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("r")    );


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::HepRotationZ &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:67:20
    t.constructor<const CLHEP::HepRotationZ &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("r")    );


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::HepBoost &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:68:20
    t.constructor<const CLHEP::HepBoost &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("b")    );


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::HepBoostX &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:69:20
    t.constructor<const CLHEP::HepBoostX &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("b")    );


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::HepBoostY &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:70:20
    t.constructor<const CLHEP::HepBoostY &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("b")    );


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::HepBoostZ &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:71:20
    t.constructor<const CLHEP::HepBoostZ &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("b")    );


    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::operator=(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::operator=(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:75:31
    t.method("assign", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepLorentzRotation & arg0)->CLHEP::HepLorentzRotation & { return a.operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("m"));
    t.method("assign", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepLorentzRotation & arg0)->CLHEP::HepLorentzRotation & { return a->operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("m"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::operator=(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::operator=(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:76:31
    t.method("assign", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepRotation & arg0)->CLHEP::HepLorentzRotation & { return a.operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("m"));
    t.method("assign", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepRotation & arg0)->CLHEP::HepLorentzRotation & { return a->operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("m"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::operator=(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::operator=(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:77:31
    t.method("assign", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepBoost & arg0)->CLHEP::HepLorentzRotation & { return a.operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("m"));
    t.method("assign", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepBoost & arg0)->CLHEP::HepLorentzRotation & { return a->operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("m"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(double, double, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:80:31
    t.method("set", [](CLHEP::HepLorentzRotation& a, double arg0, double arg1, double arg2)->CLHEP::HepLorentzRotation & { return a.set(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("bx"), jlcxx::arg("by"), jlcxx::arg("bz"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, double arg0, double arg1, double arg2)->CLHEP::HepLorentzRotation & { return a->set(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("bx"), jlcxx::arg("by"), jlcxx::arg("bz"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:81:31
    t.method("set", [](CLHEP::HepLorentzRotation& a, const CLHEP::Hep3Vector & arg0)->CLHEP::HepLorentzRotation & { return a.set(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, const CLHEP::Hep3Vector & arg0)->CLHEP::HepLorentzRotation & { return a->set(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:82:31
    t.method("set", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepRotation & arg0)->CLHEP::HepLorentzRotation & { return a.set(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepRotation & arg0)->CLHEP::HepLorentzRotation & { return a->set(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepRotationX &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepRotationX &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:83:31
    t.method("set", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepRotationX & arg0)->CLHEP::HepLorentzRotation & { return a.set(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepRotationX & arg0)->CLHEP::HepLorentzRotation & { return a->set(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepRotationY &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepRotationY &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:84:31
    t.method("set", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepRotationY & arg0)->CLHEP::HepLorentzRotation & { return a.set(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepRotationY & arg0)->CLHEP::HepLorentzRotation & { return a->set(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepRotationZ &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepRotationZ &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:85:31
    t.method("set", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepRotationZ & arg0)->CLHEP::HepLorentzRotation & { return a.set(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepRotationZ & arg0)->CLHEP::HepLorentzRotation & { return a->set(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:86:31
    t.method("set", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepBoost & arg0)->CLHEP::HepLorentzRotation & { return a.set(arg0); }, jlcxx::arg("this"), jlcxx::arg("boost"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepBoost & arg0)->CLHEP::HepLorentzRotation & { return a->set(arg0); }, jlcxx::arg("this"), jlcxx::arg("boost"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepBoostX &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepBoostX &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:87:31
    t.method("set", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepBoostX & arg0)->CLHEP::HepLorentzRotation & { return a.set(arg0); }, jlcxx::arg("this"), jlcxx::arg("boost"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepBoostX & arg0)->CLHEP::HepLorentzRotation & { return a->set(arg0); }, jlcxx::arg("this"), jlcxx::arg("boost"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepBoostY &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepBoostY &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:88:31
    t.method("set", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepBoostY & arg0)->CLHEP::HepLorentzRotation & { return a.set(arg0); }, jlcxx::arg("this"), jlcxx::arg("boost"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepBoostY & arg0)->CLHEP::HepLorentzRotation & { return a->set(arg0); }, jlcxx::arg("this"), jlcxx::arg("boost"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepBoostZ &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepBoostZ &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:89:31
    t.method("set", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepBoostZ & arg0)->CLHEP::HepLorentzRotation & { return a.set(arg0); }, jlcxx::arg("this"), jlcxx::arg("boost"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepBoostZ & arg0)->CLHEP::HepLorentzRotation & { return a->set(arg0); }, jlcxx::arg("this"), jlcxx::arg("boost"));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(double, double, double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:90:10
    t.constructor<double, double, double>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("bx"), jlcxx::arg("by"), jlcxx::arg("bz")    );


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:91:10
    t.constructor<const CLHEP::Hep3Vector &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("p")    );

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepBoost &, const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepBoost &, const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:94:31
    t.method("set", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepBoost & arg0, const CLHEP::HepRotation & arg1)->CLHEP::HepLorentzRotation & { return a.set(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("B"), jlcxx::arg("R"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepBoost & arg0, const CLHEP::HepRotation & arg1)->CLHEP::HepLorentzRotation & { return a->set(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("B"), jlcxx::arg("R"));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::HepBoost &, const CLHEP::HepRotation &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:95:10
    t.constructor<const CLHEP::HepBoost &, const CLHEP::HepRotation &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("B"), jlcxx::arg("R")    );

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepRotation &, const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepRotation &, const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:98:31
    t.method("set", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepRotation & arg0, const CLHEP::HepBoost & arg1)->CLHEP::HepLorentzRotation & { return a.set(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("R"), jlcxx::arg("B"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepRotation & arg0, const CLHEP::HepBoost & arg1)->CLHEP::HepLorentzRotation & { return a->set(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("R"), jlcxx::arg("B"));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::HepRotation &, const CLHEP::HepBoost &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:99:10
    t.constructor<const CLHEP::HepRotation &, const CLHEP::HepBoost &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("R"), jlcxx::arg("B")    );


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:102:3
    t.constructor<const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("col1"), jlcxx::arg("col2"), jlcxx::arg("col3"), jlcxx::arg("col4")    );

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:116:24
    t.method("set", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepLorentzVector & arg0, const CLHEP::HepLorentzVector & arg1, const CLHEP::HepLorentzVector & arg2, const CLHEP::HepLorentzVector & arg3)->CLHEP::HepLorentzRotation & { return a.set(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("col1"), jlcxx::arg("col2"), jlcxx::arg("col3"), jlcxx::arg("col4"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepLorentzVector & arg0, const CLHEP::HepLorentzVector & arg1, const CLHEP::HepLorentzVector & arg2, const CLHEP::HepLorentzVector & arg3)->CLHEP::HepLorentzRotation & { return a->set(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("col1"), jlcxx::arg("col2"), jlcxx::arg("col3"), jlcxx::arg("col4"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::setRows(const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::setRows(const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &, const CLHEP::HepLorentzVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:122:24
    t.method("setRows", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepLorentzVector & arg0, const CLHEP::HepLorentzVector & arg1, const CLHEP::HepLorentzVector & arg2, const CLHEP::HepLorentzVector & arg3)->CLHEP::HepLorentzRotation & { return a.setRows(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("row1"), jlcxx::arg("row2"), jlcxx::arg("row3"), jlcxx::arg("row4"));
    t.method("setRows", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepLorentzVector & arg0, const CLHEP::HepLorentzVector & arg1, const CLHEP::HepLorentzVector & arg2, const CLHEP::HepLorentzVector & arg3)->CLHEP::HepLorentzRotation & { return a->setRows(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("row1"), jlcxx::arg("row2"), jlcxx::arg("row3"), jlcxx::arg("row4"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepRep4x4 &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::set(const CLHEP::HepRep4x4 &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:128:31
    t.method("set", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepRep4x4 & arg0)->CLHEP::HepLorentzRotation & { return a.set(arg0); }, jlcxx::arg("this"), jlcxx::arg("rep"));
    t.method("set", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepRep4x4 & arg0)->CLHEP::HepLorentzRotation & { return a->set(arg0); }, jlcxx::arg("this"), jlcxx::arg("rep"));


    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::HepLorentzRotation(const CLHEP::HepRep4x4 &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:129:10
    t.constructor<const CLHEP::HepRep4x4 &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("rep")    );

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::xx() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::xx()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:141:17
    t.method("xx", [](CLHEP::HepLorentzRotation const& a)->double { return a.xx(); }, jlcxx::arg("this"));
    t.method("xx", [](CLHEP::HepLorentzRotation const* a)->double { return a->xx(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::xy() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::xy()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:142:17
    t.method("xy", [](CLHEP::HepLorentzRotation const& a)->double { return a.xy(); }, jlcxx::arg("this"));
    t.method("xy", [](CLHEP::HepLorentzRotation const* a)->double { return a->xy(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::xz() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::xz()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:143:17
    t.method("xz", [](CLHEP::HepLorentzRotation const& a)->double { return a.xz(); }, jlcxx::arg("this"));
    t.method("xz", [](CLHEP::HepLorentzRotation const* a)->double { return a->xz(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::xt() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::xt()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:144:17
    t.method("xt", [](CLHEP::HepLorentzRotation const& a)->double { return a.xt(); }, jlcxx::arg("this"));
    t.method("xt", [](CLHEP::HepLorentzRotation const* a)->double { return a->xt(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::yx() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::yx()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:145:17
    t.method("yx", [](CLHEP::HepLorentzRotation const& a)->double { return a.yx(); }, jlcxx::arg("this"));
    t.method("yx", [](CLHEP::HepLorentzRotation const* a)->double { return a->yx(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::yy() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::yy()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:146:17
    t.method("yy", [](CLHEP::HepLorentzRotation const& a)->double { return a.yy(); }, jlcxx::arg("this"));
    t.method("yy", [](CLHEP::HepLorentzRotation const* a)->double { return a->yy(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::yz() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::yz()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:147:17
    t.method("yz", [](CLHEP::HepLorentzRotation const& a)->double { return a.yz(); }, jlcxx::arg("this"));
    t.method("yz", [](CLHEP::HepLorentzRotation const* a)->double { return a->yz(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::yt() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::yt()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:148:17
    t.method("yt", [](CLHEP::HepLorentzRotation const& a)->double { return a.yt(); }, jlcxx::arg("this"));
    t.method("yt", [](CLHEP::HepLorentzRotation const* a)->double { return a->yt(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::zx() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::zx()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:149:17
    t.method("zx", [](CLHEP::HepLorentzRotation const& a)->double { return a.zx(); }, jlcxx::arg("this"));
    t.method("zx", [](CLHEP::HepLorentzRotation const* a)->double { return a->zx(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::zy() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::zy()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:150:17
    t.method("zy", [](CLHEP::HepLorentzRotation const& a)->double { return a.zy(); }, jlcxx::arg("this"));
    t.method("zy", [](CLHEP::HepLorentzRotation const* a)->double { return a->zy(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::zz() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::zz()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:151:17
    t.method("zz", [](CLHEP::HepLorentzRotation const& a)->double { return a.zz(); }, jlcxx::arg("this"));
    t.method("zz", [](CLHEP::HepLorentzRotation const* a)->double { return a->zz(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::zt() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::zt()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:152:17
    t.method("zt", [](CLHEP::HepLorentzRotation const& a)->double { return a.zt(); }, jlcxx::arg("this"));
    t.method("zt", [](CLHEP::HepLorentzRotation const* a)->double { return a->zt(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::tx() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::tx()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:153:17
    t.method("tx", [](CLHEP::HepLorentzRotation const& a)->double { return a.tx(); }, jlcxx::arg("this"));
    t.method("tx", [](CLHEP::HepLorentzRotation const* a)->double { return a->tx(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::ty() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::ty()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:154:17
    t.method("ty", [](CLHEP::HepLorentzRotation const& a)->double { return a.ty(); }, jlcxx::arg("this"));
    t.method("ty", [](CLHEP::HepLorentzRotation const* a)->double { return a->ty(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::tz() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::tz()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:155:17
    t.method("tz", [](CLHEP::HepLorentzRotation const& a)->double { return a.tz(); }, jlcxx::arg("this"));
    t.method("tz", [](CLHEP::HepLorentzRotation const* a)->double { return a->tz(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::tt() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::tt()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:156:17
    t.method("tt", [](CLHEP::HepLorentzRotation const& a)->double { return a.tt(); }, jlcxx::arg("this"));
    t.method("tt", [](CLHEP::HepLorentzRotation const* a)->double { return a->tt(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::col1() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::col1()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:159:27
    t.method("col1", [](CLHEP::HepLorentzRotation const& a)->CLHEP::HepLorentzVector { return a.col1(); }, jlcxx::arg("this"));
    t.method("col1", [](CLHEP::HepLorentzRotation const* a)->CLHEP::HepLorentzVector { return a->col1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::col2() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::col2()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:160:27
    t.method("col2", [](CLHEP::HepLorentzRotation const& a)->CLHEP::HepLorentzVector { return a.col2(); }, jlcxx::arg("this"));
    t.method("col2", [](CLHEP::HepLorentzRotation const* a)->CLHEP::HepLorentzVector { return a->col2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::col3() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::col3()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:161:27
    t.method("col3", [](CLHEP::HepLorentzRotation const& a)->CLHEP::HepLorentzVector { return a.col3(); }, jlcxx::arg("this"));
    t.method("col3", [](CLHEP::HepLorentzRotation const* a)->CLHEP::HepLorentzVector { return a->col3(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::col4() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::col4()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:162:27
    t.method("col4", [](CLHEP::HepLorentzRotation const& a)->CLHEP::HepLorentzVector { return a.col4(); }, jlcxx::arg("this"));
    t.method("col4", [](CLHEP::HepLorentzRotation const* a)->CLHEP::HepLorentzVector { return a->col4(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::row1() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::row1()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:165:27
    t.method("row1", [](CLHEP::HepLorentzRotation const& a)->CLHEP::HepLorentzVector { return a.row1(); }, jlcxx::arg("this"));
    t.method("row1", [](CLHEP::HepLorentzRotation const* a)->CLHEP::HepLorentzVector { return a->row1(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::row2() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::row2()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:166:27
    t.method("row2", [](CLHEP::HepLorentzRotation const& a)->CLHEP::HepLorentzVector { return a.row2(); }, jlcxx::arg("this"));
    t.method("row2", [](CLHEP::HepLorentzRotation const* a)->CLHEP::HepLorentzVector { return a->row2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::row3() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::row3()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:167:27
    t.method("row3", [](CLHEP::HepLorentzRotation const& a)->CLHEP::HepLorentzVector { return a.row3(); }, jlcxx::arg("this"));
    t.method("row3", [](CLHEP::HepLorentzRotation const* a)->CLHEP::HepLorentzVector { return a->row3(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::row4() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::row4()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:168:27
    t.method("row4", [](CLHEP::HepLorentzRotation const& a)->CLHEP::HepLorentzVector { return a.row4(); }, jlcxx::arg("this"));
    t.method("row4", [](CLHEP::HepLorentzRotation const* a)->CLHEP::HepLorentzVector { return a->row4(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepRep4x4 CLHEP::HepLorentzRotation::rep4x4() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepRep4x4 CLHEP::HepLorentzRotation::rep4x4()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:171:20
    t.method("rep4x4", [](CLHEP::HepLorentzRotation const& a)->CLHEP::HepRep4x4 { return a.rep4x4(); }, jlcxx::arg("this"));
    t.method("rep4x4", [](CLHEP::HepLorentzRotation const* a)->CLHEP::HepRep4x4 { return a->rep4x4(); }, jlcxx::arg("this"));
    module_.set_override_module(jl_base_module);


    DEBUG_MSG("Adding getindex method to wrap const CLHEP::HepLorentzRotation::HepLorentzRotation_row CLHEP::HepLorentzRotation::operator[](int) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:186:39
    t.method("getindex",
      [](CLHEP::HepLorentzRotation& a, int i){
      return a[i];
    }, jlcxx::arg("this"), jlcxx::arg("index"));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::operator()(int, int) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::operator()(int, int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:189:10
    t.method("paren", [](CLHEP::HepLorentzRotation const& a, int arg0, int arg1)->double { return a.operator()(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));
    t.method("paren", [](CLHEP::HepLorentzRotation const* a, int arg0, int arg1)->double { return a->operator()(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::decompose(CLHEP::Hep3Vector &, CLHEP::HepAxisAngle &) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepLorentzRotation::decompose(CLHEP::Hep3Vector &, CLHEP::HepAxisAngle &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:194:8
    t.method("decompose", [](CLHEP::HepLorentzRotation const& a, CLHEP::Hep3Vector & arg0, CLHEP::HepAxisAngle & arg1)->void { a.decompose(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("boost"), jlcxx::arg("rotation"));
    t.method("decompose", [](CLHEP::HepLorentzRotation const* a, CLHEP::Hep3Vector & arg0, CLHEP::HepAxisAngle & arg1)->void { a->decompose(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("boost"), jlcxx::arg("rotation"));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::decompose(CLHEP::HepBoost &, CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepLorentzRotation::decompose(CLHEP::HepBoost &, CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:195:8
    t.method("decompose", [](CLHEP::HepLorentzRotation const& a, CLHEP::HepBoost & arg0, CLHEP::HepRotation & arg1)->void { a.decompose(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("boost"), jlcxx::arg("rotation"));
    t.method("decompose", [](CLHEP::HepLorentzRotation const* a, CLHEP::HepBoost & arg0, CLHEP::HepRotation & arg1)->void { a->decompose(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("boost"), jlcxx::arg("rotation"));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::decompose(CLHEP::HepAxisAngle &, CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepLorentzRotation::decompose(CLHEP::HepAxisAngle &, CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:198:8
    t.method("decompose", [](CLHEP::HepLorentzRotation const& a, CLHEP::HepAxisAngle & arg0, CLHEP::Hep3Vector & arg1)->void { a.decompose(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("rotation"), jlcxx::arg("boost"));
    t.method("decompose", [](CLHEP::HepLorentzRotation const* a, CLHEP::HepAxisAngle & arg0, CLHEP::Hep3Vector & arg1)->void { a->decompose(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("rotation"), jlcxx::arg("boost"));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::decompose(CLHEP::HepRotation &, CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepLorentzRotation::decompose(CLHEP::HepRotation &, CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:199:8
    t.method("decompose", [](CLHEP::HepLorentzRotation const& a, CLHEP::HepRotation & arg0, CLHEP::HepBoost & arg1)->void { a.decompose(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("rotation"), jlcxx::arg("boost"));
    t.method("decompose", [](CLHEP::HepLorentzRotation const* a, CLHEP::HepRotation & arg0, CLHEP::HepBoost & arg1)->void { a->decompose(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("rotation"), jlcxx::arg("boost"));

    DEBUG_MSG("Adding wrapper for int CLHEP::HepLorentzRotation::compare(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: int CLHEP::HepLorentzRotation::compare(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:204:7
    t.method("compare", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzRotation & arg0)->int { return a.compare(arg0); }, jlcxx::arg("this"), jlcxx::arg("m"));
    t.method("compare", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzRotation & arg0)->int { return a->compare(arg0); }, jlcxx::arg("this"), jlcxx::arg("m"));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepLorentzRotation::operator==(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepLorentzRotation::operator==(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:208:15
    t.method("==", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzRotation & arg0)->bool { return a.operator==(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("==", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzRotation & arg0)->bool { return a->operator==(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepLorentzRotation::operator!=(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepLorentzRotation::operator!=(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:209:15
    t.method("!=", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzRotation & arg0)->bool { return a.operator!=(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("!=", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzRotation & arg0)->bool { return a->operator!=(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepLorentzRotation::operator<=(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepLorentzRotation::operator<=(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:210:15
    t.method("<=", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzRotation & arg0)->bool { return a.operator<=(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("<=", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzRotation & arg0)->bool { return a->operator<=(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepLorentzRotation::operator>=(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepLorentzRotation::operator>=(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:211:15
    t.method(">=", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzRotation & arg0)->bool { return a.operator>=(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method(">=", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzRotation & arg0)->bool { return a->operator>=(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepLorentzRotation::operator<(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepLorentzRotation::operator<(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:212:15
    t.method("<", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzRotation & arg0)->bool { return a.operator<(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("<", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzRotation & arg0)->bool { return a->operator<(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepLorentzRotation::operator>(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepLorentzRotation::operator>(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:213:15
    t.method(">", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzRotation & arg0)->bool { return a.operator>(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method(">", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzRotation & arg0)->bool { return a->operator>(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepLorentzRotation::isIdentity() (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepLorentzRotation::isIdentity()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:215:15
    t.method("isIdentity", [](CLHEP::HepLorentzRotation const& a)->bool { return a.isIdentity(); }, jlcxx::arg("this"));
    t.method("isIdentity", [](CLHEP::HepLorentzRotation const* a)->bool { return a->isIdentity(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::distance2(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::distance2(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:218:10
    t.method("distance2", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepBoost & arg0)->double { return a.distance2(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));
    t.method("distance2", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepBoost & arg0)->double { return a->distance2(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::distance2(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::distance2(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:219:10
    t.method("distance2", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepRotation & arg0)->double { return a.distance2(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));
    t.method("distance2", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepRotation & arg0)->double { return a->distance2(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::distance2(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::distance2(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:220:10
    t.method("distance2", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzRotation & arg0)->double { return a.distance2(arg0); }, jlcxx::arg("this"), jlcxx::arg("lt"));
    t.method("distance2", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzRotation & arg0)->double { return a->distance2(arg0); }, jlcxx::arg("this"), jlcxx::arg("lt"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::howNear(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::howNear(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:223:10
    t.method("howNear", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepBoost & arg0)->double { return a.howNear(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));
    t.method("howNear", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepBoost & arg0)->double { return a->howNear(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::howNear(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::howNear(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:224:10
    t.method("howNear", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepRotation & arg0)->double { return a.howNear(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));
    t.method("howNear", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepRotation & arg0)->double { return a->howNear(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::howNear(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::howNear(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:225:10
    t.method("howNear", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzRotation & arg0)->double { return a.howNear(arg0); }, jlcxx::arg("this"), jlcxx::arg("lt"));
    t.method("howNear", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzRotation & arg0)->double { return a->howNear(arg0); }, jlcxx::arg("this"), jlcxx::arg("lt"));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepLorentzRotation::isNear(const CLHEP::HepBoost &, double) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepLorentzRotation::isNear(const CLHEP::HepBoost &, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:227:8
    t.method("isNear", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepBoost & arg0)->bool { return a.isNear(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));
    t.method("isNear", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepBoost & arg0, double arg1)->bool { return a.isNear(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("b"), jlcxx::arg("epsilon"));
    t.method("isNear", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepBoost & arg0)->bool { return a->isNear(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));
    t.method("isNear", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepBoost & arg0, double arg1)->bool { return a->isNear(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("b"), jlcxx::arg("epsilon"));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepLorentzRotation::isNear(const CLHEP::HepRotation &, double) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepLorentzRotation::isNear(const CLHEP::HepRotation &, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:229:8
    t.method("isNear", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepRotation & arg0)->bool { return a.isNear(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));
    t.method("isNear", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepRotation & arg0, double arg1)->bool { return a.isNear(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("r"), jlcxx::arg("epsilon"));
    t.method("isNear", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepRotation & arg0)->bool { return a->isNear(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));
    t.method("isNear", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepRotation & arg0, double arg1)->bool { return a->isNear(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("r"), jlcxx::arg("epsilon"));

    DEBUG_MSG("Adding wrapper for bool CLHEP::HepLorentzRotation::isNear(const CLHEP::HepLorentzRotation &, double) (" __HERE__ ")");
    // signature to use in the veto list: bool CLHEP::HepLorentzRotation::isNear(const CLHEP::HepLorentzRotation &, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:231:8
    t.method("isNear", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzRotation & arg0)->bool { return a.isNear(arg0); }, jlcxx::arg("this"), jlcxx::arg("lt"));
    t.method("isNear", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzRotation & arg0, double arg1)->bool { return a.isNear(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("lt"), jlcxx::arg("epsilon"));
    t.method("isNear", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzRotation & arg0)->bool { return a->isNear(arg0); }, jlcxx::arg("this"), jlcxx::arg("lt"));
    t.method("isNear", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzRotation & arg0, double arg1)->bool { return a->isNear(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("lt"), jlcxx::arg("epsilon"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::norm2() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::norm2()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:236:10
    t.method("norm2", [](CLHEP::HepLorentzRotation const& a)->double { return a.norm2(); }, jlcxx::arg("this"));
    t.method("norm2", [](CLHEP::HepLorentzRotation const* a)->double { return a->norm2(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void CLHEP::HepLorentzRotation::rectify() (" __HERE__ ")");
    // signature to use in the veto list: void CLHEP::HepLorentzRotation::rectify()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:240:8
    t.method("rectify", [](CLHEP::HepLorentzRotation& a)->void { a.rectify(); }, jlcxx::arg("this"));
    t.method("rectify", [](CLHEP::HepLorentzRotation* a)->void { a->rectify(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::vectorMultiplication(const CLHEP::HepLorentzVector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::vectorMultiplication(const CLHEP::HepLorentzVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:252:27
    t.method("vectorMultiplication", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzVector & arg0)->CLHEP::HepLorentzVector { return a.vectorMultiplication(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("vectorMultiplication", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzVector & arg0)->CLHEP::HepLorentzVector { return a->vectorMultiplication(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::operator()(const CLHEP::HepLorentzVector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::operator()(const CLHEP::HepLorentzVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:253:27
    t.method("paren", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzVector & arg0)->CLHEP::HepLorentzVector { return a.operator()(arg0); }, jlcxx::arg("this"), jlcxx::arg("w"));
    t.method("paren", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzVector & arg0)->CLHEP::HepLorentzVector { return a->operator()(arg0); }, jlcxx::arg("this"), jlcxx::arg("w"));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::operator*(const CLHEP::HepLorentzVector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzVector CLHEP::HepLorentzRotation::operator*(const CLHEP::HepLorentzVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:254:27
    t.method("*", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzVector & arg0)->CLHEP::HepLorentzVector { return a.operator*(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("*", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzVector & arg0)->CLHEP::HepLorentzVector { return a->operator*(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation CLHEP::HepLorentzRotation::matrixMultiplication(const CLHEP::HepRep4x4 &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation CLHEP::HepLorentzRotation::matrixMultiplication(const CLHEP::HepRep4x4 &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:259:22
    t.method("matrixMultiplication", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepRep4x4 & arg0)->CLHEP::HepLorentzRotation { return a.matrixMultiplication(arg0); }, jlcxx::arg("this"), jlcxx::arg("m"));
    t.method("matrixMultiplication", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepRep4x4 & arg0)->CLHEP::HepLorentzRotation { return a->matrixMultiplication(arg0); }, jlcxx::arg("this"), jlcxx::arg("m"));
    module_.set_override_module(jl_base_module);

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation CLHEP::HepLorentzRotation::operator*(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation CLHEP::HepLorentzRotation::operator*(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:261:29
    t.method("*", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepBoost & arg0)->CLHEP::HepLorentzRotation { return a.operator*(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));
    t.method("*", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepBoost & arg0)->CLHEP::HepLorentzRotation { return a->operator*(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation CLHEP::HepLorentzRotation::operator*(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation CLHEP::HepLorentzRotation::operator*(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:262:29
    t.method("*", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepRotation & arg0)->CLHEP::HepLorentzRotation { return a.operator*(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));
    t.method("*", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepRotation & arg0)->CLHEP::HepLorentzRotation { return a->operator*(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation CLHEP::HepLorentzRotation::operator*(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation CLHEP::HepLorentzRotation::operator*(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:263:29
    t.method("*", [](CLHEP::HepLorentzRotation const& a, const CLHEP::HepLorentzRotation & arg0)->CLHEP::HepLorentzRotation { return a.operator*(arg0); }, jlcxx::arg("this"), jlcxx::arg("lt"));
    t.method("*", [](CLHEP::HepLorentzRotation const* a, const CLHEP::HepLorentzRotation & arg0)->CLHEP::HepLorentzRotation { return a->operator*(arg0); }, jlcxx::arg("this"), jlcxx::arg("lt"));

    module_.unset_override_module();

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::operator*=(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::operator*=(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:266:32
    t.method("mult!", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepBoost & arg0)->CLHEP::HepLorentzRotation & { return a.operator*=(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));
    t.method("mult!", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepBoost & arg0)->CLHEP::HepLorentzRotation & { return a->operator*=(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::operator*=(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::operator*=(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:267:32
    t.method("mult!", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepRotation & arg0)->CLHEP::HepLorentzRotation & { return a.operator*=(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));
    t.method("mult!", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepRotation & arg0)->CLHEP::HepLorentzRotation & { return a->operator*=(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::operator*=(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::operator*=(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:268:32
    t.method("mult!", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepLorentzRotation & arg0)->CLHEP::HepLorentzRotation & { return a.operator*=(arg0); }, jlcxx::arg("this"), jlcxx::arg("lt"));
    t.method("mult!", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepLorentzRotation & arg0)->CLHEP::HepLorentzRotation & { return a->operator*=(arg0); }, jlcxx::arg("this"), jlcxx::arg("lt"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::transform(const CLHEP::HepBoost &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::transform(const CLHEP::HepBoost &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:269:32
    t.method("transform", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepBoost & arg0)->CLHEP::HepLorentzRotation & { return a.transform(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));
    t.method("transform", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepBoost & arg0)->CLHEP::HepLorentzRotation & { return a->transform(arg0); }, jlcxx::arg("this"), jlcxx::arg("b"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::transform(const CLHEP::HepRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::transform(const CLHEP::HepRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:270:32
    t.method("transform", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepRotation & arg0)->CLHEP::HepLorentzRotation & { return a.transform(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));
    t.method("transform", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepRotation & arg0)->CLHEP::HepLorentzRotation & { return a->transform(arg0); }, jlcxx::arg("this"), jlcxx::arg("r"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::transform(const CLHEP::HepLorentzRotation &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::transform(const CLHEP::HepLorentzRotation &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:271:32
    t.method("transform", [](CLHEP::HepLorentzRotation& a, const CLHEP::HepLorentzRotation & arg0)->CLHEP::HepLorentzRotation & { return a.transform(arg0); }, jlcxx::arg("this"), jlcxx::arg("lt"));
    t.method("transform", [](CLHEP::HepLorentzRotation* a, const CLHEP::HepLorentzRotation & arg0)->CLHEP::HepLorentzRotation & { return a->transform(arg0); }, jlcxx::arg("this"), jlcxx::arg("lt"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::rotateX(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::rotateX(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:279:24
    t.method("rotateX", [](CLHEP::HepLorentzRotation& a, double arg0)->CLHEP::HepLorentzRotation & { return a.rotateX(arg0); }, jlcxx::arg("this"), jlcxx::arg("delta"));
    t.method("rotateX", [](CLHEP::HepLorentzRotation* a, double arg0)->CLHEP::HepLorentzRotation & { return a->rotateX(arg0); }, jlcxx::arg("this"), jlcxx::arg("delta"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::rotateY(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::rotateY(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:282:24
    t.method("rotateY", [](CLHEP::HepLorentzRotation& a, double arg0)->CLHEP::HepLorentzRotation & { return a.rotateY(arg0); }, jlcxx::arg("this"), jlcxx::arg("delta"));
    t.method("rotateY", [](CLHEP::HepLorentzRotation* a, double arg0)->CLHEP::HepLorentzRotation & { return a->rotateY(arg0); }, jlcxx::arg("this"), jlcxx::arg("delta"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::rotateZ(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::rotateZ(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:285:24
    t.method("rotateZ", [](CLHEP::HepLorentzRotation& a, double arg0)->CLHEP::HepLorentzRotation & { return a.rotateZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("delta"));
    t.method("rotateZ", [](CLHEP::HepLorentzRotation* a, double arg0)->CLHEP::HepLorentzRotation & { return a->rotateZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("delta"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::rotate(double, const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::rotate(double, const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:288:31
    t.method("rotate", [](CLHEP::HepLorentzRotation& a, double arg0, const CLHEP::Hep3Vector & arg1)->CLHEP::HepLorentzRotation & { return a.rotate(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("delta"), jlcxx::arg("axis"));
    t.method("rotate", [](CLHEP::HepLorentzRotation* a, double arg0, const CLHEP::Hep3Vector & arg1)->CLHEP::HepLorentzRotation & { return a->rotate(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("delta"), jlcxx::arg("axis"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::rotate(double, const CLHEP::Hep3Vector *) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::rotate(double, const CLHEP::Hep3Vector *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:289:31
    t.method("rotate", [](CLHEP::HepLorentzRotation& a, double arg0, const CLHEP::Hep3Vector * arg1)->CLHEP::HepLorentzRotation & { return a.rotate(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("delta"), jlcxx::arg("axis"));
    t.method("rotate", [](CLHEP::HepLorentzRotation* a, double arg0, const CLHEP::Hep3Vector * arg1)->CLHEP::HepLorentzRotation & { return a->rotate(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("delta"), jlcxx::arg("axis"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::boostX(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::boostX(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:292:24
    t.method("boostX", [](CLHEP::HepLorentzRotation& a, double arg0)->CLHEP::HepLorentzRotation & { return a.boostX(arg0); }, jlcxx::arg("this"), jlcxx::arg("beta"));
    t.method("boostX", [](CLHEP::HepLorentzRotation* a, double arg0)->CLHEP::HepLorentzRotation & { return a->boostX(arg0); }, jlcxx::arg("this"), jlcxx::arg("beta"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::boostY(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::boostY(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:295:24
    t.method("boostY", [](CLHEP::HepLorentzRotation& a, double arg0)->CLHEP::HepLorentzRotation & { return a.boostY(arg0); }, jlcxx::arg("this"), jlcxx::arg("beta"));
    t.method("boostY", [](CLHEP::HepLorentzRotation* a, double arg0)->CLHEP::HepLorentzRotation & { return a->boostY(arg0); }, jlcxx::arg("this"), jlcxx::arg("beta"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::boostZ(double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::boostZ(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:298:24
    t.method("boostZ", [](CLHEP::HepLorentzRotation& a, double arg0)->CLHEP::HepLorentzRotation & { return a.boostZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("beta"));
    t.method("boostZ", [](CLHEP::HepLorentzRotation* a, double arg0)->CLHEP::HepLorentzRotation & { return a->boostZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("beta"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::boost(double, double, double) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::boost(double, double, double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:301:31
    t.method("boost", [](CLHEP::HepLorentzRotation& a, double arg0, double arg1, double arg2)->CLHEP::HepLorentzRotation & { return a.boost(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"), jlcxx::arg("arg2"));
    t.method("boost", [](CLHEP::HepLorentzRotation* a, double arg0, double arg1, double arg2)->CLHEP::HepLorentzRotation & { return a->boost(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("arg0"), jlcxx::arg("arg1"), jlcxx::arg("arg2"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::boost(const CLHEP::Hep3Vector &) (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::boost(const CLHEP::Hep3Vector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:302:31
    t.method("boost", [](CLHEP::HepLorentzRotation& a, const CLHEP::Hep3Vector & arg0)->CLHEP::HepLorentzRotation & { return a.boost(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));
    t.method("boost", [](CLHEP::HepLorentzRotation* a, const CLHEP::Hep3Vector & arg0)->CLHEP::HepLorentzRotation & { return a->boost(arg0); }, jlcxx::arg("this"), jlcxx::arg("arg0"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation CLHEP::HepLorentzRotation::inverse() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation CLHEP::HepLorentzRotation::inverse()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:305:29
    t.method("inverse", [](CLHEP::HepLorentzRotation const& a)->CLHEP::HepLorentzRotation { return a.inverse(); }, jlcxx::arg("this"));
    t.method("inverse", [](CLHEP::HepLorentzRotation const* a)->CLHEP::HepLorentzRotation { return a->inverse(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::invert() (" __HERE__ ")");
    // signature to use in the veto list: CLHEP::HepLorentzRotation & CLHEP::HepLorentzRotation::invert()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:308:31
    t.method("invert", [](CLHEP::HepLorentzRotation& a)->CLHEP::HepLorentzRotation & { return a.invert(); }, jlcxx::arg("this"));
    t.method("invert", [](CLHEP::HepLorentzRotation* a)->CLHEP::HepLorentzRotation & { return a->invert(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::getTolerance() (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::getTolerance()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:318:24
    module_.method("CLHEP!HepLorentzRotation!getTolerance", []()->double { return CLHEP::HepLorentzRotation::getTolerance(); });

    DEBUG_MSG("Adding wrapper for double CLHEP::HepLorentzRotation::setTolerance(double) (" __HERE__ ")");
    // signature to use in the veto list: double CLHEP::HepLorentzRotation::setTolerance(double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/CLHEP/Vector/LorentzRotation.h:319:24
    module_.method("CLHEP!HepLorentzRotation!setTolerance", [](double arg0)->double { return CLHEP::HepLorentzRotation::setTolerance(arg0); }, jlcxx::arg("tol"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<CLHEP::HepLorentzRotation>> type_;
};
std::shared_ptr<Wrapper> newJlCLHEP_HepLorentzRotation(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlCLHEP_HepLorentzRotation(module));
}
