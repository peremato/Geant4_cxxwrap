// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4Cons> : std::false_type { };
  template<> struct DefaultConstructible<G4Cons> : std::false_type { };
template<> struct SuperType<G4Cons> { typedef G4CSGSolid type; };
}

// Class generating the wrapper for type G4Cons
// signature to use in the veto file: G4Cons
struct JlG4Cons: public Wrapper {

  JlG4Cons(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4Cons (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:77:7
    jlcxx::TypeWrapper<G4Cons>  t = jlModule.add_type<G4Cons>("G4Cons",
      jlcxx::julia_base_type<G4CSGSolid>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4Cons>>(new jlcxx::TypeWrapper<G4Cons>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void G4Cons::G4Cons(const G4String &, G4double, G4double, G4double, G4double, G4double, G4double, G4double) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:81:5
    t.constructor<const G4String &, G4double, G4double, G4double, G4double, G4double, G4double, G4double>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("pName"), jlcxx::arg("pRmin1"), jlcxx::arg("pRmax1"), jlcxx::arg("pRmin2"), jlcxx::arg("pRmax2"), jlcxx::arg("pDz"), jlcxx::arg("pSPhi"), jlcxx::arg("pDPhi")    );

    DEBUG_MSG("Adding wrapper for G4double G4Cons::GetInnerRadiusMinusZ() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::GetInnerRadiusMinusZ()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:95:21
    t.method("GetInnerRadiusMinusZ", [](G4Cons const& a)->G4double { return a.GetInnerRadiusMinusZ(); }, jlcxx::arg("this"));
    t.method("GetInnerRadiusMinusZ", [](G4Cons const* a)->G4double { return a->GetInnerRadiusMinusZ(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::GetOuterRadiusMinusZ() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::GetOuterRadiusMinusZ()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:96:21
    t.method("GetOuterRadiusMinusZ", [](G4Cons const& a)->G4double { return a.GetOuterRadiusMinusZ(); }, jlcxx::arg("this"));
    t.method("GetOuterRadiusMinusZ", [](G4Cons const* a)->G4double { return a->GetOuterRadiusMinusZ(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::GetInnerRadiusPlusZ() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::GetInnerRadiusPlusZ()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:97:21
    t.method("GetInnerRadiusPlusZ", [](G4Cons const& a)->G4double { return a.GetInnerRadiusPlusZ(); }, jlcxx::arg("this"));
    t.method("GetInnerRadiusPlusZ", [](G4Cons const* a)->G4double { return a->GetInnerRadiusPlusZ(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::GetOuterRadiusPlusZ() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::GetOuterRadiusPlusZ()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:98:21
    t.method("GetOuterRadiusPlusZ", [](G4Cons const& a)->G4double { return a.GetOuterRadiusPlusZ(); }, jlcxx::arg("this"));
    t.method("GetOuterRadiusPlusZ", [](G4Cons const* a)->G4double { return a->GetOuterRadiusPlusZ(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::GetZHalfLength() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::GetZHalfLength()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:99:21
    t.method("GetZHalfLength", [](G4Cons const& a)->G4double { return a.GetZHalfLength(); }, jlcxx::arg("this"));
    t.method("GetZHalfLength", [](G4Cons const* a)->G4double { return a->GetZHalfLength(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::GetStartPhiAngle() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::GetStartPhiAngle()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:100:21
    t.method("GetStartPhiAngle", [](G4Cons const& a)->G4double { return a.GetStartPhiAngle(); }, jlcxx::arg("this"));
    t.method("GetStartPhiAngle", [](G4Cons const* a)->G4double { return a->GetStartPhiAngle(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::GetDeltaPhiAngle() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::GetDeltaPhiAngle()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:101:21
    t.method("GetDeltaPhiAngle", [](G4Cons const& a)->G4double { return a.GetDeltaPhiAngle(); }, jlcxx::arg("this"));
    t.method("GetDeltaPhiAngle", [](G4Cons const* a)->G4double { return a->GetDeltaPhiAngle(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::GetSinStartPhi() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::GetSinStartPhi()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:102:21
    t.method("GetSinStartPhi", [](G4Cons const& a)->G4double { return a.GetSinStartPhi(); }, jlcxx::arg("this"));
    t.method("GetSinStartPhi", [](G4Cons const* a)->G4double { return a->GetSinStartPhi(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::GetCosStartPhi() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::GetCosStartPhi()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:103:21
    t.method("GetCosStartPhi", [](G4Cons const& a)->G4double { return a.GetCosStartPhi(); }, jlcxx::arg("this"));
    t.method("GetCosStartPhi", [](G4Cons const* a)->G4double { return a->GetCosStartPhi(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::GetSinEndPhi() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::GetSinEndPhi()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:104:21
    t.method("GetSinEndPhi", [](G4Cons const& a)->G4double { return a.GetSinEndPhi(); }, jlcxx::arg("this"));
    t.method("GetSinEndPhi", [](G4Cons const* a)->G4double { return a->GetSinEndPhi(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::GetCosEndPhi() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::GetCosEndPhi()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:105:21
    t.method("GetCosEndPhi", [](G4Cons const& a)->G4double { return a.GetCosEndPhi(); }, jlcxx::arg("this"));
    t.method("GetCosEndPhi", [](G4Cons const* a)->G4double { return a->GetCosEndPhi(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4Cons::SetInnerRadiusMinusZ(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Cons::SetInnerRadiusMinusZ(G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:109:17
    t.method("SetInnerRadiusMinusZ", [](G4Cons& a, G4double arg0)->void { a.SetInnerRadiusMinusZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("Rmin1"));
    t.method("SetInnerRadiusMinusZ", [](G4Cons* a, G4double arg0)->void { a->SetInnerRadiusMinusZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("Rmin1"));

    DEBUG_MSG("Adding wrapper for void G4Cons::SetOuterRadiusMinusZ(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Cons::SetOuterRadiusMinusZ(G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:110:17
    t.method("SetOuterRadiusMinusZ", [](G4Cons& a, G4double arg0)->void { a.SetOuterRadiusMinusZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("Rmax1"));
    t.method("SetOuterRadiusMinusZ", [](G4Cons* a, G4double arg0)->void { a->SetOuterRadiusMinusZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("Rmax1"));

    DEBUG_MSG("Adding wrapper for void G4Cons::SetInnerRadiusPlusZ(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Cons::SetInnerRadiusPlusZ(G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:111:17
    t.method("SetInnerRadiusPlusZ", [](G4Cons& a, G4double arg0)->void { a.SetInnerRadiusPlusZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("Rmin2"));
    t.method("SetInnerRadiusPlusZ", [](G4Cons* a, G4double arg0)->void { a->SetInnerRadiusPlusZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("Rmin2"));

    DEBUG_MSG("Adding wrapper for void G4Cons::SetOuterRadiusPlusZ(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Cons::SetOuterRadiusPlusZ(G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:112:17
    t.method("SetOuterRadiusPlusZ", [](G4Cons& a, G4double arg0)->void { a.SetOuterRadiusPlusZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("Rmax2"));
    t.method("SetOuterRadiusPlusZ", [](G4Cons* a, G4double arg0)->void { a->SetOuterRadiusPlusZ(arg0); }, jlcxx::arg("this"), jlcxx::arg("Rmax2"));

    DEBUG_MSG("Adding wrapper for void G4Cons::SetZHalfLength(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Cons::SetZHalfLength(G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:113:17
    t.method("SetZHalfLength", [](G4Cons& a, G4double arg0)->void { a.SetZHalfLength(arg0); }, jlcxx::arg("this"), jlcxx::arg("newDz"));
    t.method("SetZHalfLength", [](G4Cons* a, G4double arg0)->void { a->SetZHalfLength(arg0); }, jlcxx::arg("this"), jlcxx::arg("newDz"));

    DEBUG_MSG("Adding wrapper for void G4Cons::SetStartPhiAngle(G4double, G4bool) (" __HERE__ ")");
    // signature to use in the veto list: void G4Cons::SetStartPhiAngle(G4double, G4bool)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:114:17
    t.method("SetStartPhiAngle", [](G4Cons& a, G4double arg0)->void { a.SetStartPhiAngle(arg0); }, jlcxx::arg("this"), jlcxx::arg("newSPhi"));
    t.method("SetStartPhiAngle", [](G4Cons& a, G4double arg0, G4bool arg1)->void { a.SetStartPhiAngle(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("newSPhi"), jlcxx::arg("trig"));
    t.method("SetStartPhiAngle", [](G4Cons* a, G4double arg0)->void { a->SetStartPhiAngle(arg0); }, jlcxx::arg("this"), jlcxx::arg("newSPhi"));
    t.method("SetStartPhiAngle", [](G4Cons* a, G4double arg0, G4bool arg1)->void { a->SetStartPhiAngle(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("newSPhi"), jlcxx::arg("trig"));

    DEBUG_MSG("Adding wrapper for void G4Cons::SetDeltaPhiAngle(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4Cons::SetDeltaPhiAngle(G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:115:17
    t.method("SetDeltaPhiAngle", [](G4Cons& a, G4double arg0)->void { a.SetDeltaPhiAngle(arg0); }, jlcxx::arg("this"), jlcxx::arg("newDPhi"));
    t.method("SetDeltaPhiAngle", [](G4Cons* a, G4double arg0)->void { a->SetDeltaPhiAngle(arg0); }, jlcxx::arg("this"), jlcxx::arg("newDPhi"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::GetCubicVolume() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::GetCubicVolume()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:119:21
    t.method("GetCubicVolume", [](G4Cons& a)->G4double { return a.GetCubicVolume(); }, jlcxx::arg("this"));
    t.method("GetCubicVolume", [](G4Cons* a)->G4double { return a->GetCubicVolume(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::GetSurfaceArea() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::GetSurfaceArea()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:120:21
    t.method("GetSurfaceArea", [](G4Cons& a)->G4double { return a.GetSurfaceArea(); }, jlcxx::arg("this"));
    t.method("GetSurfaceArea", [](G4Cons* a)->G4double { return a->GetSurfaceArea(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for void G4Cons::ComputeDimensions(G4VPVParameterisation *, const G4int, const G4VPhysicalVolume *) (" __HERE__ ")");
    // signature to use in the veto list: void G4Cons::ComputeDimensions(G4VPVParameterisation *, const G4int, const G4VPhysicalVolume *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:122:10
    t.method("ComputeDimensions", [](G4Cons& a, G4VPVParameterisation * arg0, const G4int arg1, const G4VPhysicalVolume * arg2)->void { a.ComputeDimensions(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("n"), jlcxx::arg("pRep"));
    t.method("ComputeDimensions", [](G4Cons* a, G4VPVParameterisation * arg0, const G4int arg1, const G4VPhysicalVolume * arg2)->void { a->ComputeDimensions(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("n"), jlcxx::arg("pRep"));

    DEBUG_MSG("Adding wrapper for void G4Cons::BoundingLimits(G4ThreeVector &, G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: void G4Cons::BoundingLimits(G4ThreeVector &, G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:126:10
    t.method("BoundingLimits", [](G4Cons const& a, G4ThreeVector & arg0, G4ThreeVector & arg1)->void { a.BoundingLimits(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("pMin"), jlcxx::arg("pMax"));
    t.method("BoundingLimits", [](G4Cons const* a, G4ThreeVector & arg0, G4ThreeVector & arg1)->void { a->BoundingLimits(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("pMin"), jlcxx::arg("pMax"));

    DEBUG_MSG("Adding wrapper for EInside G4Cons::Inside(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: EInside G4Cons::Inside(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:133:13
    t.method("Inside", [](G4Cons const& a, const G4ThreeVector & arg0)->EInside { return a.Inside(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("Inside", [](G4Cons const* a, const G4ThreeVector & arg0)->EInside { return a->Inside(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4Cons::SurfaceNormal(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4Cons::SurfaceNormal(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:135:19
    t.method("SurfaceNormal", [](G4Cons const& a, const G4ThreeVector & arg0)->G4ThreeVector { return a.SurfaceNormal(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("SurfaceNormal", [](G4Cons const* a, const G4ThreeVector & arg0)->G4ThreeVector { return a->SurfaceNormal(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::DistanceToIn(const G4ThreeVector &, const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:137:14
    t.method("DistanceToIn", [](G4Cons const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a.DistanceToIn(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"));
    t.method("DistanceToIn", [](G4Cons const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a->DistanceToIn(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::DistanceToIn(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::DistanceToIn(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:139:14
    t.method("DistanceToIn", [](G4Cons const& a, const G4ThreeVector & arg0)->G4double { return a.DistanceToIn(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("DistanceToIn", [](G4Cons const* a, const G4ThreeVector & arg0)->G4double { return a->DistanceToIn(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::DistanceToOut(const G4ThreeVector &, const G4ThreeVector &, const G4bool, G4bool *, G4ThreeVector *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:140:14
    t.method("DistanceToOut", [](G4Cons const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a.DistanceToOut(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"));
    t.method("DistanceToOut", [](G4Cons const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double { return a.DistanceToOut(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"), jlcxx::arg("calcNorm"));
    t.method("DistanceToOut", [](G4Cons const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double { return a.DistanceToOut(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"), jlcxx::arg("calcNorm"), jlcxx::arg("validNorm"));
    t.method("DistanceToOut", [](G4Cons const& a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3, G4ThreeVector * arg4)->G4double { return a.DistanceToOut(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"), jlcxx::arg("calcNorm"), jlcxx::arg("validNorm"), jlcxx::arg("n"));
    t.method("DistanceToOut", [](G4Cons const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1)->G4double { return a->DistanceToOut(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"));
    t.method("DistanceToOut", [](G4Cons const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2)->G4double { return a->DistanceToOut(arg0, arg1, arg2); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"), jlcxx::arg("calcNorm"));
    t.method("DistanceToOut", [](G4Cons const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3)->G4double { return a->DistanceToOut(arg0, arg1, arg2, arg3); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"), jlcxx::arg("calcNorm"), jlcxx::arg("validNorm"));
    t.method("DistanceToOut", [](G4Cons const* a, const G4ThreeVector & arg0, const G4ThreeVector & arg1, const G4bool arg2, G4bool * arg3, G4ThreeVector * arg4)->G4double { return a->DistanceToOut(arg0, arg1, arg2, arg3, arg4); }, jlcxx::arg("this"), jlcxx::arg("p"), jlcxx::arg("v"), jlcxx::arg("calcNorm"), jlcxx::arg("validNorm"), jlcxx::arg("n"));

    DEBUG_MSG("Adding wrapper for G4double G4Cons::DistanceToOut(const G4ThreeVector &) (" __HERE__ ")");
    // signature to use in the veto list: G4double G4Cons::DistanceToOut(const G4ThreeVector &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:145:14
    t.method("DistanceToOut", [](G4Cons const& a, const G4ThreeVector & arg0)->G4double { return a.DistanceToOut(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));
    t.method("DistanceToOut", [](G4Cons const* a, const G4ThreeVector & arg0)->G4double { return a->DistanceToOut(arg0); }, jlcxx::arg("this"), jlcxx::arg("p"));

    DEBUG_MSG("Adding wrapper for G4GeometryType G4Cons::GetEntityType() (" __HERE__ ")");
    // signature to use in the veto list: G4GeometryType G4Cons::GetEntityType()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:147:20
    t.method("GetEntityType", [](G4Cons const& a)->G4GeometryType { return a.GetEntityType(); }, jlcxx::arg("this"));
    t.method("GetEntityType", [](G4Cons const* a)->G4GeometryType { return a->GetEntityType(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4ThreeVector G4Cons::GetPointOnSurface() (" __HERE__ ")");
    // signature to use in the veto list: G4ThreeVector G4Cons::GetPointOnSurface()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:149:19
    t.method("GetPointOnSurface", [](G4Cons const& a)->G4ThreeVector { return a.GetPointOnSurface(); }, jlcxx::arg("this"));
    t.method("GetPointOnSurface", [](G4Cons const* a)->G4ThreeVector { return a->GetPointOnSurface(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4VSolid * G4Cons::Clone() (" __HERE__ ")");
    // signature to use in the veto list: G4VSolid * G4Cons::Clone()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:151:15
    t.method("Clone", [](G4Cons const& a)->G4VSolid * { return a.Clone(); }, jlcxx::arg("this"));
    t.method("Clone", [](G4Cons const* a)->G4VSolid * { return a->Clone(); }, jlcxx::arg("this"));

    DEBUG_MSG("Adding wrapper for G4Polyhedron * G4Cons::CreatePolyhedron() (" __HERE__ ")");
    // signature to use in the veto list: G4Polyhedron * G4Cons::CreatePolyhedron()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:158:19
    t.method("CreatePolyhedron", [](G4Cons const& a)->G4Polyhedron * { return a.CreatePolyhedron(); }, jlcxx::arg("this"));
    t.method("CreatePolyhedron", [](G4Cons const* a)->G4Polyhedron * { return a->CreatePolyhedron(); }, jlcxx::arg("this"));


    DEBUG_MSG("Adding wrapper for void G4Cons::G4Cons(const G4Cons &) (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:166:5
    t.constructor<const G4Cons &>(/*finalize=*/jlcxx::finalize_policy::yes, jlcxx::arg("this"), jlcxx::arg("rhs")    );

    DEBUG_MSG("Adding wrapper for G4Cons & G4Cons::operator=(const G4Cons &) (" __HERE__ ")");
    // signature to use in the veto list: G4Cons & G4Cons::operator=(const G4Cons &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4Cons.hh:167:13
    t.method("assign", [](G4Cons& a, const G4Cons & arg0)->G4Cons & { return a.operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("rhs"));
    t.method("assign", [](G4Cons* a, const G4Cons & arg0)->G4Cons & { return a->operator=(arg0); }, jlcxx::arg("this"), jlcxx::arg("rhs"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4Cons>> type_;
};
std::shared_ptr<Wrapper> newJlG4Cons(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4Cons(module));
}
