// this file was auto-generated by wrapit v1.3.1-15-g5168a24
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4ScoringManager> : std::false_type { };
  template<> struct DefaultConstructible<G4ScoringManager> : std::false_type { };
}

// Class generating the wrapper for type G4ScoringManager
// signature to use in the veto file: G4ScoringManager
struct JlG4ScoringManager: public Wrapper {

  JlG4ScoringManager(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4ScoringManager (" __HERE__ ")");
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:63:7
    jlcxx::TypeWrapper<G4ScoringManager>  t = jlModule.add_type<G4ScoringManager>("G4ScoringManager");
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4ScoringManager>>(new jlcxx::TypeWrapper<G4ScoringManager>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;

    DEBUG_MSG("Adding wrapper for G4ScoringManager * G4ScoringManager::GetScoringManager() (" __HERE__ ")");
    // signature to use in the veto list: G4ScoringManager * G4ScoringManager::GetScoringManager()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:67:28
    module_.method("G4ScoringManager!GetScoringManager", static_cast<G4ScoringManager * (*)() >(&G4ScoringManager::GetScoringManager));

    DEBUG_MSG("Adding wrapper for G4ScoringManager * G4ScoringManager::GetScoringManagerIfExist() (" __HERE__ ")");
    // signature to use in the veto list: G4ScoringManager * G4ScoringManager::GetScoringManagerIfExist()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:70:28
    module_.method("G4ScoringManager!GetScoringManagerIfExist", static_cast<G4ScoringManager * (*)() >(&G4ScoringManager::GetScoringManagerIfExist));

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::SetReplicaLevel(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::SetReplicaLevel(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:77:15
    module_.method("G4ScoringManager!SetReplicaLevel", static_cast<void (*)(G4int) >(&G4ScoringManager::SetReplicaLevel));

    DEBUG_MSG("Adding wrapper for G4int G4ScoringManager::GetReplicaLevel() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4ScoringManager::GetReplicaLevel()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:78:16
    module_.method("G4ScoringManager!GetReplicaLevel", static_cast<G4int (*)() >(&G4ScoringManager::GetReplicaLevel));

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::Accumulate(G4VHitsCollection *) (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::Accumulate(G4VHitsCollection *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:84:8
    t.method("Accumulate", static_cast<void (G4ScoringManager::*)(G4VHitsCollection *) >(&G4ScoringManager::Accumulate));

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::Merge(const G4ScoringManager *) (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::Merge(const G4ScoringManager *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:85:8
    t.method("Merge", static_cast<void (G4ScoringManager::*)(const G4ScoringManager *) >(&G4ScoringManager::Merge));

    DEBUG_MSG("Adding wrapper for G4VScoringMesh * G4ScoringManager::FindMesh(G4VHitsCollection *) (" __HERE__ ")");
    // signature to use in the veto list: G4VScoringMesh * G4ScoringManager::FindMesh(G4VHitsCollection *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:86:19
    t.method("FindMesh", static_cast<G4VScoringMesh * (G4ScoringManager::*)(G4VHitsCollection *) >(&G4ScoringManager::FindMesh));

    DEBUG_MSG("Adding wrapper for G4VScoringMesh * G4ScoringManager::FindMesh(const G4String &) (" __HERE__ ")");
    // signature to use in the veto list: G4VScoringMesh * G4ScoringManager::FindMesh(const G4String &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:87:19
    t.method("FindMesh", static_cast<G4VScoringMesh * (G4ScoringManager::*)(const G4String &) >(&G4ScoringManager::FindMesh));

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::List() (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::List()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:88:8
    t.method("List", static_cast<void (G4ScoringManager::*)()  const>(&G4ScoringManager::List));

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::Dump() (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::Dump()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:89:8
    t.method("Dump", static_cast<void (G4ScoringManager::*)()  const>(&G4ScoringManager::Dump));

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::DrawMesh(const G4String &, const G4String &, const G4String &, G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::DrawMesh(const G4String &, const G4String &, const G4String &, G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:90:8
    t.method("DrawMesh", static_cast<void (G4ScoringManager::*)(const G4String &, const G4String &, const G4String &, G4int) >(&G4ScoringManager::DrawMesh));
    t.method("DrawMesh", [](G4ScoringManager& a, const G4String & arg0, const G4String & arg1, const G4String & arg2)->void { a.DrawMesh(arg0, arg1, arg2); });
    t.method("DrawMesh", [](G4ScoringManager* a, const G4String & arg0, const G4String & arg1, const G4String & arg2)->void { a->DrawMesh(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::DrawMesh(const G4String &, const G4String &, G4int, G4int, const G4String &) (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::DrawMesh(const G4String &, const G4String &, G4int, G4int, const G4String &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:92:8
    t.method("DrawMesh", static_cast<void (G4ScoringManager::*)(const G4String &, const G4String &, G4int, G4int, const G4String &) >(&G4ScoringManager::DrawMesh));

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::DumpQuantityToFile(const G4String &, const G4String &, const G4String &, const G4String &) (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::DumpQuantityToFile(const G4String &, const G4String &, const G4String &, const G4String &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:94:8
    t.method("DumpQuantityToFile", static_cast<void (G4ScoringManager::*)(const G4String &, const G4String &, const G4String &, const G4String &) >(&G4ScoringManager::DumpQuantityToFile));
    t.method("DumpQuantityToFile", [](G4ScoringManager& a, const G4String & arg0, const G4String & arg1, const G4String & arg2)->void { a.DumpQuantityToFile(arg0, arg1, arg2); });
    t.method("DumpQuantityToFile", [](G4ScoringManager* a, const G4String & arg0, const G4String & arg1, const G4String & arg2)->void { a->DumpQuantityToFile(arg0, arg1, arg2); });

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::DumpAllQuantitiesToFile(const G4String &, const G4String &, const G4String &) (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::DumpAllQuantitiesToFile(const G4String &, const G4String &, const G4String &)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:97:8
    t.method("DumpAllQuantitiesToFile", static_cast<void (G4ScoringManager::*)(const G4String &, const G4String &, const G4String &) >(&G4ScoringManager::DumpAllQuantitiesToFile));
    t.method("DumpAllQuantitiesToFile", [](G4ScoringManager& a, const G4String & arg0, const G4String & arg1)->void { a.DumpAllQuantitiesToFile(arg0, arg1); });
    t.method("DumpAllQuantitiesToFile", [](G4ScoringManager* a, const G4String & arg0, const G4String & arg1)->void { a->DumpAllQuantitiesToFile(arg0, arg1); });

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::ListScoreColorMaps() (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::ListScoreColorMaps()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:101:8
    t.method("ListScoreColorMaps", static_cast<void (G4ScoringManager::*)() >(&G4ScoringManager::ListScoreColorMaps));

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::SetCurrentMesh(G4VScoringMesh *) (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::SetCurrentMesh(G4VScoringMesh *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:103:15
    t.method("SetCurrentMesh", static_cast<void (G4ScoringManager::*)(G4VScoringMesh *) >(&G4ScoringManager::SetCurrentMesh));

    DEBUG_MSG("Adding wrapper for G4VScoringMesh * G4ScoringManager::GetCurrentMesh() (" __HERE__ ")");
    // signature to use in the veto list: G4VScoringMesh * G4ScoringManager::GetCurrentMesh()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:104:26
    t.method("GetCurrentMesh", static_cast<G4VScoringMesh * (G4ScoringManager::*)()  const>(&G4ScoringManager::GetCurrentMesh));

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::CloseCurrentMesh() (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::CloseCurrentMesh()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:105:15
    t.method("CloseCurrentMesh", static_cast<void (G4ScoringManager::*)() >(&G4ScoringManager::CloseCurrentMesh));

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::SetVerboseLevel(G4int) (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::SetVerboseLevel(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:106:15
    t.method("SetVerboseLevel", static_cast<void (G4ScoringManager::*)(G4int) >(&G4ScoringManager::SetVerboseLevel));

    DEBUG_MSG("Adding wrapper for G4int G4ScoringManager::GetVerboseLevel() (" __HERE__ ")");
    // signature to use in the veto list: G4int G4ScoringManager::GetVerboseLevel()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:116:16
    t.method("GetVerboseLevel", static_cast<G4int (G4ScoringManager::*)()  const>(&G4ScoringManager::GetVerboseLevel));

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::RegisterScoringMesh(G4VScoringMesh *) (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::RegisterScoringMesh(G4VScoringMesh *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:118:15
    t.method("RegisterScoringMesh", static_cast<void (G4ScoringManager::*)(G4VScoringMesh *) >(&G4ScoringManager::RegisterScoringMesh));

    DEBUG_MSG("Adding wrapper for G4VScoringMesh * G4ScoringManager::GetMesh(G4int) (" __HERE__ ")");
    // signature to use in the veto list: G4VScoringMesh * G4ScoringManager::GetMesh(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:124:26
    t.method("GetMesh", static_cast<G4VScoringMesh * (G4ScoringManager::*)(G4int)  const>(&G4ScoringManager::GetMesh));

    DEBUG_MSG("Adding wrapper for const G4String & G4ScoringManager::GetWorldName(G4int) (" __HERE__ ")");
    // signature to use in the veto list: const G4String & G4ScoringManager::GetWorldName(G4int)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:125:26
    t.method("GetWorldName", static_cast<const G4String & (G4ScoringManager::*)(G4int)  const>(&G4ScoringManager::GetWorldName));

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::SetScoreWriter(G4VScoreWriter *) (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::SetScoreWriter(G4VScoreWriter *)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:130:15
    t.method("SetScoreWriter", static_cast<void (G4ScoringManager::*)(G4VScoreWriter *) >(&G4ScoringManager::SetScoreWriter));

    DEBUG_MSG("Adding wrapper for void G4ScoringManager::SetFactor(G4double) (" __HERE__ ")");
    // signature to use in the veto list: void G4ScoringManager::SetFactor(G4double)
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:139:15
    t.method("SetFactor", static_cast<void (G4ScoringManager::*)(G4double) >(&G4ScoringManager::SetFactor));
    t.method("SetFactor", [](G4ScoringManager& a)->void { a.SetFactor(); });
    t.method("SetFactor", [](G4ScoringManager* a)->void { a->SetFactor(); });

    DEBUG_MSG("Adding wrapper for G4double G4ScoringManager::GetFactor() (" __HERE__ ")");
    // signature to use in the veto list: G4double G4ScoringManager::GetFactor()
    // defined in /Users/mato/.julia/artifacts/c08a070cdc1b892bb33db4924fdac1694e77d3a1/include/Geant4/G4ScoringManager.hh:144:19
    t.method("GetFactor", static_cast<G4double (G4ScoringManager::*)()  const>(&G4ScoringManager::GetFactor));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4ScoringManager>> type_;
};
std::shared_ptr<Wrapper> newJlG4ScoringManager(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4ScoringManager(module));
}
