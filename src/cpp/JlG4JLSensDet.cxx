// this file was auto-generated by wrapit v1.6.0
#include "Wrapper.h"

#include "jlGeant4.h"
#include "dbg_msg.h"
#include "jlcxx/functions.hpp"
#include "jlcxx/stl.hpp"

namespace jlcxx {
  template<> struct IsMirroredType<G4JLSensDet> : std::false_type { };
  template<> struct DefaultConstructible<G4JLSensDet> : std::false_type { };
template<> struct SuperType<G4JLSensDet> { typedef G4VSensitiveDetector type; };
}

// Class generating the wrapper for type G4JLSensDet
// signature to use in the veto file: G4JLSensDet
struct JlG4JLSensDet: public Wrapper {

  JlG4JLSensDet(jlcxx::Module& jlModule): Wrapper(jlModule){
    DEBUG_MSG("Adding wrapper for type G4JLSensDet (" __HERE__ ")");
    // defined in cpp/Geant4Wrap.h:53:7
    jlcxx::TypeWrapper<G4JLSensDet>  t = jlModule.add_type<G4JLSensDet>("G4JLSensDet",
      jlcxx::julia_base_type<G4VSensitiveDetector>());
    type_ = std::unique_ptr<jlcxx::TypeWrapper<G4JLSensDet>>(new jlcxx::TypeWrapper<G4JLSensDet>(jlModule, t));
  }

  void add_methods() const{
    auto& t = *type_;


    DEBUG_MSG("Adding wrapper for void G4JLSensDet::G4JLSensDet(const G4String &, processhits_f, void *) (" __HERE__ ")");
    // defined in cpp/Geant4Wrap.h:55:5
    t.constructor<const G4String &, processhits_f, void *>(/*finalize=*/jlcxx::finalize_policy::no, jlcxx::arg("this"), jlcxx::arg("name"), jlcxx::arg("f"), jlcxx::arg("d")    );

    DEBUG_MSG("Adding wrapper for void G4JLSensDet::Initialize(G4HCofThisEvent *) (" __HERE__ ")");
    // signature to use in the veto list: void G4JLSensDet::Initialize(G4HCofThisEvent *)
    // defined in cpp/Geant4Wrap.h:62:18
    t.method("Initialize", [](G4JLSensDet& a, G4HCofThisEvent * arg0)->void { a.Initialize(arg0); }, jlcxx::arg("this"), jlcxx::arg("hc"));
    t.method("Initialize", [](G4JLSensDet* a, G4HCofThisEvent * arg0)->void { a->Initialize(arg0); }, jlcxx::arg("this"), jlcxx::arg("hc"));

    DEBUG_MSG("Adding wrapper for void G4JLSensDet::EndOfEvent(G4HCofThisEvent *) (" __HERE__ ")");
    // signature to use in the veto list: void G4JLSensDet::EndOfEvent(G4HCofThisEvent *)
    // defined in cpp/Geant4Wrap.h:63:18
    t.method("EndOfEvent", [](G4JLSensDet& a, G4HCofThisEvent * arg0)->void { a.EndOfEvent(arg0); }, jlcxx::arg("this"), jlcxx::arg("hc"));
    t.method("EndOfEvent", [](G4JLSensDet* a, G4HCofThisEvent * arg0)->void { a->EndOfEvent(arg0); }, jlcxx::arg("this"), jlcxx::arg("hc"));

    DEBUG_MSG("Adding wrapper for G4bool G4JLSensDet::ProcessHits(G4Step *, G4TouchableHistory *) (" __HERE__ ")");
    // signature to use in the veto list: G4bool G4JLSensDet::ProcessHits(G4Step *, G4TouchableHistory *)
    // defined in cpp/Geant4Wrap.h:64:20
    t.method("ProcessHits", [](G4JLSensDet& a, G4Step * arg0, G4TouchableHistory * arg1)->G4bool { return a.ProcessHits(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("s"), jlcxx::arg("h"));
    t.method("ProcessHits", [](G4JLSensDet* a, G4Step * arg0, G4TouchableHistory * arg1)->G4bool { return a->ProcessHits(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("s"), jlcxx::arg("h"));

    DEBUG_MSG("Adding wrapper for void G4JLSensDet::SetInitialize(initend_f, void *) (" __HERE__ ")");
    // signature to use in the veto list: void G4JLSensDet::SetInitialize(initend_f, void *)
    // defined in cpp/Geant4Wrap.h:65:10
    t.method("SetInitialize", [](G4JLSensDet& a, initend_f arg0, void * arg1)->void { a.SetInitialize(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("f"), jlcxx::arg("d"));
    t.method("SetInitialize", [](G4JLSensDet* a, initend_f arg0, void * arg1)->void { a->SetInitialize(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("f"), jlcxx::arg("d"));

    DEBUG_MSG("Adding wrapper for void G4JLSensDet::SetEndOfEvent(initend_f, void *) (" __HERE__ ")");
    // signature to use in the veto list: void G4JLSensDet::SetEndOfEvent(initend_f, void *)
    // defined in cpp/Geant4Wrap.h:66:10
    t.method("SetEndOfEvent", [](G4JLSensDet& a, initend_f arg0, void * arg1)->void { a.SetEndOfEvent(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("f"), jlcxx::arg("d"));
    t.method("SetEndOfEvent", [](G4JLSensDet* a, initend_f arg0, void * arg1)->void { a->SetEndOfEvent(arg0, arg1); }, jlcxx::arg("this"), jlcxx::arg("f"), jlcxx::arg("d"));
  }

private:
  std::unique_ptr<jlcxx::TypeWrapper<G4JLSensDet>> type_;
};
std::shared_ptr<Wrapper> newJlG4JLSensDet(jlcxx::Module& module){
  return std::shared_ptr<Wrapper>(new JlG4JLSensDet(module));
}
